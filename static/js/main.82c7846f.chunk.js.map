{"version":3,"sources":["Common/screw_header.svg","Cables/actions.js","actionTypes.js","Modules/actions.js","storeHelpers.js","Common/LabelPositions.js","Common/Port.js","Common/Knob.js","Modules/Components/styles.js","Modules/Components/VCO.js","Modules/lib.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Common/Switch.js","Modules/Components/Keyboard.js","Modules/Components/ADSR.js","Modules/Components/VCA.js","Modules/Components/VCFLowPass.js","Modules/Components/Multiples.js","Modules/Components/LFO.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","Synth/reducer.js","reducer.js","middleware.js","store.js","Common/Panel.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Synth/defaultPresets.js","Synth/actions.js","Common/IconButton.js","Synth/helpers/createPulseOscillator.js","Synth/Components/PresetManager.js","Synth/helpers/createVoltToHzConverter.js","Synth/helpers/createGate.js","Synth/Components/Synth.js","App.js","serviceWorker.js","index.js","Modules/Components sync /^/.//.*/.svg$","Modules/Components/pulse.svg","Synth/Components/rack_bg.svg","Common/port.svg","Common/knob.svg","Modules/Components/revsawtooth.svg","Modules/Components/sawtooth.svg","Modules/Components/sine.svg","Modules/Components/triangle.svg"],"names":["module","exports","addCable","type","portId","fromPoint","color","modifyCable","toPoint","toPortId","removeCable","changeOverPort","addModule","connectModules","output","input","disconnectModule","port","registerInputs","id","inputs","registerOutputs","outputs","setStartingPort","unsetStartingPort","moveModule","moduleId","x","rackId","removeModule","dispatch","getState","modules","connections","cables","removedModule","disconnectPorts","R","cablePortId","useAction","action","useDispatch","useCallback","LABEL_POSITIONS","HIDE","ABOVE","BELOW","LEFT","RIGHT","Port","label","labelPosition","portType","startingPort","useSelector","connection","modulesActions","cablesActions","fullPortId","useMemo","imgElem","useRef","useEffect","fromPortCable","current","getBoundingClientRect","y","width","height","window","scrollY","toPortCable","portLabel","className","cx","disabled","onMouseDown","e","stopPropagation","randomColor","luminosity","onMouseUp","ref","onMouseEnter","onMouseLeave","preventDefault","src","require","alt","Knob","onChange","max","min","value","step","useState","isMoving","setIsMoving","imgRef","handleMouseMove","buttons","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","removeEventListener","style","display","flexDirection","cursor","margin","transform","Container","styled","div","Body","SpaceAround","Grid","prop","GridCell","container","body","flex","justifyContent","spaceAround","createOscillator","audioContext","oscillator","frequency","OSCILLATOR_TYPES","Sawtooth","Pulse","Triangle","Sine","VCO","viewMode","actions","setFrequency","tune","setTune","pw","setPw","pwmCv2","setPwmCv2","fmCv","setFmCv","pulse","createPulseOscillator","oscillators","frequencyControl","createVoltToHzConverter","detuneControl","createConstantSource","volt","offset","cv2Gain","createGain","gain","connect","o","detune","pwCvGain2","start","audioNode","disconnect","handleFrequencyChange","handleTuneChange","handlePwChange","handlePwmCvChange","handleFmCvChange","marginBottom","gridTemplateRows","column","row","osc","key","toLowerCase","isBrowserSupported","OscillatorNode","ConstantSourceNode","panelWidth","title","useConnections","StereoAudioInterface","leftPanner","StereoPannerNode","pan","rightPanner","destination","Left","Right","styles","MonoAudioInterface","In","vertical","LabelsContainer","size","css","Label","span","HandlerContainer","Handler","handlerSize","position","Switch","options","setPosition","ranges","result","i","length","push","newPos","moveHandler","pos","newVal","range","abs","handleSpaceMouseDown","handleHandlerMouseDown","map","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","calculateNoteVolt","noteIndex","octave","Keyboard","setOctave","cv","setCv","keyboardDown","setKeyboardDown","gate","CV","Gate","handleKeyDown","handleKeyUp","handleKeyboardDown","event","keyCodeIndex","keyCode","handleKeyboardUp","onkeydown","onkeyup","handleOctaveChange","note","isBlackKey","endsWith","gridRow","alignSelf","gridColumn","backgroundColor","TIME_RANGE","convertKnobValueToTime","pow","ADSR","setGate","attack","setAttack","decay","setDecay","sustain","setSustain","release","setRelease","setRange","adsr","inverese","createGate","retrigger","generateEnvelope","convAttack","convDecay","convRelease","now","currentTime","adsrOffset","invereseOffset","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","handleGateInChange","hadnleRetrigger","gateChange","Retrigger","Out1","Out2","Inverse","VCA","setGain","cv2","setCv2","in1","setIn1","in2","setIn2","out","setOut","gainVolume","input1Gain","input2Gain","outputGain","vca","AudioIn1","AudioIn2","CV1","CV2","AudioOut","GainNode","VCFLowPass","q","setQ","setCv2Gain","cv3Gain","setCv3Gain","vcf","createBiquadFilter","cv3","Q","CV3","Out","maxValue","sampleRate","numberOfOctaves","log","LN2","multiplier","Number","handleQChange","handleCv2GainChange","handleCv3GainChange","fontSize","BiquadFilterNode","Multiples","A","B","groupsInput","setGroupsInput","groupA","groupB","createGroupInputs","group","groupInputs","moduleGroup","createGroupOutputs","groupOutpus","renderGroup","isInput","portProps","FREQ_RANGE","mapIndexed","RevSawtooth","LFO","revSawtoothWave","createPeriodicWave","DroppedSaw","real","imag","setPeriodicWave","newFreq","marginTop","icon","MODULE_TYPE","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","VCF_LOW_PASS","MULTIPLES","moduleCounters","createModule","undefined","Module","Error","removeLastConnection","handleActions","state","left","newModule","sortedModules","cur","findFreeSpace","audioContextInitiliazed","maxLeft","alert","Object","defineProperty","get","counter","prevLeft","moduleWidth","newLeft","newRight","innerWidth","otherRackId","right","lastValue","racks","overPort","setDirty","isDirty","presetLoading","combineReducers","rack","middleware","next","lastInput","lastOutput","preset","inputConnections","inputModuleId","inputPortId","localStorage","setItem","JSON","stringify","middlewareChain","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","createStore","reducer","Screw","EdgeContainer","PanelEdge","children","PanelContainer","dragging","RemoveModuleButton","PanelContent","Overlay","Panel","props","setDragging","onTrashMouseDown","onClick","ModuleWrapper","Tooltip","ReactTooltip","ModulePicker","onClose","handleAdd","pipe","values","data-tip","place","multiline","calculateMidpoint","lowestPoint","highestPoint","midpointY","distance","midpointX","Cable","d","opacity","stroke","fill","strokeWidth","CablesContainer","scrollLeft","scrollTop","top","pointerEvents","cable","Basic","savePreset","connectModulesAndCables","fromPortId","fromElem","getElementById","toElem","loadPreset","setTimeout","checkIfAllModulesRemoves","checkIfModulesCreated","stateModuleIds","moduleIds","checkIfAllConnected","stateConnections","stateConnection","IconButton","FontAwesomeIcon","PresetSelect","Select","PresetManager","setPreset","presetOptions","defaultPresets","handlePresetChange","handleLoadPreset","getItem","parse","placeholder","pulseCurve","Float32Array","constantOneCurve","node","this","pulseShaper","createWaveShaper","curve","widthGain","constantOneShaper","apply","arguments","createVoltToFreqExpCurve","memoizeWith","identity","baseFrequency","octaves","normalized","voltToFreqWaveshaper","voltScale","createScriptProcessor","gateOn","onaudioprocess","buffer","inputBuffer","getChannelData","SynthContainer","Rack","rackBg","TopBar","Synth","cablesAction","draggingModuleId","setDraggingModuleId","setScrollLeft","setScrollTop","activeRackId","setActiveRackId","setAudioContext","displayPicker","setDisplayPicker","onscroll","newAudioContext","AudioContext","webkitAudioContext","moveCable","dragModule","handleDragging","isDragging","handleRackScroll","target","onMouseMove","onScroll","library","add","faTrash","faArrowLeft","faPlusCircle","faFileUpload","faFileDownload","App","store","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","webpackContext","req","webpackContextResolve","__webpack_require__","code","keys","resolve"],"mappings":"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","file":"static/js/main.82c7846f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, fromPoint, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    fromPoint,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});\n\nexport const changeOverPort = portId => ({\n    type: ActionTypes.CHANGE_OVER_PORT,\n    portId\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\nexport const REMOVE_ALL_MODULES = 'REMOVE_ALL_MODULES';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\nexport const CHANGE_OVER_PORT = 'CHANGE_OVER_PORT';\n\nexport const LOAD_PRESET_START = 'LOAD_PRESET_START';\nexport const LOAD_PRESET_FINISH = 'LOAD_PRESET_FINISH';\nexport const SAVE_PRESET = 'SAVE_PRESET';","import * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\nimport { removeCable } from '../Cables/actions';\n\nexport const addModule = module => ({\n    type: ActionTypes.ADD_MODULE,\n    module\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x, rackId) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x,\n    rackId\n});\n\nexport const removeModule = moduleId => (dispatch, getState) => {\n    const { modules: { modules, connections }, cables: { cables } } = getState();\n    const removedModule = modules[moduleId];\n    if (!removedModule) return;\n\n    const disconnectPorts =\n        R.pipe(\n            R.keys,\n            R.filter(portId => R.path([moduleId, portId], connections)),\n            R.forEach(portId => {\n                dispatch(disconnectModule({ moduleId, portId }));\n                let cablePortId = `${moduleId}-${portId}`;\n                if (!cables[cablePortId])\n                {\n                    cablePortId = R.pipe(\n                        R.filter(R.propEq('toPortId', cablePortId)),\n                        R.keys,\n                        R.head\n                    )(cables);\n                }\n                dispatch(removeCable(cablePortId));\n            })\n        );\n\n    if (removedModule.inputs)\n    {\n        disconnectPorts(removedModule.inputs);\n    }\n    if (removedModule.outputs)\n    {\n        disconnectPorts(removedModule.outputs);\n    }\n    dispatch({\n        type: ActionTypes.REMOVE_MODULE,\n        moduleId\n    })\n};\n\nexport const removeAllModules = () => (dispatch, getState) => {\n    R.pipe(\n        R.keys,\n        R.map(moduleId => dispatch(removeModule(moduleId)))\n    )(getState().modules.modules);\n    dispatch({ type: ActionTypes.REMOVE_ALL_MODULES });\n};","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as R from 'ramda';\n\nexport function useAction(action) {\n    const dispatch = useDispatch();\n    return useCallback(R.pipe(action, dispatch), [action, dispatch]);\n}","const LABEL_POSITIONS = {\n    HIDE: 'HIDE',\n    ABOVE: 'ABOVE',\n    BELOW: 'BELOW',\n    LEFT: 'LEFT',\n    RIGHT: 'RIGHT'\n}\nexport default LABEL_POSITIONS;","import React, { useEffect, useRef, useMemo } from 'react';\nimport * as R from 'ramda';\nimport { useSelector } from 'react-redux';\nimport * as modulesActions from '../Modules/actions';\nimport * as cablesActions from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\nimport { useAction } from '../storeHelpers';\nimport LABEL_POSITIONS from './LabelPositions';\n\nconst Port = ({ label, labelPosition = LABEL_POSITIONS.ABOVE, portId, moduleId, portType }) => {\n    const startingPort = useSelector(R.path(['modules', 'startingPort']));\n    const connection = useSelector(R.path(['modules', 'connections', moduleId, portId]));\n    const cables = useSelector(R.pipe(R.path(['cables', 'cables']), R.values));\n\n    const connectModules = useAction(modulesActions.connectModules);\n    const disconnectModule = useAction(modulesActions.disconnectModule);\n    const setStartingPort = useAction(modulesActions.setStartingPort);\n    const unsetStartingPort = useAction(modulesActions.unsetStartingPort);\n    const addCable = useAction(cablesActions.addCable);\n    const removeCable = useAction(cablesActions.removeCable);\n    const modifyCable = useAction(cablesActions.modifyCable);\n    const changeOverPort = useAction(cablesActions.changeOverPort);\n\n    const fullPortId = useMemo(() => `${moduleId}-${portId}`, [moduleId, portId]);\n\n    const imgElem = useRef(null);\n\n    useEffect(() => {\n        const fromPortCable = R.find(R.whereEq({ portId: fullPortId }), cables);\n        if (fromPortCable) {\n            const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n            modifyCable({\n                portId: fromPortCable.portId,\n                fromPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n            });\n        }\n        else {\n            const toPortCable = R.find(R.whereEq({ toPortId: fullPortId }), cables);\n            if (toPortCable) {\n                const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n                modifyCable({\n                    portId: toPortCable.portId,\n                    toPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n                });\n            }\n        }\n    }, [connection]);\n\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connection) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n\n        addCable({\n            portId: fullPortId,\n            fromPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId)) {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n\n        if (connection &&\n            (connection.moduleId !== startingPort.moduleId || connection.portId !== startingPort.portId)) {\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n            removeCable(fullPortId);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2, y: y + height / 2 },\n            toPortId: fullPortId\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    const portLabel = R.isNil(label) ? portId : label;\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n    >\n        {labelPosition === LABEL_POSITIONS.ABOVE && portLabel}\n        <img id={fullPortId} height=\"30\" width=\"30\" ref={imgElem}\n            onMouseEnter={() => changeOverPort(fullPortId)}\n            onMouseLeave={() => changeOverPort(null)}\n            onMouseDown={e => e.preventDefault()} src={require('./port.svg')} alt={fullPortId} />\n        {labelPosition === LABEL_POSITIONS.BELOW && portLabel}\n    </div>;\n};\n\nexport default Port;","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport LABEL_POSITIONS from './LabelPositions';\n\nconst MAX_ANGLE = 150;\n\nconst Knob = ({ onChange, max, min, value, step, label, labelPosition = LABEL_POSITIONS.ABOVE, height = 50, width = 50 }) => {\n    const [isMoving, setIsMoving] = useState(false);\n    const imgRef = useRef(null);\n\n    const handleMouseMove = useCallback((e) => {\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = imgRef.current.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;\n        if (angle > 2.1 * MAX_ANGLE) angle = 0;\n\n        const ratio = angle / (2 * MAX_ANGLE);\n        let newValue = ratio * (max - min) + min;\n        newValue = Math.floor(newValue / step) * step;\n        if (newValue > max) newValue = max;\n        onChange(newValue);\n    }, [isMoving, min, max, onChange, step]);\n\n    const handleMouseDown = useCallback((e) => {\n        e.stopPropagation();\n        setIsMoving(true);\n    }, []);\n\n    const handleMouseUp = useCallback(() => {\n        setIsMoving(false);\n    }, []);\n\n    const calculateValueAngle = useCallback(() => {\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }, [min, max, value]);\n\n    useEffect(() => {\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [handleMouseUp, handleMouseMove]);\n\n    return <div style={{\n        display: 'flex',\n        flexDirection: labelPosition === LABEL_POSITIONS.RIGHT || labelPosition === LABEL_POSITIONS.LEFT ? 'row' : 'column'\n    }}\n    >\n        {(labelPosition === LABEL_POSITIONS.ABOVE || labelPosition === LABEL_POSITIONS.LEFT) && label}\n        <img ref={imgRef}\n            style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${calculateValueAngle()}deg)` }}\n            onMouseDown={handleMouseDown}\n            alt='knob' src={require('./knob.svg')} height={height} width={width} />\n        {(labelPosition === LABEL_POSITIONS.BELOW || labelPosition === LABEL_POSITIONS.RIGHT) && label}\n    </div>;\n};\n\nexport default Knob;","import styled from 'styled-components';\nimport { prop } from 'ramda';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%\n`;\n\nexport const Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    justify-content: space-evenly;\n`;\n\nexport const SpaceAround = styled.div`\n    display: flex;\n    justify-content: space-around;\n`;\n\nexport const Grid = styled.div`\n    display: grid;\n    flex: 1;\n    grid-template-rows: ${prop('gridTemplateRows')};\n    margin-top: ${prop('marginTop')}px;\n    margin-bottom: ${prop('marginBottom')}px;\n    margin-left: ${prop('marginLeft')}px;\n    margin-right: ${prop('marginRight')}px;\n`;\n\nexport const GridCell = styled.div`\n    grid-column: ${prop('column')};\n    grid-row: ${prop('row')};\n`;\n\nexport default {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-evenly'\n    },\n    spaceAround: {\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n};","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport LABEL_POSITIONS from 'Common/LabelPositions';\nimport Knob from 'Common/Knob';\nimport { Container, Body, SpaceAround, Grid, GridCell } from './styles';\nimport { useAction } from 'storeHelpers';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nconst OSCILLATOR_TYPES = {\n    Sawtooth: 'Sawtooth',\n    Pulse: 'Pulse',\n    Triangle: 'Triangle',\n    Sine: 'Sine'\n};\n\nconst VCO = ({ id, audioContext, viewMode }) => {\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0);\n    const [tune, setTune] = useState(0);\n    const [pw, setPw] = useState(0);\n    const [pwmCv2, setPwmCv2] = useState(0);\n    const [fmCv, setFmCv] = useState(0);\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        const oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            Pulse: pulse,\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Sine: createOscillator(audioContext, 'sine'),\n        };\n\n        const frequencyControl = audioContext.createVoltToHzConverter(440, 4);\n        const detuneControl = audioContext.createConstantSource();\n        frequencyControl.volt.value = 0;\n        detuneControl.offset.value = 0;\n\n        const cv2Gain = audioContext.createGain();\n        cv2Gain.gain.value = 0;\n        cv2Gain.connect(frequencyControl.volt);\n        R.forEachObjIndexed(o => frequencyControl.connect(o.frequency))(oscillators);\n        R.forEachObjIndexed(o => detuneControl.connect(o.detune))(oscillators);\n\n        const pwCvGain2 = audioContext.createGain();\n        pwCvGain2.gain.value = 0;\n        pwCvGain2.connect(oscillators.Pulse.width);\n\n        R.forEachObjIndexed(o => o.start())(oscillators);\n        frequencyControl.start();\n        detuneControl.start();\n\n        return { oscillators, frequencyControl, detuneControl, cv2Gain, pwCvGain2 };\n    }, [audioContext, viewMode]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            'CV1': {\n                connect: audioNode => audioNode.connect(module.frequencyControl.volt),\n                disconnect: audioNode => audioNode.disconnect(module.frequencyControl.volt)\n            },\n            'PWCV1': {\n                connect: audioNode => audioNode.connect(module.oscillators.Pulse.width),\n                disconnect: audioNode => audioNode.disconnect(module.oscillators.Pulse.width)\n            },\n            'PWCV2': {\n                connect: audioNode => audioNode.connect(module.pwCvGain2),\n                disconnect: audioNode => audioNode.disconnect(module.pwCvGain2)\n            },\n            'CV2': {\n                connect: audioNode => audioNode.connect(module.cv2Gain),\n                disconnect: audioNode => audioNode.disconnect(module.cv2Gain)\n            }\n        });\n        registerOutputs(id, {\n            Sawtooth: module.oscillators.Sawtooth,\n            Pulse: module.oscillators.Pulse,\n            Triangle: module.oscillators.Triangle,\n            Sine: module.oscillators.Sine\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(value);\n        module.frequencyControl.volt.value = value;\n    }, [module]);\n\n    const handleTuneChange = useCallback((value) => {\n        setTune(value);\n        module.detuneControl.offset.value = value;\n    }, [module]);\n\n    const handlePwChange = useCallback((value) => {\n        setPw(value);\n        module.oscillators.Pulse.width.value = value;\n    }, [module]);\n\n    const handlePwmCvChange = useCallback((value) => {\n        setPwmCv2(value);\n        module.pwCvGain2.gain.value = value;\n    }, [module]);\n\n    const handleFmCvChange = useCallback((value) => {\n        setFmCv(value);\n        module.cv2Gain.gain.value = value;\n    }, [module]);\n\n    return <Container>\n        <span style={{ marginBottom:4 }}>VCO</span>\n        <Body>\n            <Grid gridTemplateRows='22px auto'>\n                <GridCell column={1} row={2}>\n                    <Port portId='CV1' moduleId={id} portType='input' />\n                </GridCell>\n                <GridCell column={1} row={3}>\n                    <Port portId='CV2' moduleId={id} portType='input' />\n                </GridCell>\n                <GridCell column={1} row={4}>\n                    <Port portId='PWCV1' moduleId={id} portType='input' />\n                </GridCell>\n                <GridCell column={1} row={5}>\n                    <Port portId='PWCV2' moduleId={id} portType='input' />\n                </GridCell>\n\n                <GridCell column={2} row={1}>\n                    <Knob label='Range' labelPosition={LABEL_POSITIONS.RIGHT} min={-4} max={4} step={1} value={frequency} width={20} height={20} onChange={handleFrequencyChange} />\n                </GridCell>\n                <GridCell column='2/4' row={2}>\n                    <Knob label='Tune' min={-600} max={600} step={1} value={tune} width={30} height={30} onChange={handleTuneChange} />\n                </GridCell>\n                <GridCell column='2/4' row={3}>\n                    <Knob label='CV2' min={0} max={1} step={0.005} value={fmCv} width={30} height={30} onChange={handleFmCvChange} />\n                </GridCell>\n                <GridCell column='2/4' row={4}>\n                    <Knob label='PW' min={-1} max={1} step={0.001} value={pw} width={30} height={30} onChange={handlePwChange} />\n                </GridCell>\n                <GridCell column='2/4' row={5}>\n                    <Knob label='PW CV2' min={0} max={1} step={0.005} value={pwmCv2} width={30} height={30} onChange={handlePwmCvChange} />\n                </GridCell>\n            </Grid>             \n            <SpaceAround>\n                {\n                    R.pipe(\n                        R.keys,\n                        R.map(osc =>\n                            <Port key={osc} label={<img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc} />}\n                                labelPosition={LABEL_POSITIONS.BELOW} portId={osc} moduleId={id} portType='output' />)\n                    )(OSCILLATOR_TYPES)\n                }\n            </SpaceAround>\n        </Body>\n    </Container>;\n};\n\nVCO.isBrowserSupported = typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined';\nVCO.panelWidth = 10;\nVCO.title = `\nStandard VCO<br/>\nVoltage Controlled Oscillator<br/>\nIt can produce four waveforms simultaneously:<br/>\nrectangle, sawtooth, triangle, and sine wave\n`\n\nexport default VCO;","import { useSelector } from 'react-redux';\nimport * as R from 'ramda';\n\nexport function getFirstAudioParam(audioNode)\n{\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            return audioNode[p];\n        }\n    }\n    return null;\n}\n\nexport function useConnections(id) {\n    return useSelector(R.path(['modules', 'connections', id]));    \n}","import React, { useEffect, useMemo } from 'react';\nimport Port from 'Common/Port';\nimport styles from './styles';\nimport * as actions from '../actions';\nimport { useConnections } from '../lib';\nimport { useAction } from 'storeHelpers';\n\nconst StereoAudioInterface = ({ id, audioContext, viewMode }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);    \n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const leftPanner = new StereoPannerNode(audioContext, { pan: -1 });\n        const rightPanner = new StereoPannerNode(audioContext, { pan: 1 });\n        leftPanner.connect(audioContext.destination);\n        rightPanner.connect(audioContext.destination);\n        return { leftPanner, rightPanner };\n    }, [audioContext, viewMode])\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(module.leftPanner),\n                disconnect: audioNode => audioNode.disconnect(module.leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(module.rightPanner),\n                disconnect: audioNode => audioNode.disconnect(module.rightPanner)\n            }\n        });\n    }, [module, id, registerInputs]);\n\n    return <div style={styles.container}>\n            <span>Stereo</span>\n            <div style={styles.body}>\n                <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n};\n\nStereoAudioInterface.isBrowserSupported = typeof StereoPannerNode !== 'undefined';\nStereoAudioInterface.panelWidth = 4;\nStereoAudioInterface.title = `\nStereo Audio Interface<br/>\nSends stereo audio to the computer's audio interface\n`;\n\nexport default StereoAudioInterface;","import React, { useEffect } from 'react';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport styles from './styles';\nimport { useConnections } from '../lib';\nimport { useAction } from 'storeHelpers';\n\nconst MonoAudioInterface = ({ id, audioContext, viewMode }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);    \n\n    useEffect(() => {\n        if (viewMode) return;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(audioContext.destination)\n            }\n        })\n    }, [id, registerInputs, audioContext, viewMode]);\n\n    return <div style={styles.container}>\n            <span>Mono</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n};\n\nMonoAudioInterface.isBrowserSupported = true;\nMonoAudioInterface.panelWidth = 4;\nMonoAudioInterface.title = `\nMono Audio Interface<br/>\nSends audio to the computer's audio interface\n`;\n\nexport default MonoAudioInterface;","import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport * as R from 'ramda';\nimport styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: ${({ vertical }) => vertical ? 'row': 'column' };\n    align-items: center;\n    justify-content: center;\n`;\n\nconst LabelsContainer = styled.div`\n    display: flex;\n    flex-direction: ${({ vertical }) => vertical ? 'column': 'row' };\n    justify-content: space-between;\n    ${({ vertical, size }) =>\n        vertical ?\n        css`height: ${size + 10}px;` :\n        css`width: ${size + 10}px;`\n    }\n`;\n\nconst Label = styled.span`\n    font-size: 10px; \n    flex: 1;\n`;\n\nconst HandlerContainer = styled.div`\n    background-color: black;\n    width: ${({ vertical, size }) => vertical ? 10 : size}px;\n    height: ${({ vertical, size }) => vertical ? size : 10}px;\n    cursor: pointer;\n    position: relative;\n`;\n\nconst Handler = styled.div`        \n    width: ${({ vertical, handlerSize }) => vertical ? 10 : handlerSize}px;\n    height: ${({ vertical, handlerSize }) => vertical ? handlerSize : 10}px;\n    background-color: gray;\n    position: absolute;\n    transition: ${({ vertical }) => vertical ? 'top': 'left' } .2s;\n    ${({ vertical, position }) =>\n        vertical ?\n        css`top: ${position}px;` :\n        css`left: ${position}px;`\n    }\n`;\n\nconst Switch = ({ value, onChange, options, vertical = false, size = 30, handlerSize = 5 }) => {\n    \n    const [position, setPosition] = useState(0);\n    const [isMoving, setIsMoving] = useState(false);\n\n    const ref = useRef(null);    \n\n    const ranges = useMemo(() => {\n        const result = [handlerSize/2];\n        for (let i = 1; i < options.length - 1; i++)\n        {\n            result.push(size / (options.length - 1) * i);\n        }\n        result.push(size - handlerSize / 2);\n        return result;\n    }, [options, size, handlerSize]);\n\n    useEffect(() => {\n        let newPos = R.findIndex(R.whereEq({ value }), options) * (size / (options.length - 1)) - handlerSize / 2;\n        newPos = Math.min(Math.max(0, newPos), size - handlerSize);\n        setPosition(newPos);\n    }, [value, options, size, handlerSize]);\n\n    const moveHandler = useCallback(e => {\n        const pos = e[vertical ? 'clientY': 'clientX'] - ref.current.getBoundingClientRect()[vertical ? 'y' : 'x'];\n        const newVal = R.findIndex(range => Math.abs(pos - range) <= handlerSize / 2, ranges);\n        if (newVal !== -1)\n        {\n            onChange(options[newVal].value);\n        }\n    }, [ranges, handlerSize, onChange, options, vertical]);\n\n    const handleSpaceMouseDown = useCallback(e => {\n        e.stopPropagation();\n        moveHandler(e);\n    }, [moveHandler]);\n    \n    const handleHandlerMouseDown = useCallback((e) => {\n        e.stopPropagation();\n        setIsMoving(true);\n    }, []);\n\n    const handleMouseUp = useCallback(() => {\n        setIsMoving(false);\n    }, []);\n\n    const handleMouseMove = useCallback((e) => {\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        moveHandler(e);        \n    }, [isMoving, moveHandler]);\n\n    useEffect(() => {\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [handleMouseUp, handleMouseMove]);\n    \n    return <Container vertical={vertical}>\n        <LabelsContainer size={size} vertical={vertical}>\n            { options.map(({ value, label }) => <Label key={value}>{label}</Label>) }\n        </LabelsContainer>        \n        <HandlerContainer size={size} vertical={vertical} onMouseDown={handleSpaceMouseDown} ref={ref}>\n                <Handler position={position} vertical={vertical} handlerSize={handlerSize} onMouseDown={handleHandlerMouseDown}/>            \n        </HandlerContainer>\n    </Container>;\n}\n\nexport default Switch;","import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport Switch from 'Common/Switch';\nimport styles from './styles';\nimport { useConnections } from '../lib';\nimport { useAction } from 'storeHelpers';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\nconst Keyboard = ({ id, audioContext, viewMode }) => {\n    const connections = useConnections(id);    \n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [octave, setOctave] = useState(4);\n    const [cv, setCv] = useState(0);\n    const [keyboardDown, setKeyboardDown] = useState(false);\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const gate = audioContext.createConstantSource();\n        gate.offset.value = 0;\n        gate.start();\n        const cv = audioContext.createConstantSource();\n        cv.offset.value = 0;\n        cv.start();\n\n        return { gate, cv };\n    }, [audioContext, viewMode]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerOutputs(id, {\n            CV: module.cv,\n            Gate: module.gate\n        });\n    }, [id, module, registerOutputs]);\n\n    useEffect(() => {\n        if (module) module.cv.offset.value = cv;\n    }, [module, cv]);\n\n    const handleKeyDown = useCallback((cv) => {        \n        setCv(cv);\n        module.gate.offset.value = 1;\n    }, [module]);\n\n    const handleKeyUp = useCallback(() => {\n        module.gate.offset.value = 0;\n    }, [module]);\n    \n    const handleKeyboardDown = useCallback((event) => {    \n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!keyboardDown && keyCodeIndex !== -1) {\n            setKeyboardDown(false);\n            handleKeyDown(calculateNoteVolt(keyCodeIndex, octave));\n        }\n    }, [keyboardDown, handleKeyDown, octave]);\n\n    const handleKeyboardUp = useCallback(() => {\n        setKeyboardDown(false);\n        handleKeyUp();\n    }, [handleKeyUp]);\n\n    useEffect(() => {\n        if (viewMode) return;\n        document.onkeydown = handleKeyboardDown;\n        document.onkeyup = handleKeyboardUp;\n    }, [handleKeyboardDown, handleKeyboardUp]);\n\n    const handleOctaveChange = useCallback(value => {        \n        const cv = module.cv.offset.value;\n        setCv(cv + value - octave);\n        setOctave(value);\n    }, [module, octave]);\n\n    return <div style={styles.container}>\n            <span>&#181;Keyboard</span>\n            <div style={styles.body}>\n                Octave\n                <Switch value={octave}\n                        onChange={handleOctaveChange}\n                        size={60}\n                        options={[\n                            {value: 2, label: '-2'},\n                            {value: 3, label: '-1'},\n                            {value: 4, label: '0'},\n                            {value: 5, label: '+1'},\n                            {value: 6, label: '+2'},\n                        ]}/>                \n                <div style={{ display: 'grid', flex: 1 }}>\n                    {\n                        NOTES.map((note, i) => {\n                                const isBlackKey = note.endsWith('#');\n                                const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                                return [\n                                    <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                    <button key={`${note}${i}`}\n                                            onMouseDown={e => {\n                                                e.stopPropagation();\n                                                handleKeyDown(calculateNoteVolt(i, octave));\n                                            }}\n                                            onMouseUp={handleKeyUp}\n                                            style={{ height:20, width:20,\n                                                gridRow,\n                                                alignSelf: 'center',\n                                                gridColumn: isBlackKey ? 3 : 2,\n                                                backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                                ];\n                            }\n                        )\n                    }\n                </div>\n                <div style={styles.spaceAround}>\n                    <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n};\n\nKeyboard.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nKeyboard.panelWidth = 8;\nKeyboard.title = `\nMicro Keyboard<br/>\n1 octave micro keyboard and a five-position octave switch.<br/>\nUsed to generate 1V/Octave CV signal.\n`;\n\nexport default Keyboard;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport Knob from 'Common/Knob';\nimport { useConnections } from '../lib';\nimport { Grid, GridCell, Container } from './styles';\nimport { useAction } from 'storeHelpers';\nimport Switch from \"Common/Switch\";\n\n const TIME_RANGE = {\n    LOW: 'LOW',\n    MEDIUM: 'MEDIUM',\n    HIGH: 'HIGH'\n};\n\nconst convertKnobValueToTime = (value, range) => {    \n    switch (range) {\n        case TIME_RANGE.LOW:\n            return Math.pow(value, 4) * 0.0001 + 0.000001;\n        case TIME_RANGE.MEDIUM:\n            return Math.pow(value, 4) * 2 + 0.000401;            \n        case TIME_RANGE.HIGH:\n        default:\n            return Math.pow(value, 4) * 120 + 0.020001;\n    }\n}\n\nconst ADSR = ({ id, audioContext, viewMode }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [gate, setGate] = useState(0);\n    const [attack, setAttack] = useState(0.5);\n    const [decay, setDecay] = useState(0.5);\n    const [sustain, setSustain] = useState(0.5);\n    const [release, setRelease] = useState(0.5);\n    const [range, setRange] = useState(TIME_RANGE.MEDIUM);\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const adsr = audioContext.createConstantSource();\n        const inverese = audioContext.createConstantSource();\n        const gate = audioContext.createGate();\n        const retrigger = audioContext.createGate();\n        adsr.offset.value = 0;\n        adsr.start();\n        inverese.offset.value = 0;\n        inverese.start();\n        return { adsr, inverese, gate, retrigger };\n    }, [audioContext, viewMode]);    \n\n    const generateEnvelope = useCallback(value => {\n        if (!module) return;\n        \n        const convAttack = convertKnobValueToTime(attack, range) + 0.01;\n        const convDecay = convertKnobValueToTime(decay, range);\n        const convRelease = convertKnobValueToTime(release, range);\n        const now = audioContext.currentTime;\n        const adsrOffset = module.adsr.offset;\n        const invereseOffset = module.inverese.offset;\n\n        if (value === 1) {            \n            adsrOffset.cancelScheduledValues(now);\n            adsrOffset.setValueAtTime(adsrOffset.value, now);\n            adsrOffset.linearRampToValueAtTime(1, now + convAttack);\n            adsrOffset.linearRampToValueAtTime(sustain, now + convAttack + convDecay);\n\n            invereseOffset.cancelScheduledValues(now);\n            invereseOffset.setValueAtTime(invereseOffset.value, now);\n            invereseOffset.linearRampToValueAtTime(-1, now + convAttack);\n            invereseOffset.linearRampToValueAtTime(-1 * sustain, now + convAttack + convDecay);\n        } else if (value === 0) {\n            adsrOffset.cancelScheduledValues(now);\n            adsrOffset.setValueAtTime(adsrOffset.value, now);\n            adsrOffset.linearRampToValueAtTime(0, now + convRelease);\n\n            invereseOffset.cancelScheduledValues(now);\n            invereseOffset.setValueAtTime(invereseOffset.value, now);\n            invereseOffset.linearRampToValueAtTime(0, now + convRelease);\n        }\n    }, [module, attack, decay, sustain, release, audioContext, range]);\n\n    const handleGateInChange = useCallback(value => {                \n        setGate(value);\n        generateEnvelope(value);\n    }, [generateEnvelope]);\n\n    const hadnleRetrigger = useCallback(value => {\n        if (gate === 1)\n        {\n            generateEnvelope(value);\n        }\n    }, [gate, generateEnvelope]);\n\n    useEffect(() => {\n        if (!module) return;\n        module.gate.gateChange = handleGateInChange;\n    }, [module, handleGateInChange]);\n    useEffect(() => {\n        if (!module) return;\n        module.retrigger.gateChange = hadnleRetrigger;\n    }, [module, hadnleRetrigger]);\n\n    useEffect(() => {\n        if (!module) return;\n        window.adsr = module;\n        registerInputs(id, {\n            Gate: {\n                connect: audioNode => audioNode.connect(module.gate),\n                disconnect: audioNode => audioNode.disconnect(module.gate)\n            },\n            Retrigger: {\n                connect: audioNode => audioNode.connect(module.retrigger),\n                disconnect: audioNode => audioNode.disconnect(module.retrigger)\n            }\n        });\n        registerOutputs(id, {\n            Out1: module.adsr,\n            Out2: module.adsr,\n            Inverse: module.inverese\n        });\n    }, [module, registerInputs, registerOutputs, id]);\n\n    return <Container>\n        <span>ADSR</span>\n        <Grid>\n            <GridCell column={1} row={1}>\n                <Port portId='Gate' connections={connections} moduleId={id} portType='input' />\n            </GridCell>\n            <GridCell column={1} row={2}>    \n                <Port label='Retrig.' portId='Retrigger' connections={connections} moduleId={id} portType='input' />            \n            </GridCell>\n            <GridCell column={1} row={3}>\n                <Port label='Output' portId='Out1' connections={connections} moduleId={id} portType='output' />\n            </GridCell>\n            <GridCell column={1} row={4}>\n                <Port label='Output' portId='Out2' connections={connections} moduleId={id} portType='output' />\n            </GridCell>\n            <GridCell column={1} row={5}>\n                <Port label='Inverse Output' portId='Inverse' connections={connections} moduleId={id} portType='output' />\n            </GridCell>\n\n            <GridCell column={2} row={1}>\n                <Knob min={0} max={1} step={0.001} value={attack} label='A'\n                    onChange={setAttack}\n                    width={30} height={30} />\n            </GridCell>\n            <GridCell column={2} row={2}>\n                <Knob min={0} max={1} step={0.001} value={decay} label='D'\n                    onChange={setDecay}\n                    width={30} height={30} />\n            </GridCell>\n            <GridCell column={2} row={3}>\n                <Knob min={0} max={1} step={0.01} value={sustain} label='S'\n                    onChange={setSustain}\n                    width={30} height={30} />\n            </GridCell>\n            <GridCell column={2} row={4}>\n                <Knob min={0} max={1} step={0.001} value={release} label='R'\n                    onChange={setRelease}\n                    width={30} height={30} />\n            </GridCell>\n            <GridCell column={2} row={5}>                \n                <Switch value={range}\n                        onChange={setRange}\n                        options={[\n                            { value: TIME_RANGE.LOW, label: 'L' },\n                            { value: TIME_RANGE.MEDIUM, label: 'M' },\n                            { value: TIME_RANGE.HIGH, label: 'H' }\n                        ]}\n                />\n                Time<br />\n                Range\n            </GridCell>\n        </Grid>\n    </Container>;\n};\n\nADSR.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nADSR.panelWidth = 8;\nADSR.title = `\nADSR<br/>\nEnvelope Generator<br/>\nThe shape of the envelope is governed by four parameters:<br/>\nAttack, Decay, Sustain and Release.<br/>\nAs soon as the gate input receives sufficient voltage,<br/>\nthe ADSR generates a variable voltage, changing in time, called an envelope.\n`;\n\nexport default ADSR;","import React, { useEffect, useMemo, useState } from 'react';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport Knob from 'Common/Knob';\nimport styles from './styles';\nimport { useConnections } from '../lib';\nimport { useAction } from 'storeHelpers';\n\nconst VCA = ({ id, audioContext, viewMode }) => {    \n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [gain, setGain] = useState(1);\n    const [cv2, setCv2] = useState(0);\n    const [in1, setIn1] = useState(1);\n    const [in2, setIn2] = useState(1);\n    const [out, setOut] = useState(1);\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const gain = audioContext.createGain();\n        const gainVolume = audioContext.createGain();\n        const input1Gain = audioContext.createGain();\n        const input2Gain = audioContext.createGain();\n        const cv2 = audioContext.createConstantSource()\n        const cv2Gain = audioContext.createGain();\n        const outputGain = audioContext.createGain();\n\n        input1Gain.connect(gain);\n        input2Gain.connect(gain);\n\n        cv2.offset.value = 0;\n        cv2.start();\n        cv2.connect(cv2Gain);\n        cv2Gain.gain.value = 0;\n        cv2Gain.connect(gain.gain);\n\n        gain.connect(gainVolume).connect(outputGain);\n\n        return { input1Gain, input2Gain, cv2, cv2Gain, gainVolume, outputGain, gain };\n    }, [audioContext, viewMode]);    \n\n    useEffect(() => {\n        if (!module) return;\n        window.vca = module;\n\n        registerInputs(id, {\n            AudioIn1: {\n                connect: audioNode => audioNode.connect(module.input1Gain),            \n                disconnect: audioNode => audioNode.disconnect(module.input1Gain)\n            },\n            AudioIn2: {\n                connect: audioNode => audioNode.connect(module.input2Gain),            \n                disconnect: audioNode => audioNode.disconnect(module.input2Gain)\n            },\n            CV1: {\n                connect: audioNode => {\n                    module.gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    return audioNode.connect(module.gain.gain);\n                },\n                disconnect: audioNode => {                \n                    module.gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(module.gain.gain);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase)\n                    // it won't effect any more\n                    if (audioNode.offset) {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            },\n            CV2: {\n                connect: audioNode => {\n                    module.gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    return audioNode.connect(module.cv2.offset);\n                },\n                disconnect: audioNode => {                \n                    module.gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(module.cv2.offset);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase)\n                    // it won't effect any more\n                    if (audioNode.offset) {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n            AudioOut: module.outputGain\n        });\n    }, [module, id, registerInputs, registerOutputs, audioContext]);\n\n    useEffect(() => {\n        if (!module) return;\n        module.gainVolume.gain.value = gain;\n    }, [module, gain]);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv2Gain.gain.value = cv2;\n    }, [module, cv2]);\n\n    useEffect(() => {\n        if (!module) return;\n        module.input1Gain.gain.value = in1;\n    }, [module, in1]);\n\n    useEffect(() => {\n        if (!module) return;\n        module.input2Gain.gain.value = in2;\n    }, [module, in2]);\n\n    useEffect(() => {\n        if (!module) return;\n        module.outputGain.gain.value = out;\n    }, [module, out]);\n\n    return <div style={styles.container}>\n        <span>VCA</span>\n        <div style={{ ...styles.spaceAround, flex: 1 }}>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                <Port portId='CV1' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV2' connections={connections} moduleId={id} portType='input' />\n                <Port portId='AudioIn1' connections={connections} moduleId={id} portType='input' />\n                <Port portId='AudioIn2' connections={connections} moduleId={id} portType='input' /> \n                <Port portId='AudioOut' connections={connections} moduleId={id} portType='output' />\n            </div>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                Gain\n                <Knob min={0} max={2} step={0.02} value={gain} width={30} height={30} onChange={setGain} />\n                CV 2\n                <Knob min={0} max={1} step={0.01} value={cv2} width={30} height={30} onChange={setCv2} />\n                In 1\n                <Knob min={0} max={1} step={0.01} value={in1} width={30} height={30} onChange={setIn1} />\n                In 2\n                <Knob min={0} max={1} step={0.01} value={in2} width={30} height={30} onChange={setIn2} />\n                Out\n                <Knob min={0} max={1} step={0.01} value={out} width={30} height={30} onChange={setOut} />\n            </div>\n        </div>\n    </div>;\n};\n\nVCA.isBrowserSupported = typeof GainNode !== 'undefined';\nVCA.panelWidth = 8;\nVCA.title = `\nLinear VCA<br/>\nVoltage Controlled Amplifiers<br/>\nThe VCA has two audio inputs, each with an attenuator.<br/>\nThey are amplified by an amount determined<br/>\nby the combination of the gain and the two CV controls.\n`;\n\nexport default VCA;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport Knob from 'Common/Knob';\nimport { useConnections } from '../lib';\nimport { useAction } from 'storeHelpers';\nimport styles from './styles';\n\nconst QUAL_MUL = 30;\n\nconst VCFLowPass = ({ id, audioContext, viewMode }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0.5);\n    const [q, setQ] = useState(0.1);\n    const [cv2Gain, setCv2Gain] = useState(0.5);\n    const [cv3Gain, setCv3Gain] = useState(0.5);\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const vcf = audioContext.createBiquadFilter();\n        const cv = audioContext.createVoltToHzConverter(440, 2);\n        const cv2 = audioContext.createVoltToHzConverter(440, 2);\n        const cv3 = audioContext.createVoltToHzConverter(440, 2);\n        const cv2Gain = audioContext.createGain();\n        const cv3Gain = audioContext.createGain();\n\n        cv.volt.value = 0;\n        cv.start();\n        cv.connect(vcf.frequency);\n\n        cv2.volt.value = 0;\n        cv2.start();\n        cv2.connect(cv2Gain);\n        cv2Gain.gain.value = 0.5;\n        cv2Gain.connect(vcf.frequency);\n\n        cv3.volt.value = 0;\n        cv3.start();\n        cv3.connect(cv3Gain);\n        cv3Gain.gain.value = 0.5;\n        cv3Gain.connect(vcf.frequency);\n\n        vcf.type = 'lowpass';\n        vcf.Q.value = 0.5;\n        return { vcf, cv, cv2, cv3, cv2Gain, cv3Gain };\n    }, [audioContext, viewMode]);\n\n    useEffect(() => {\n        if (!module) return;\n        window.vcf = module;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(module.vcf),\n                disconnect: audioNode => audioNode.disconnect(module.vcf)\n            },\n            CV1: {\n                connect: audioNode => audioNode.connect(module.cv.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv.volt)\n            },\n            CV2: {\n                connect: audioNode => audioNode.connect(module.cv2.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv2.volt)\n            },\n            CV3: {\n                connect: audioNode => audioNode.connect(module.cv3.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv3.volt)\n            }\n        });\n        registerOutputs(id, {\n            Out: module.vcf\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        module.vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }, [module, frequency, audioContext]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.vcf.Q.value = q * QUAL_MUL;        \n    }, [module, q])\n\n    const handleQChange = useCallback((value) => {\n        setQ(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv2Gain.gain.value = cv2Gain;\n    }, [module, cv2Gain]);\n\n    const handleCv2GainChange = useCallback(value => {\n        setCv2Gain(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv3Gain.gain.value = cv3Gain;\n    }, [module, cv3Gain]);\n\n    const handleCv3GainChange = useCallback(value => {\n        setCv3Gain(Number(value));\n    }, []);\n\n    return <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <span style={{ display: 'flex', flexDirection: 'column' }}>\n            VCF\n            <span style={{ fontSize: 10 }}>LOW PASS FILTER</span>\n        </span>\n        <div style={{ ...styles.spaceAround, flex: 1 }}>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                <Port portId='CV1' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV2' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV3' connections={connections} moduleId={id} portType='input' />\n                <Port portId='In' connections={connections} moduleId={id} portType='input' />\n                <Port portId='Out' connections={connections} moduleId={id} portType='output' />\n            </div>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                Frequency\n                <Knob min={0} max={1} step={0.01} value={frequency} width={30} height={30} onChange={value => handleFrequencyChange(value)} />\n                CV 2\n                <Knob min={0} max={1} step={0.01} value={cv2Gain} width={30} height={30} onChange={value => handleCv2GainChange(value)} />\n                CV 3\n                <Knob min={0} max={1} step={0.01} value={cv3Gain} width={30} height={30} onChange={value => handleCv3GainChange(value)} />\n                Res\n                <Knob min={0} max={1} step={0.01} value={q} width={30} height={30} onChange={value => handleQChange(value)} />\n            </div>\n        </div>\n    </div>;\n};\n\nVCFLowPass.isBrowserSupported = typeof BiquadFilterNode !== 'undefined';\nVCFLowPass.panelWidth = 8;\nVCFLowPass.title = `\nVCF<br/>\nLow-Pass Filter<br/>\nfilters out the higher parts of the sound spectrum,<br/>\nand lets lower frequencies pass through.\n`;\n\nexport default VCFLowPass;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport LABEL_POSITIONS from 'Common/LabelPositions';\nimport styles from './styles';\nimport { useConnections } from '../lib';\nimport { useAction } from 'storeHelpers';\n\nconst Multiples = ({ id, viewMode }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [groupsInput, setGroupsInput] = useState({ A: null, B: null });\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const groupA = { input: null, audioNode: null };\n        const groupB = { input: null, audioNode: null };\n        return { groupA, groupB };\n    }, [viewMode]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        const createGroupInputs = group => {\n            const groupInputs = {};\n            const moduleGroup = module[`group${group}`];\n            for (let i = 1; i <= 4; i++) {\n                groupInputs[`Group${group}${i}In`] = {\n                    connect: audioNode => {\n                        setGroupsInput({ ...groupsInput, [group]: i })\n                        moduleGroup.input = i;\n                        moduleGroup.audioNode = audioNode;\n                    },\n                    disconnect: () => {\n                        setGroupsInput({ ...groupsInput, [group]: null })\n                        moduleGroup.audioNode = null;\n                    }\n                };\n            }\n            return groupInputs;\n        }\n\n        const createGroupOutputs = group => {\n            const groupOutpus = {};\n            for (let i = 1; i <= 4; i++) {\n                groupOutpus[`Group${group}${i}Out`] = () => module[`group${group}`].audioNode;\n            }\n            return groupOutpus;\n        }\n\n        registerInputs(id, {\n            ...createGroupInputs('A'),\n            ...createGroupInputs('B')\n        });\n        registerOutputs(id, {\n            ...createGroupOutputs('A'),\n            ...createGroupOutputs('B')\n        });\n    }, [module, id, registerInputs, registerOutputs, groupsInput]);\n\n    const renderGroup = useCallback(group => {\n        const result = [];\n        for (let i = 1; i <= 4; i++) {\n            const isInput = R.isNil(groupsInput[group]) || groupsInput[group] === i;\n            const portProps = {\n                key: `Group${group}${i}`,\n                portId: `Group${group}${i}${isInput ? 'In' : 'Out'}`,\n                connections,\n                moduleId: id,\n                portType: isInput ? 'input' : 'output',\n                labelPosition: LABEL_POSITIONS.HIDE\n            };\n            result.push(<Port {...portProps} />)\n        }\n        return result;\n    }, [groupsInput, connections, id]);\n\n    return <div style={styles.container}>\n        <span style={{ fontSize: 13 }}>Multiples</span>\n        <div style={styles.body}>\n            <div>\n                {renderGroup('A')}\n            </div>\n            <div>\n                {renderGroup('B')}\n            </div>\n        </div>\n    </div>;\n}\n\nMultiples.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nMultiples.panelWidth = 4;\nMultiples.title = `\nMultiples<br/>\nSimple multi-connectors.<br/>\nCome as two four-fold multiples.\n`;\n\nexport default Multiples;","import React, { useState, useEffect, useMemo } from 'react';\nimport * as R from 'ramda';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { DroppedSaw } from '@mohayonao/wave-tables';\nimport * as actions from '../actions';\nimport Port from 'Common/Port';\nimport LABEL_POSITIONS from 'Common/LabelPositions';\nimport Knob from 'Common/Knob';\nimport Switch from \"Common/Switch\";\nimport { Container, Grid, GridCell } from './styles';\nimport { useAction } from 'storeHelpers';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nconst FREQ_RANGE = {\n    LOW: 'LOW',\n    MEDIUM: 'MEDIUM',\n    HIGH: 'HIGH'\n};\n\nconst mapIndexed = R.addIndex(R.map);\n\nconst OSCILLATOR_TYPES = {\n    Sawtooth: 'Sawtooth',\n    RevSawtooth: 'RevSawtooth',\n    Sine: 'Sine',\n    Triangle: 'Triangle',\n    Pulse: 'Pulse'\n};\n\nconst LFO = ({ id, audioContext, viewMode }) => {\n    const registerOutputs = useAction(actions.registerOutputs);\n    const [frequency, setFrequency] = useState(0);\n    const [range, setRange] = useState(FREQ_RANGE.LOW);\n\n    const module = useMemo(() => {\n        if (viewMode) return null;\n\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        const oscillators = {\n            [OSCILLATOR_TYPES.Sawtooth]: createOscillator(audioContext, 'sawtooth'),\n            [OSCILLATOR_TYPES.RevSawtooth]: createOscillator(audioContext, 'sine'),\n            [OSCILLATOR_TYPES.Sine]: createOscillator(audioContext, 'sine'),\n            [OSCILLATOR_TYPES.Triangle]: createOscillator(audioContext, 'triangle'),\n            [OSCILLATOR_TYPES.Pulse]: pulse,\n        };\n        const revSawtoothWave = audioContext.createPeriodicWave(DroppedSaw.real, DroppedSaw.imag);\n        oscillators[OSCILLATOR_TYPES.RevSawtooth].setPeriodicWave(revSawtoothWave);\n\n        const frequencyControl = audioContext.createConstantSource();\n        frequencyControl.offset.value = 0;\n        R.forEachObjIndexed(o => frequencyControl.connect(o.frequency))(oscillators);\n        R.forEachObjIndexed(o => o.start())(oscillators);\n        frequencyControl.start();\n\n        return { oscillators, frequencyControl };\n    }, [audioContext, viewMode]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerOutputs(id, {\n            Sawtooth: module.oscillators.Sawtooth,\n            [OSCILLATOR_TYPES.RevSawtooth]: module.oscillators[OSCILLATOR_TYPES.RevSawtooth],\n            [OSCILLATOR_TYPES.Sine]: module.oscillators[OSCILLATOR_TYPES.Sine],\n            [OSCILLATOR_TYPES.Triangle]: module.oscillators[OSCILLATOR_TYPES.Triangle],\n            [OSCILLATOR_TYPES.Pulse]: module.oscillators[OSCILLATOR_TYPES.Pulse]\n        });\n    }, [module, id, registerOutputs]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        let newFreq;\n        switch (range) {\n            case FREQ_RANGE.LOW:\n                newFreq = Math.pow(2, frequency) * 4.995 + 0.005;\n                break;\n            case FREQ_RANGE.MEDIUM:\n                newFreq = Math.pow(2, frequency) * 49.9 + 0.1;\n                break;\n            case FREQ_RANGE.HIGH:\n            default:\n                newFreq = Math.pow(2, frequency) * 4490 + 10;\n                break;\n        }\n        module.frequencyControl.offset.value = newFreq;\n    }, [module, frequency, range]);\n\n    return <Container>\n        <span>LFO</span>\n        <Grid marginTop={15}>\n            {\n                R.pipe(\n                    R.keys,\n                    R.take(4),\n                    mapIndexed((osc, i) =>\n                        <GridCell key={osc} column={1} row={i + 1}>\n                            <Port label={''} portId={osc} moduleId={id} portType='output' />\n                        </GridCell>\n                    )\n                )(OSCILLATOR_TYPES)\n            }\n            <GridCell column={1} row={5}>\n                <Port portId={[OSCILLATOR_TYPES.Pulse]} moduleId={id} portType='output'\n                    label={<img width={25} src={require(`./pulse.svg`)} alt='Pulse' />}\n                    labelPosition={LABEL_POSITIONS.BELOW} />\n            </GridCell>\n\n            {\n                R.pipe(\n                    R.keys,\n                    R.take(4),\n                    mapIndexed((osc, i) =>\n                        [\n                            <GridCell key={osc + 'arrow'} column={2} row={i + 1}>\n                                <FontAwesomeIcon size='xs' icon='arrow-left' />\n                            </GridCell>,\n                            <GridCell key={osc} column={3} row={i + 1}>\n                                <img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc} />\n                            </GridCell>\n                        ]\n                    )\n                )(OSCILLATOR_TYPES)\n            }\n            <GridCell column='2/4' row={5}>\n                <Knob label='Frequ.' min={-4} max={4} step={0.001} value={frequency} width={30} height={30} onChange={setFrequency} />\n            </GridCell>\n            <GridCell column='1/4' row={6}>\n                <Switch value={range}\n                    onChange={setRange}\n                    options={[\n                        { value: FREQ_RANGE.LOW, label: 'L' },\n                        { value: FREQ_RANGE.MEDIUM, label: 'M' },\n                        { value: FREQ_RANGE.HIGH, label: 'H' }\n                    ]}\n                />\n                Frequ.<br />\n                Range\n            </GridCell>\n        </Grid>\n    </Container>;\n};\n\nLFO.isBrowserSupported = typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined';\nLFO.panelWidth = 8;\nLFO.title = `\nLFO<br/>\nLow frequency oscillator<br/>\nProduces cyclical control voltages in a very wide range of frequencies.<br/>\nFive waveforms are available:<br/>\nsawtooth, inverted sawtooth, triangle, sine and square wave.\n`;\n\nexport default LFO;","import * as R from 'ramda';\nimport VCO from './Components/VCO';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport VCA from './Components/VCA';\nimport VCFLowPass from './Components/VCFLowPass';\nimport Multiples from './Components/Multiples';\nimport LFO from './Components/LFO';\n\nexport const MODULE_TYPE = {\n    VCO: 'VCO',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCA: 'VCA',\n    VCF_LOW_PASS: 'VCF_LOW_ASS',\n    MULTIPLES: 'MULTIPLES',\n    LFO: 'LFO'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 16;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}`, type };\n    switch (type) {\n        case MODULE_TYPE.VCO:\n            module.Module = VCO;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF_LOW_PASS:\n            module.Module = VCFLowPass;\n            break;\n        case MODULE_TYPE.VCA:\n            module.Module = VCA;\n            break;\n        case MODULE_TYPE.MULTIPLES:\n            module.Module = Multiples;\n            break;\n        case MODULE_TYPE.LFO:\n            module.Module = LFO;\n            break\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    module.title = module.Module.title || type;\n    moduleCounters[type]++;\n    return module;\n};\n","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    audioContextInitiliazed: false,\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20,\n    racks: 2\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nconst findFreeSpace = (modules, width) => {\n    const sortedModules = R.pipe(\n        R.values,\n        R.when(R.none(R.whereEq({ left: 20 })), R.concat([{ left: 20, width: 0 }])),\n        R.sortBy(R.prop('left'))\n    )(modules);\n\n    for (let i = 0; i < sortedModules.length; i++) {\n        const cur = sortedModules[i];\n        if (i === sortedModules.length - 1 ||\n            (sortedModules[i + 1].left - cur.left - cur.width >= width))\n        {\n            return cur.left + cur.width;            \n        }\n    }\n};\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { module: { type, id, rackId = 0, left } }) => {\n        const newModule = createModule({ type: type, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${type}`);\n            return state;\n        }\n\n        newModule.left =  left || findFreeSpace(state.modules, newModule.width);;\n        newModule.rackId = rackId;\n        return R.evolve({\n            audioContextInitiliazed: R.T,\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width)\n        })(state);\n    },\n\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: module => {\n                R.mapObjIndexed(\n                    (audioNode, output) => {\n                        if (typeof audioNode === \"function\") {\n                            Object.defineProperty(outputs, output, { get: audioNode });\n                        }\n                    }\n                )(outputs);\n                return { ...module, outputs };\n            }\n        })\n    })(state),\n\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId, counter: 0, output: true }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId, counter: 0 })\n            }))\n    })(state),\n\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x, rackId }) => {\n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;\n\n        if (newRight > window.innerWidth) return state;\n\n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n                ({ id, left, width, rackId: otherRackId }) => {\n                    const right = left + width;                \n                    return id !== moduleId && rackId === otherRackId && (\n                        (left >= newLeft && left < newRight) ||\n                        (left < newLeft && right > newLeft) ||\n                        (left === newLeft && right === newRight)\n                    );\n                }\n            ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: {\n                [moduleId]: {\n                    left: R.always(newLeft),\n                    rackId: R.always(rackId)\n                }\n            },\n            connections: {\n                [moduleId]: R.map(R.evolve({ counter: R.inc }))\n            },\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    },\n\n    [ActionTypes.REMOVE_MODULE]: (state, { moduleId }) => {\n        const removedModule = state.modules[moduleId];\n\n        return R.evolve({\n            modules: R.dissoc(moduleId),\n            maxLeft: lastValue => removedModule.left + removedModule.width === lastValue ? removedModule.left : lastValue\n        })(state);\n    }\n\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {},\n    overPort: null\n};\n\nexport default handleActions({\n\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, fromPoint, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, R.reject(R.isNil, ({ fromPoint, toPoint, toPortId })))\n        })\n    })(state),\n\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state),\n\n    [ActionTypes.CHANGE_OVER_PORT]: (state, { portId }) => ({\n        ...state,\n        overPort: portId\n    })\n\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\n// import * as R from 'ramda';\n\nconst initialState = {\n    presetLoading: false,\n    isDirty: false\n};\n\nconst setDirty = isDirty => state => ({ ...state, isDirty });\n\nexport default handleActions({\n    [ActionTypes.LOAD_PRESET_START]: state => ({ ...state, presetLoading: true }),\n    [ActionTypes.LOAD_PRESET_FINISH]: state => ({ ...setDirty(false)(state), presetLoading: false  }),\n    [ActionTypes.REMOVE_MODULE]: setDirty(true),\n    [ActionTypes.ADD_MODULE]: setDirty(true),\n    [ActionTypes.REMOVE_CABLE]: setDirty(true),\n    [ActionTypes.ADD_CABLE]: setDirty(true)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\nimport rack from './Synth/reducer';\n\nexport default combineReducers({ modules, cables, rack });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            if (input && output) {\n                input.connect(output);\n            }\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n            break;\n        }\n        case actionType.SAVE_PRESET: {\n            const { modules: { modules, connections } } = getState();\n            const preset = {\n                modules: R.pipe(\n                    R.map(R.pick(['id', 'type', 'left', 'rackId'])),\n                    R.values\n                )(modules),\n                connections: R.pipe(\n                    R.reject(R.isEmpty),\n                    R.mapObjIndexed((inputConnections, inputModuleId) => {\n                        return R.pipe(\n                            R.filter(R.whereEq({ output: true })),\n                            R.mapObjIndexed(({ moduleId, portId }, inputPortId) => {\n                                return {\n                                    input: { moduleId: inputModuleId, portId: inputPortId },\n                                    output: { portId: portId, moduleId }\n                                };\n                            }),\n                            R.values\n                        )(inputConnections);\n                    }),\n                    R.values,            \n                    R.reject(R.isEmpty),\n                    R.unnest\n                )(connections)\n            }\n            localStorage.setItem('preset', JSON.stringify(preset));\n            break;\n        }\n        default:\n            break;\n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(applyMiddleware(...middlewareChain)) :\n    applyMiddleware(...middlewareChain);\n\nexport default createStore(reducer, enhancer);","import React, { useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as actions from '../Modules/actions';\nimport { useAction } from '../storeHelpers';\nimport styled from 'styled-components';\nimport { prop } from 'ramda';\n\nconst Screw = () =>\n    <img alt='screw'\n        src={require('./screw_header.svg')}\n        height={14} width={14}\n        style={{ margin: 5 }} />;\n\nconst EdgeContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin: -2px 0;\n`;\n\nconst PanelEdge = ({ children }) =>\n    <EdgeContainer>\n        <Screw />\n        {children}\n        <Screw />\n    </EdgeContainer>;\n\nconst PanelContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    background: #E8E8E8;\n    border: black 0.2px solid;\n    position: ${({ viewMode }) => viewMode ? 'relative' : 'absolute'};\n    height: 100%;\n    user-select: none;\n    width: ${prop('width')}px;\n    height: ${prop('height')}px;\n    left: ${prop('left')}px;\n    top: ${prop('top')}px;\n    cursor: ${({ viewMode, dragging }) => viewMode ? 'pointer' : dragging ? 'grabbing' : 'grab'};\n`;\n\nconst RemoveModuleButton = styled.span`\n    visibility: hidden;\n    color: gray;\n    cursor: pointer;\n\n    &:hover {\n        color: black;\n    }\n\n    ${PanelContainer}:hover & {\n        visibility: ${({ viewMode }) => viewMode ? 'hidden' : 'visible' };\n    }\n`;\n\nconst PanelContent = styled.div`\n    flex: 1;\n    position: relative;\n`;\n\nconst Overlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 99;\n`;\n\nconst Panel = props => {\n    const { children, setDragging, moduleId, viewMode } = props;\n    const removeModule = useAction(actions.removeModule);\n    const onTrashMouseDown = useCallback(e => {\n        e.stopPropagation();\n        e.preventDefault();\n    }, []);\n\n    return <PanelContainer {...props} onMouseDown={() => !viewMode && setDragging(true)} onMouseUp={() => !viewMode && setDragging(false)}>\n        <PanelEdge>\n            <RemoveModuleButton viewMode={viewMode} onClick={() => removeModule(moduleId)} onMouseDown={onTrashMouseDown}>\n                <FontAwesomeIcon size='xs' icon='trash' />\n            </RemoveModuleButton>\n        </PanelEdge>\n        <PanelContent>\n            { viewMode && <Overlay/> }\n            {children}\n        </PanelContent>\n        <PanelEdge />\n    </PanelContainer>;\n}\n\nexport default Panel;","import React, { useCallback } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport styled from 'styled-components';\nimport * as actions from '../actions';\nimport { MODULE_TYPE, createModule } from '../moduleFactory';\nimport Panel from 'Common/Panel';\nimport { useAction } from 'storeHelpers';\nimport { pipe, values, map } from 'ramda';\n\nconst Overlay = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 99;\n    background-color: rgba(0,0,0,0.4);\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n`;\n\nconst ModuleWrapper = styled.div`\n    height: 370px;\n    border-style: solid;\n    border-color: #c9c9c9;\n    transform: scale(0.7);\n\n    &:hover {\n        border-color: white;\n    }\n`;\n\nconst Tooltip = styled(ReactTooltip)`\n    /* width: 100px; */\n    &.show {\n        opacity: 1;\n    }\n\n    .multi-line {\n        text-align: left;\n    }\n`;\n\nconst ModulePicker = ({ onClose }) => {\n    const addModule = useAction(type => actions.addModule({ type }));\n    \n    const handleAdd = useCallback((e, type) => {\n        e.stopPropagation();\n        e.preventDefault();\n        addModule(type);\n    }, [addModule]);\n    \n    return <Overlay onClick={onClose}>\n        {\n            pipe(\n                values,\n                map(type => {\n                    const { width, title, Module } = createModule({ type });\n                    return <ModuleWrapper data-tip={title} key={type} onClick={e => handleAdd(e, type)}>\n                        <Panel viewMode\n                            width={width}\n                            height={370}>\n                            <Module viewMode />\n                        </Panel>\n                    </ModuleWrapper>\n                }\n                ))(MODULE_TYPE)\n        }\n        <Tooltip place='right' multiline/>\n    </Overlay>;\n};\n\nexport default ModulePicker;\n","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color, overPort, portId, toPortId }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        opacity={(overPort === portId || overPort === toPortId) ? 0.9 : 0.6} stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ scrollLeft, height, scrollTop }) => {\n    const cables = useSelector(R.pipe(R.path(['cables', 'cables']), R.values));\n    const overPort = useSelector(R.path(['cables', 'overPort']));\n\n    return <svg style={{ position: 'fixed', left: -scrollLeft, top: -scrollTop, width: `calc(100% + ${scrollLeft}px)`, height, pointerEvents: 'none' }}>\n        {cables.map((cable) => <Cable key={cable.portId} {...cable} overPort={overPort}/>)}\n    </svg>;;\n}\n\nexport default CablesContainer;","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.VCO, id: 'VCO1' },\n          { type: MODULE_TYPE.VCF_LOW_PASS, id: 'VCF1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.VCA, id: 'VCA1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'VCO1', portId: 'CV1' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'VCF1', portId: 'In' }, output: { moduleId: 'VCO1', portId: 'Sine' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'VCA1', portId: 'AudioIn1' }, output: { moduleId: 'VCF1', portId: 'Out' } },\n          { input: { moduleId: 'VCA1', portId: 'CV1' }, output: { moduleId: 'ADSR1', portId: 'Out1' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'VCA1', portId: 'AudioOut' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules, removeAllModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\nimport { LOAD_PRESET_START, LOAD_PRESET_FINISH, SAVE_PRESET } from '../actionTypes';\n\nexport const savePreset = () => ({\n    type: SAVE_PRESET\n});\n\nconst connectModulesAndCables = R.curry((dispatch, connection) => {\n    const { input, output } = connection;\n    dispatch(connectModules(connection));\n\n    const fromPortId = `${input.moduleId}-${input.portId}`;\n    const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n    dispatch(addCable({\n        portId: fromPortId,\n        color: randomColor({ luminosity: 'dark' }),\n        fromPoint: {\n            x: fromElem.x + fromElem.width / 2,\n            y: fromElem.y + fromElem.height / 2\n        }\n    }));\n\n    const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n    dispatch(modifyCable({\n        portId: fromPortId,\n        toPortId: `${output.moduleId}-${output.portId}`,\n        toPoint: {\n            x: toElem.x + toElem.width / 2,\n            y: toElem.y + toElem.height / 2\n        }\n    }));\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    dispatch({ type: LOAD_PRESET_START });\n    dispatch(removeAllModules());\n    setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n};\n\nconst checkIfAllModulesRemoves = (dispatch, getState, preset) => () => {\n    if (!R.isEmpty(getState().modules.modules)) {\n        setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(module => dispatch(addModule(module)))(preset.modules);\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n};\n\nconst checkIfModulesCreated = (dispatch, getState, preset) => () => {\n    const stateModuleIds = R.map(R.prop('id'), getState().modules.modules);\n    const moduleIds = R.map(R.prop('id'), preset.modules);\n\n    if (!R.isEmpty(R.difference(stateModuleIds, moduleIds))) {\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(connectModulesAndCables(dispatch))(preset.connections);\n        setTimeout(checkIfAllConnected(dispatch, getState, preset.connections), 50);\n    }\n};\n\nconst checkIfAllConnected = (dispatch, getState, connections) => () => {\n    const stateConnections = getState().modules.connections;\n    const allConnected  = R.all(connection => {\n        const stateConnection = stateConnections[connection.input.moduleId];\n        if (!stateConnection) return false;\n\n        const port = stateConnection[connection.input.portId];\n        return port && port.moduleId === connection.output.moduleId && port.portId === connection.output.portId;\n    }, connections);\n\n    if (!allConnected) {\n        setTimeout(checkIfAllConnected(dispatch, getState, connections), 10);\n    } else {\n        dispatch({ type: LOAD_PRESET_FINISH });\n    }\n};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\n\nconst IconButton = styled(FontAwesomeIcon)`\nfont-size: 25px;\nmargin-right: 20px;\ncolor: #e8e8e8;\ncursor: pointer;\n\n&:hover {\n    color: white;        \n}\n`;\n\nexport default IconButton;","// Pulse oscillator from Andy Harman\n// https://github.com/pendragon-andyh/WebAudio-PulseOscillator\nconst pulseCurve = new Float32Array(256);\nfor(let i = 0; i < 128; i++) {\n    pulseCurve[i] = -1;\n    pulseCurve[i + 128] = 1;\n}\nconst constantOneCurve = new Float32Array(2);\nconstantOneCurve[0] = 1;\nconstantOneCurve[1] = 1;\nexport default function createPulseOscillator() {\n    const node = this.createOscillator();\n    node.type = 'sawtooth';\n\n    const pulseShaper = this.createWaveShaper();\n    pulseShaper.curve = pulseCurve;\n    node.connect(pulseShaper);\n    const widthGain = this.createGain();\n    widthGain.gain.value = 0;\n    node.width = widthGain.gain;\n    node.widthGain = widthGain;\n    widthGain.connect(pulseShaper);\n\n    const constantOneShaper = this.createWaveShaper();\n    constantOneShaper.curve = constantOneCurve;\n    node.connect(constantOneShaper);\n    constantOneShaper.connect(widthGain);\n\n    node.connect = function() {\n        pulseShaper.connect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    node.disconnect = function() {\n        pulseShaper.disconnect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    return node;\n}","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport Select from 'react-select';\nimport styled from 'styled-components';\nimport * as R from 'ramda';\nimport defaultPresets from '../defaultPresets';\nimport { useSelector } from 'react-redux';\nimport * as actions from '../actions';\nimport { useAction } from 'storeHelpers';\nimport IconButton from 'Common/IconButton';\n\nconst Container = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n\n    > * {\n        margin: 0 10px;\n    }\n`;\n\nconst PresetSelect = styled(Select)`\n    flex: 1;\n    max-width: 200px;\n`;\n\nconst PresetManager = () => {\n    const isDirty = useSelector(R.path(['rack', 'isDirty']));\n    const presetLoading = useSelector(R.path(['rack', 'presetLoading']));\n\n    const loadPreset = useAction(actions.loadPreset);\n    const savePreset = useAction(actions.savePreset);\n\n    const [preset, setPreset] = useState('');\n\n    useEffect(() => {\n        if (!presetLoading && isDirty) {\n            setPreset('');\n        }\n    }, [isDirty, presetLoading]);\n\n    const presetOptions = useMemo(() => {\n        return R.pipe(\n            R.keys,\n            R.map(preset => ({ value: preset, label: preset }))\n        )(defaultPresets);\n    }, []);\n\n    const handlePresetChange = useCallback(({ value }) => {\n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    }, [loadPreset])\n\n    const handleLoadPreset = useCallback(() => {\n        const preset = localStorage.getItem('preset')\n        if (preset) {\n            loadPreset(JSON.parse(preset));\n        }\n    }, [loadPreset]);\n\n    return <Container>\n        <IconButton icon='file-download' title='Save' onClick={savePreset}/>\n        <IconButton icon='file-upload' title='Load' onClick={handleLoadPreset}/>\n        <PresetSelect options={presetOptions} onChange={handlePresetChange} placeholder='Select Preset'/>       \n    </Container>;\n};\n\nexport default PresetManager;","import { memoizeWith, identity } from 'ramda';\n\nconst createVoltToFreqExpCurve = memoizeWith(identity, (baseFrequency, octaves) => {\n    const BUFFER_LENGTH = 8192;\n    const curve = new Float32Array(BUFFER_LENGTH);\n    for (let i = 0; i < BUFFER_LENGTH; i++) {\n        const normalized = (i / (BUFFER_LENGTH - 1)) * 4 - 2;\n        curve[i] = baseFrequency * Math.pow(octaves, normalized);\n    }\n    return curve;\n});\n\nexport default function createVoltToHzConverter(baseFrequency, octaves) {\n    const node = this.createConstantSource();\n    node.volt = node.offset;\n    const voltToFreqWaveshaper = this.createWaveShaper();\n    const voltScale = this.createGain();\n    voltToFreqWaveshaper.curve = createVoltToFreqExpCurve(baseFrequency, octaves);\n    voltScale.gain.value = 1 / octaves;\n    node.connect(voltScale).connect(voltToFreqWaveshaper);\n\n    node.connect = function() {\n        voltToFreqWaveshaper.connect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n\n    node.disconnect = function() {\n        voltToFreqWaveshaper.disconnect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n    return node;\n}","export default function createGate() {\n    const node = this.createScriptProcessor(256, 1, 1);\n    node.connect(this.destination);\n    node.gateOn = false;\n    node.onaudioprocess = e => {  \n        const buffer = e.inputBuffer.getChannelData(0);\n        if (Math.max(...buffer) >= 0.99 && !node.gateOn) {\n            node.gateOn = true;\n            node.gateChange && node.gateChange(1);\n        }\n        else {\n            const min = Math.min(...buffer);\n            if ((min === 0 || min <= -0.99) && node.gateOn) {\n                node.gateOn = false;\n                node.gateChange && node.gateChange(0);\n            }\n        }\n\n    };\n\n    return node;\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport * as R from 'ramda';\nimport ModulePicker from 'Modules/Components/ModulePicker';\nimport CablesContainer from 'Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport * as modulesActions from 'Modules/actions';\nimport * as cablesAction from 'Cables/actions';\nimport './Rack.css';\nimport Panel from 'Common/Panel';\nimport createPulseOscillator from '../helpers/createPulseOscillator';\nimport createVoltToHzConverter from '../helpers/createVoltToHzConverter';\nimport createGate from '../helpers/createGate';\nimport { useAction } from 'storeHelpers';\nimport rackBg from './rack_bg.svg';\nimport IconButton from 'Common/IconButton';\n\nconst RACK_HEIGHT = 370;\n\nconst Container = styled.div`\n    position: relative;\n`;\n\nconst SynthContainer = styled.div`\n    overflow-x: scroll;\n    position: relative;\n`;\n\nconst Rack = styled.div`\n    width: ${({ scrollLeft }) => `calc(100% + ${scrollLeft}px)`};\n    position: relative;\n    user-select: none;\n    background-size: contain;\n    background-image: url(${rackBg});\n    height: ${RACK_HEIGHT}px;    \n`;\n\nconst TopBar = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #353535;\n    align-items: center;\n    height: 50px;\n    padding-left: 30px;\n`;\n\nconst Synth = () => {\n    const modules = useSelector(R.pipe(R.path(['modules', 'modules']), R.values));\n    const racks = useSelector(R.path(['modules', 'racks']));\n    const startingPort = useSelector(R.path(['modules', 'startingPort']));\n    const audioContextInitiliazed = useSelector(R.path(['modules', 'audioContextInitiliazed']));\n\n    const unsetStartingPort = useAction(modulesActions.unsetStartingPort);\n    const moveModule = useAction(modulesActions.moveModule);\n    const modifyCable = useAction(cablesAction.modifyCable);\n    const removeCable = useAction(cablesAction.removeCable);\n\n    const [draggingModuleId, setDraggingModuleId] = useState(null);\n    const [scrollLeft, setScrollLeft] = useState(0);\n    const [scrollTop, setScrollTop] = useState(0);\n    const [activeRackId, setActiveRackId] = useState(0);\n    const [audioContext, setAudioContext] = useState(null);\n    const [displayPicker, setDisplayPicker] = useState(false);\n\n    useEffect(() => {\n        window.onscroll = e => setScrollTop(window.scrollY);\n    }, []);\n\n    useEffect(() => {\n        if (audioContext) return;\n\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const newAudioContext = new AudioContext();\n        newAudioContext.createPulseOscillator = createPulseOscillator;\n        newAudioContext.createVoltToHzConverter = createVoltToHzConverter;\n        newAudioContext.createGate = createGate;\n        setAudioContext(newAudioContext);\n    }, [audioContext, audioContextInitiliazed]);\n\n    const moveCable = useCallback((e) => {\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY + scrollTop }\n        });\n    }, [modifyCable, startingPort, scrollTop]);\n\n    const dragModule = useCallback((e) => {\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX, activeRackId);\n    }, [draggingModuleId, moveModule, activeRackId]);\n\n    const handleMouseUp = useCallback(() => {\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }, [unsetStartingPort, removeCable, startingPort]);\n\n    const handleMouseMove = useCallback((e) => {\n        moveCable(e);\n        dragModule(e);\n    }, [moveCable, dragModule]);\n\n    const handleDragging = useCallback((moduleId) => {\n        return isDragging => {\n            setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }, []);;\n\n    const handleRackScroll = useCallback((e) => {\n        setScrollLeft(e.target.scrollLeft);\n    }, []);\n\n    return <Container onMouseUp={handleMouseUp} onMouseMove={handleMouseMove} onScroll={handleRackScroll}> \n        { displayPicker && <ModulePicker onClose={() => setDisplayPicker(false)}/> }       \n        <TopBar>\n            <IconButton icon='plus-circle' title='Add Module' onClick={() => setDisplayPicker(true)} />\n            <PresetManager/>\n        </TopBar>        \n        <SynthContainer>            \n            {\n                R.pipe(\n                    R.range(0),\n                    R.map(rackId => <Rack key={rackId} scrollLeft={scrollLeft} onMouseEnter={() => setActiveRackId(rackId)} />)\n                )(racks)\n            }\n            {\n                audioContext && modules.map(({ Module, width, left, id, rackId }) =>\n                    <Panel key={id} top={rackId * RACK_HEIGHT}\n                        moduleId={id}\n                        setDragging={handleDragging(id)}\n                        dragging={id === draggingModuleId}\n                        width={width}\n                        height={RACK_HEIGHT}                        \n                        left={left}>                            \n                        <Module id={id} audioContext={audioContext}/>\n                    </Panel>\n                )\n            }\n        </SynthContainer>\n        <CablesContainer scrollLeft={scrollLeft} scrollTop={scrollTop} height={racks * 1.5 * RACK_HEIGHT} />\n    </Container>;\n};\n\nexport default Synth;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Synth from './Synth/Components/Synth';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash, faArrowLeft, faPlusCircle, faFileUpload, faFileDownload } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faTrash);\nlibrary.add(faArrowLeft);\nlibrary.add(faPlusCircle);\nlibrary.add(faFileUpload);\nlibrary.add(faFileDownload);\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Synth/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./pulse.svg\": 61,\n\t\"./revsawtooth.svg\": 95,\n\t\"./sawtooth.svg\": 96,\n\t\"./sine.svg\": 97,\n\t\"./triangle.svg\": 98\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60;","module.exports = __webpack_public_path__ + \"static/media/pulse.f9689bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/rack_bg.cd50a535.svg\";","module.exports = __webpack_public_path__ + \"static/media/port.1b33f6c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","module.exports = __webpack_public_path__ + \"static/media/revsawtooth.e22804aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/sawtooth.de511017.svg\";","module.exports = __webpack_public_path__ + \"static/media/sine.e1994103.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.87d20148.svg\";"],"sourceRoot":""}