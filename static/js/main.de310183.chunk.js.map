{"version":3,"sources":["Common/knob.svg","Common/screw_header.svg","Modules/actions.js","actionTypes.js","Cables/actions.js","Common/Port.js","Common/Knob.js","Modules/portHelpers.js","Modules/Components/SimpleOscillator.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Modules/Components/Keyboard.js","Modules/Components/ADSR.js","Modules/Components/Amp.js","Modules/Components/VCF.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","reducer.js","middleware.js","store.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Rack/defaultPresets.js","Rack/actions.js","Rack/Components/PresetManager.js","Common/Panel.js","Rack/Components/Rack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","addModule","moduleType","id","type","connectModules","_ref","output","input","registerInputs","inputs","registerOutputs","outputs","unsetStartingPort","addCable","portId","fromPoint","color","modifyCable","_ref2","toPoint","toPortId","removeCable","connect","startingPort","modules","disconnectModule","port","setStartingPort","_elem","connections","moduleId","portType","react_default","a","createElement","className","cx","disabled","onMouseDown","e","stopPropagation","concat","_elem$getBoundingClie","getBoundingClientRect","x","y","width","height","randomColor","luminosity","onMouseUp","_connectModules","_elem$getBoundingClie2","Object","defineProperty","ref","elem","cy","r","stroke","strokeWidth","fill","Knob","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseMove","bind","assertThisInitialized","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","_this$props","isMoving","onChange","max","value","min","step","preventDefault","buttons","_this$_elem$getBoundi","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","setIsMoving","_this$props2","_this2","_this$props3","_this$props3$height","_this$props3$width","style","cursor","margin","transform","alt","src","require","Component","compose","withState","listenToFirstAudioParam","audioNode","callback","interval","_loop","AudioParam","lastValue","setInterval","SimpleOscillator","audioContext","Error","_oscillator","createOscillator","handleTypeChange","handleFrequencyChange","handleVOctChange","setPitch","start","V/Oct","_cvInterval","disconnect","clearInterval","Out","target","setType","setFrequency","setVOct","vOct","frequency","oscFreq","pow","setValueAtTime","currentTime","_this3","display","flexDirection","Common_Knob","src_Common_Port","setStatic","OscillatorNode","ownProps","StereoAudioInterface","_leftPanner","StereoPannerNode","pan","_rightPanner","destination","Left","Right","In","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","C#","D#","F#","G#","A#","calculateNoteVolt","noteIndex","octave","Keyboard","_gate","createConstantSource","offset","_cv","handleKeyDown","handleKeyUp","handleOctaveChange","handleKeyboardDown","handleKeyboardUp","_keyboardDown","CV","Gate","event","keyCodeIndex","R","keyCode","cv","changeFrequency","setOctave","newOctave","Number","map","note","i","isBlackKey","endsWith","gridRow","key","alignSelf","gridColumn","backgroundColor","flex","convertKnobValueToTime","ADSR","_adsr","handleGateInChange","_gateInterval","sustain","attack","decay","release","now","cancelScheduledValues","linearRampToValueAtTime","setAttack","setDecay","setSustain","setRelease","ConstantSourceNode","Amp","_gain","createGain","gain","GainNode","VCF","_vcf","createBiquadFilter","handleQChange","setQuality","maxValue","sampleRate","numberOfOctaves","log","LN2","multiplier","setQ","q","Q","BiquadFilterNode","MODULE_TYPE","OSCILLATOR","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","AMP","moduleCounters","removeLastConnection","handleActions","_handleActions","state","newModule","_ref$id","undefined","Module","MonoAudioInterface","isBrowserSupported","panelWidth","createModule","left","maxLeft","window","alert","_ref3","_ref4","_ref5","_R$evolve3","_ref6","_ref7","_ref8","prevLeft","moduleWidth","newLeft","newRight","_ref9","right","moveX","diff","reducer_handleActions","cables","combineReducers","middleware","getState","next","action","_getState$modules","lastInput","lastOutput","_getState$modules2","middlewareChain","thunk","createStore","reducer","applyMiddleware","apply","onClick","Cable","d","lowestPoint","highestPoint","midpointY","abs","distance","midpointX","calculateMidpoint","position","top","pointerEvents","Components_Cable","defaultPresets","Basic","tryToConnectModules","dispatch","connection","fromPortId","fromElem","getElementById","toElem","setTimeout","loadPreset","preset","setPreset","Screw","PanelEdge","children","Panel_Screw","Panel","dragging","setDragging","Panel_PanelEdge","Rack","AudioContext","webkitAudioContext","_audioContext","handleDragging","prevProps","prevModule","modifyModuleCables","movedModule","moveCable","dragModule","_this$props4","draggingModuleId","moveModule","isDragging","setDraggingModuleId","_this$props5","onMouseMove","Components_ModulePicker","Components_PresetManager","src_Common_Panel","Components_CablesContainer","Rack_Components_Rack","App","es","store","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de310183.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addModule = (moduleType, id) => ({\n    type: ActionTypes.ADD_MODULE,\n    moduleType,\n    id\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\nexport const MODIFY_MODULE_CABLES = 'MODIFY_MODULE_CABLES';","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});\n\nexport const modifyModuleCables = ({ moduleId, diff }) => ({\n    type: ActionTypes.MODIFY_MODULE_CABLES,\n    moduleId,\n    diff\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { connectModules, disconnectModule, setStartingPort, unsetStartingPort } from '../Modules/actions';\nimport { addCable, removeCable, modifyCable } from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\n\nconst Port = ({ portId, connections, connectModules, disconnectModule, moduleId, portType, startingPort, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable }) => {\n    let _elem;\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connections[portId]) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connections[portId].moduleId}-${connections[portId].portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n        addCable({\n            portId: `${moduleId}-${portId}`,\n            fromPoint: { x: x + width / 2 , y: y + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId))\n        {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n\n        if (connections[portId] &&\n            (connections[portId].moduleId !== startingPort.moduleId || connections[portId].portId !== startingPort.portId)) {\n            removeCable(`${connections[portId].moduleId}-${connections[portId].portId}`);\n            removeCable(`${moduleId}-${portId}`);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2 , y: y + height / 2 },\n            toPortId: `${moduleId}-${portId}`\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}>\n        {portId}\n        <svg id={`${moduleId}-${portId}`} height=\"30\" width=\"30\" ref={elem => _elem = elem}>\n            <circle cx=\"15\" cy=\"15\" r=\"14\" stroke=\"black\" strokeWidth=\"1\" fill=\"grey\" />\n            <circle cx=\"15\" cy=\"15\" r=\"10\" stroke=\"black\" strokeWidth=\"1\" fill=\"grey\" />\n            <circle cx=\"15\" cy=\"15\" r=\"7\" stroke=\"none\" strokeWidth=\"0\" fill=\"black\"/>\n        </svg>\n    </div>;\n};\n\nconst mapStateToProps = ({ modules }) => ({\n    startingPort: modules.startingPort\n});\n\nexport default connect(mapStateToProps, { connectModules, disconnectModule, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable })(Port);","import React, { Component } from 'react';\nimport { compose, withState } from 'recompose';\n\nconst MAX_ANGLE = 150;\n\nclass Knob extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.calculateValueAngle = this.calculateValueAngle.bind(this);\n    }\n\n    componentWillMount() {\n        document.addEventListener('mouseup', this.handleMouseUp);\n        document.addEventListener('mousemove', this.handleMouseMove);\n    }\n\n    handleMouseMove(e) {\n        const { isMoving, onChange, value, max, min, step } = this.props;\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = this._elem.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;        \n        if (angle > 2.1 * MAX_ANGLE) angle = 0;    \n\n        const ratio = angle / (2 * MAX_ANGLE);\n            let newValue = ratio * (max - min) + min;\n            newValue = Math.floor(newValue / step) * step;\n            if (newValue > max) newValue = max;\n            onChange(newValue);\n    }\n\n    handleMouseDown(e) {\n        e.stopPropagation();\n        this.props.setIsMoving(true);\n    }\n\n    handleMouseUp() {\n        this.props.setIsMoving(false);\n    }\n\n    calculateValueAngle() {\n        const { min, max, value } = this.props;\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }\n\n    render() {\n        const { height = 50, width = 50 } = this.props;\n        return <img ref={elem => { this._elem = elem; } }\n                    style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${this.calculateValueAngle()}deg)` }}\n                    onMouseDown={this.handleMouseDown}\n                    alt='knob' src={require('./knob.svg')} height={height} width={width}/>;\n    }\n}\n\nexport default compose(\n    withState('isMoving', 'setIsMoving', false)\n)(Knob);","export function listenToFirstAudioParam(audioNode, callback)\n{\n    let interval = null;\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            let lastValue = audioNode[p].value;\n            callback(lastValue);\n            interval = setInterval(() => {\n                if (lastValue !== audioNode[p].value) {\n                    lastValue = audioNode[p].value;\n                    callback(lastValue);\n                }\n            }, 0);\n            break;\n        }\n    }\n    return interval;\n}","import React, { Component } from 'react';\nimport { compose, withState, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { listenToFirstAudioParam } from '../portHelpers';\n\nclass SimpleOscillator extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._oscillator = props.audioContext.createOscillator();\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleVOctChange = this.handleVOctChange.bind(this);\n        this.setPitch = this.setPitch.bind(this);\n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this._oscillator.start();\n        registerInputs(id, {\n            'V/Oct': {\n                connect: audioNode => this._cvInterval = listenToFirstAudioParam(audioNode, this.handleVOctChange),\n                disconnect: () => {\n                    if (this._cvInterval) {\n                        clearInterval(this._cvInterval);\n                        this._cvInterval = null;\n                    }\n                    this.handleVOctChange(0);\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._oscillator\n        });\n    }\n\n    handleTypeChange({ target: { value }}) {\n        this.props.setType(value);\n        this._oscillator.type = value;\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(value, this.setPitch);\n    }\n\n    handleVOctChange(value) {\n        this.props.setVOct(value, this.setPitch);\n    }\n\n    setPitch(){\n        const { vOct, frequency, audioContext } = this.props;\n        const oscFreq = 440 * Math.pow(2, vOct + frequency);\n        this._oscillator.frequency.setValueAtTime(oscFreq, audioContext.currentTime);\n    }\n    \n    render() {\n        const { id, type, frequency, connections } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>VCO</span>\n            Shape:\n            <select value={type} onChange={this.handleTypeChange}>\n                <option value='sine'>Sine</option>\n                <option value='square'>Square</option>\n                <option value='sawtooth'>Sawtooth</option>\n                <option value='triangle'>Triangle</option>\n            </select>\n            Freq:\n            <Knob min={-2} max={2} step={0.001} value={frequency} onChange={value => this.handleFrequencyChange(value)}/>\n            <Port portId='V/Oct' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof OscillatorNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('type', 'setType', 'sine'),\n    withState('frequency', 'setFrequency', 0),\n    withState('vOct', 'setVOct', 0),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(SimpleOscillator);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n\n        this._leftPanner = new StereoPannerNode(props.audioContext, { pan: -1 });\n        this._rightPanner = new StereoPannerNode(props.audioContext, { pan: 1 });\n        this._leftPanner.connect(props.audioContext.destination);\n        this._rightPanner.connect(props.audioContext.destination);\n    }\n\n    componentWillMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(this._leftPanner),\n                disconnect: audioNode => audioNode.disconnect(this._leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(this._rightPanner),\n                disconnect: audioNode => audioNode.disconnect(this._rightPanner)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>Stereo</span>\n            <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof StereoPannerNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n    }\n\n    componentWillMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this.props.audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(this.props.audioContext.destination)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>Mono</span>\n            <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', true),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\n\nclass Keyboard extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._gate = props.audioContext.createConstantSource();\n        this._gate.offset.value = 0;\n        this._gate.start();\n        this._cv = props.audioContext.createConstantSource();\n        this._cv.offset.value = 0;\n        this._cv.start();\n\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleOctaveChange = this.handleOctaveChange.bind(this);\n        this.handleKeyboardDown = this.handleKeyboardDown.bind(this);\n        this.handleKeyboardUp = this.handleKeyboardUp.bind(this);\n        this._keyboardDown = false;\n    }\n\n    componentWillMount() {\n        const { id, registerOutputs } = this.props;        \n        registerOutputs(id, {\n            CV: this._cv,\n            Gate: this._gate\n        });\n\n        document.addEventListener('keydown', this.handleKeyboardDown);\n        document.addEventListener('keyup', this.handleKeyboardUp);\n    }\n\n    handleKeyboardDown(event) {\n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!this._keyboardDown && keyCodeIndex !== -1) {\n            this._keyboardDown = true;\n            this.handleKeyDown(calculateNoteVolt(keyCodeIndex, this.props.octave));\n        }\n    }\n\n    handleKeyboardUp() {\n        this._keyboardDown = false;\n        this.handleKeyUp();\n    }\n\n    handleKeyDown(cv) {\n        this.changeFrequency(cv);\n        this._gate.offset.value = 1;\n    }\n\n    handleKeyUp() {\n        this._gate.offset.value = 0;\n    }\n\n    handleOctaveChange({ target: { value }}) {\n        const { setOctave, octave } = this.props;\n        const newOctave = Number(value);\n        const cv = this._cv.offset.value;\n        this.changeFrequency(cv + newOctave - octave);\n        setOctave(newOctave);\n    }\n\n    changeFrequency(cv) {\n        this._cv.offset.value = cv;\n    }\n\n    render() {\n        const { id, connections, octave } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>&#181;Keyboard</span>\n            Octave\n            <select value={octave} onChange={this.handleOctaveChange}>\n                <option value={2}>-2</option>\n                <option value={3}>-1</option>\n                <option value={4}>0</option>\n                <option value={5}>+1</option>\n                <option value={6}>+2</option>\n            </select>\n            <div style={{ display: 'grid' }}>\n                {\n                    NOTES.map((note, i) => {\n                            const isBlackKey = note.endsWith('#');\n                            const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                            return [\n                                <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                <button key={`${note}${i}`}\n                                        onMouseDown={e => {\n                                            e.stopPropagation();\n                                            this.handleKeyDown(calculateNoteVolt(i, octave));\n                                        }}\n                                        onMouseUp={this.handleKeyUp}\n                                        style={{ height:20, width:20,\n                                            gridRow,\n                                            alignSelf: 'center',\n                                            gridColumn: isBlackKey ? 3 : 2,\n                                            backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                            ];\n                        }\n                    )\n                }\n            </div>\n            <div style={{ display: 'flex', flex: 1 }}>\n                <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', true),\n    setStatic('panelWidth', 6),\n    withState('octave', 'setOctave', 4),\n    connect(mapStateToProps, { connectModules, registerOutputs })\n)(Keyboard);","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { listenToFirstAudioParam } from '../portHelpers';\n\nconst convertKnobValueToTime = value => Math.pow(value, 4) * 15 + 0.001;\n\nclass ADSR extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._adsr = props.audioContext.createConstantSource();        \n        this._adsr.offset.value = -1;\n        this._adsr.start();\n        this.handleGateInChange = this.handleGateInChange.bind(this);        \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;        \n        registerInputs(id, {\n            Gate: {\n                connect: audioNode => this._gateInterval = listenToFirstAudioParam(audioNode, this.handleGateInChange),\n                disconnect: () => {\n                    if (this._gateInterval) {\n                        clearInterval((this._gateInterval));\n                        this._gateInterval = null;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._adsr\n        });\n    }\n\n    handleGateInChange(value) {    \n        const { sustain, audioContext } = this.props;\n        const attack = convertKnobValueToTime(this.props.attack);\n        const decay = convertKnobValueToTime(this.props.decay);\n        const release = convertKnobValueToTime(this.props.release);       \n        const now = audioContext.currentTime;\n        const offset = this._adsr.offset;\n\n        if (value === 1) {\n            offset.cancelScheduledValues(0);\n            offset.linearRampToValueAtTime(-1, now + 0.01);\n            offset.linearRampToValueAtTime(0, now + attack);\n            offset.linearRampToValueAtTime(sustain - 1, now + attack + decay);\n        } else if (value === 0) {\n            offset.cancelScheduledValues(0);\n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(-1, now + release);\n        }\n    }\n\n    render() {\n        const { id, connections, attack, setAttack, decay, setDecay,\n            sustain, setSustain, release, setRelease } = this.props;        \n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>ADSR</span>\n            Attack:\n            <Knob min={0} max={1} step={0.001} value={attack} onChange={value => setAttack(value)} width={30} height={30}/>\n            Decay:\n            <Knob min={0} max={1} step={0.001} value={decay} onChange={value => setDecay(value)} width={30} height={30}/>\n            Sustain:\n            <Knob min={0} max={1} step={0.01} value={sustain} onChange={value => setSustain(Number(value))} width={30} height={30}/>\n            Release:\n            <Knob min={0} max={1} step={0.001} value={release} onChange={value => setRelease(Number(value))} width={30} height={30}/>\n            <Port portId='Gate' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('attack', 'setAttack', 0.5),\n    withState('decay', 'setDecay', 0.5),\n    withState('sustain', 'setSustain', 0.5),\n    withState('release', 'setRelease', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(ADSR);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\n\nclass Amp extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n        this._gain = props.audioContext.createGain();            \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs, audioContext } = this.props;        \n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._gain),\n                disconnect: audioNode => audioNode.disconnect(this._gain)\n            },\n            CV: {\n                connect: audioNode => audioNode.connect(this._gain.gain),\n                disconnect: audioNode => audioNode.disconnect(this._gain.gain)\n            }\n        });\n        registerOutputs(id, {\n           Out: this._gain\n        });\n    }\n\n    render() {\n        const { id, connections } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>VCA</span>\n            <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='CV' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]    \n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof GainNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n    )(Amp);","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\n\nconst QUAL_MUL = 30;\n\nclass VCF extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._vcf = props.audioContext.createBiquadFilter();  \n        this._vcf.type = \"lowpass\";        \n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.setPitch = this.setPitch.bind(this);\n        this.handleQChange = this.handleQChange.bind(this);\n        this.setQuality = this.setQuality.bind(this);       \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;        \n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._vcf),\n                disconnect: audioNode => audioNode.disconnect(this._vcf)\n            },\n        });\n        registerOutputs(id, {\n           Out: this._vcf\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(Number(value), this.setPitch);\n    }\n\n    setPitch()\n    {\n        const { frequency, audioContext } = this.props;\n        // Clamp the frequency between the minimum value (40 Hz) and half of the\n        // sampling rate.\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        this._vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }\n\n    handleQChange(value) {\n        this.props.setQ(Number(value), this.setQuality);\n    }\n\n    handleTypeChange({ target: { value }}) {\n        this.props.setType(value);\n        this._vcf.type = value;\n    }\n\n    setQuality()\n    {\n        const { q } = this.props;\n        this._vcf.Q.value = q * QUAL_MUL;\n    }\n\n    render() {\n        const { id, connections, type, frequency, q } = this.props;        \n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>VCF</span>\n            Shape:\n            <select value={type} onChange={this.handleTypeChange}>\n                <option value='lowpass'>Low Pass</option>\n                <option value='highpass'>High Pass</option>\n            </select>\n            Frequency:\n            <Knob min={0} max={1} step={0.01} value={frequency} onChange={value => this.handleFrequencyChange(value)}/>\n            Q:\n            <Knob min={0} max={1} step={0.01} value={q} onChange={value => this.handleQChange(value)}/>\n            <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof BiquadFilterNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('type', 'setType', 'lowpass'),\n    withState('frequency', 'setFrequency', 0.1),\n    withState('q', 'setQ', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(VCF);","import * as R from 'ramda';\nimport SimpleOscillator from './Components/SimpleOscillator';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport Amp from './Components/Amp';\nimport VCF from './Components/VCF';\n\nexport const MODULE_TYPE = {\n    OSCILLATOR: 'OSCILLATOR',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCF: 'VCF',\n    AMP: 'AMP'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 20;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}` };\n    switch (type){\n        case MODULE_TYPE.OSCILLATOR:\n            module.Module = SimpleOscillator;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF:\n            module.Module = VCF;\n            break;\n        case MODULE_TYPE.AMP:\n            module.Module = Amp;\n            break;\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    moduleCounters[type]++;\n    return module;\n};","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { moduleType, id }) => {\n        const newModule = createModule({ type: moduleType, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${moduleType}`);\n            return state;\n        }\n\n        newModule.left = state.maxLeft;// + R.pipe(R.values, R.pluck('width'), R.sum)(state.modules);\n        return R.evolve({\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width)\n        })(state);\n    },\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('outputs', outputs)\n        })\n    })(state),\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId })\n            }))\n    })(state),\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x }) => {\n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;\n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n            ({ id, left, width }) => {\n                const right = left + width;\n                return id !== moduleId &&  (\n                    (left >= newLeft && left < newRight) ||\n                    (left < newLeft && right > newLeft) ||\n                    (left === newLeft && right === newRight)\n                );\n            }\n        ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: R.evolve({\n                [moduleId]: R.evolve({\n                    left: R.always(newLeft)\n                })\n            }),\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    }\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {}\n};\n\nconst moveX = diff => R.evolve({\n    x: R.add(diff)\n});\n\nexport default handleActions({\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, { toPoint, toPortId })\n        })\n    })(state),\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state),\n    [ActionTypes.MODIFY_MODULE_CABLES]: (state, { moduleId, diff }) => R.evolve({\n        cables: R.map(R.cond([\n            [R.where({ portId: R.startsWith(moduleId) }), R.evolve({ fromPoint: moveX(diff) })],\n            [R.where({ toPortId: R.startsWith(moduleId) }), R.evolve({ toPoint: moveX(diff) })],\n            [R.T, R.identity]\n        ]))\n    })(state)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\n\nexport default combineReducers({ modules, cables });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch  (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            input.connect(output);\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n        }\n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nexport default createStore(reducer, applyMiddleware(...middlewareChain));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addModule } from '../actions';\nimport { MODULE_TYPE } from '../moduleFactory';\n\nconst ModulePicker = ({ addModule }) => <div>\n    <button onClick={() => addModule(MODULE_TYPE.KEYBOARD) }>Add Keyboard</button>\n    <button onClick={() => addModule(MODULE_TYPE.OSCILLATOR) }>Add Oscillator</button>\n    <button onClick={() => addModule(MODULE_TYPE.AMP) }>Add Amplifier</button>\n    <button onClick={() => addModule(MODULE_TYPE.ADSR) }>Add ADSR</button> \n    <button onClick={() => addModule(MODULE_TYPE.VCF) }>Add VCF</button>       \n    <button onClick={() => addModule(MODULE_TYPE.STEREO_AUDIO_INTERFACE) }>Add Stereo Audio Interface</button>\n    <button onClick={() => addModule(MODULE_TYPE.MONO_AUDIO_INTERFACE) }>Add Mono Audio Interface</button>\n</div>;\n\nexport default connect(null, { addModule })(ModulePicker);","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ cables }) =>\n    <svg style={{ position: 'fixed', left: 0, top: 0, width: '100%', height: '100%', pointerEvents: 'none' }}>\n        {cables.map(({ portId, fromPoint, toPoint, color }) => <Cable key={portId} fromPoint={fromPoint} toPoint={toPoint} color={color}/>)}\n    </svg>;\n\nconst mapStateToProps = ({ cables }) => ({\n    cables: R.values(cables.cables)\n});\n\nexport default connect(mapStateToProps, {})(CablesContainer);","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.OSCILLATOR, id: 'OSCILLATOR1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.AMP, id: 'AMP1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'OSCILLATOR1', portId: 'V/Oct' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'AMP1', portId: 'In' }, output: { moduleId: 'OSCILLATOR1', portId: 'Out' } },\n          { input: { moduleId: 'AMP1', portId: 'CV' }, output: { moduleId: 'ADSR1', portId: 'Out' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'AMP1', portId: 'Out' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\n\nconst tryToConnectModules = R.curry((dispatch, getState, connection) => {\n    const state = getState().modules;\n    const { input, output } = connection;\n    if (R.allPass([\n            R.path([input.moduleId, 'inputs', input.portId]),\n            R.path([output.moduleId, 'outputs', output.portId])])(state.modules))\n    {\n        dispatch(connectModules(connection));\n\n        const fromPortId = `${input.moduleId}-${input.portId}`;\n        const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n        dispatch(addCable({\n            portId: fromPortId,\n            color: randomColor({ luminosity: 'dark' }),\n            fromPoint: {\n                x: fromElem.x + fromElem.width / 2,\n                y: fromElem.y + fromElem.height / 2\n            }\n        }));\n\n        const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n        dispatch(modifyCable({\n            portId: fromPortId,\n            toPortId: `${output.moduleId}-${output.portId}`,\n            toPoint: {\n                x: toElem.x + toElem.width / 2,\n                y: toElem.y + toElem.height / 2\n            }\n        }));\n    }\n    else {\n        setTimeout(() => tryToConnectModules(dispatch, getState, connection), 0);\n    }\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    R.forEach(module => dispatch(addModule(module.type, module.id)))(preset.modules);\n    R.forEach(tryToConnectModules(dispatch, getState))(preset.connections);\n};","import React from 'react';\nimport * as R from 'ramda';\nimport { compose, withState } from 'recompose';\nimport defaultPresets from '../defaultPresets';\nimport { connect } from 'react-redux';\nimport { loadPreset } from '../actions';\n\nconst PresetManager = ({ preset, setPreset, loadPreset }) => {\n\n    const handlePresetChange = ({ target: { value } }) => {\n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    };\n\n    return <div>\n        <select value={preset} onChange={handlePresetChange}>\n            {\n                preset === '' && <option value=''>Select Preset</option>\n            }\n            { R.pipe(\n                R.keys,\n                R.map(p => <option key={p} value={p}>{p}</option>)\n            )(defaultPresets) }\n        </select>\n    </div>;\n};\n\nexport default compose(\n    withState('preset', 'setPreset', ''),\n    connect(null, { loadPreset })\n)(PresetManager);","import React from 'react';\nimport './Panel.css';\n\nconst Screw = () => <img alt='screw' src={require('./screw_header.svg')} height={14} width={14} style={{ margin: 5 }}/>;\n\nconst PanelEdge = ({ children }) => <div className='panel_edge'>\n    <Screw/>\n    {children}\n    <Screw/>\n</div>;\n\nconst Panel = ({ children, dragging, setDragging, width, left }) =>\n    <div className='module-panel'\n         style={{ width, left, cursor: dragging ? 'grabbing' : 'grab' }}\n         onMouseDown={() => setDragging(true)} onMouseUp={() => setDragging(false)}>\n        <PanelEdge/>\n        <div className='panel_content'>\n            {children}\n        </div>\n        <PanelEdge/>\n    </div>;\n\nexport default Panel;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose, withState } from 'recompose';\nimport * as R from 'ramda';\nimport ModulePicker from '../../Modules/Components/ModulePicker';\nimport CablesContainer from '../../Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport { unsetStartingPort, moveModule } from '../../Modules/actions';\nimport { modifyCable, removeCable, modifyModuleCables } from '../../Cables/actions';\nimport './Rack.css';\nimport Panel from \"../../Common/Panel\";\n\nclass Rack extends Component {\n    constructor(props){\n        super(props);\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        this._audioContext = new AudioContext();\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleDragging = this.handleDragging.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { modules, modifyModuleCables } = this.props;\n        let prevModule;\n        const movedModule = R.find(\n            ({ id, left }) => {\n                prevModule = R.find(R.where({\n                    id: R.equals(id),\n                    left: R.complement(R.equals(left))\n                }))(prevProps.modules)\n                return !R.isNil(prevModule)\n            }\n        )(modules);\n        if (movedModule) {\n            modifyModuleCables({\n                moduleId: movedModule.id,\n                diff: movedModule.left - prevModule.left\n            })\n        }\n    }\n\n    handleMouseUp() {\n        const { unsetStartingPort, removeCable, startingPort } = this.props;\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }\n\n    handleMouseMove(e) {\n        this.moveCable(e);\n        this.dragModule(e);\n    }\n\n    moveCable(e) {\n        const { modifyCable, startingPort } = this.props;\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY }\n        });\n    }\n\n    dragModule(e) {\n        const { draggingModuleId, moveModule } = this.props;\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX);\n    }\n\n    handleDragging(moduleId) {\n        return isDragging => {\n            this.props.setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }\n\n    render() {\n        const { modules, draggingModuleId } = this.props;\n        return <div onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove}>\n            <ModulePicker/>\n            <PresetManager/>\n            <div>\n                <div className='rack'>\n                    { modules.map(({ Module, id, width, left }) =>\n                        <Panel key={id}\n                               setDragging={this.handleDragging(id)}\n                               dragging={ id === draggingModuleId }\n                               width={width} left={left}>\n                            <Module id={id} audioContext={this._audioContext}/>\n                        </Panel>\n                    ) }\n                </div>\n                <CablesContainer/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = state => ({\n    modules: R.values(state.modules.modules),\n    startingPort: state.modules.startingPort\n});\nexport default compose(\n    withState('draggingModuleId', 'setDraggingModuleId', null),\n    connect(mapStateToProps, { modifyCable, removeCable, unsetStartingPort, moveModule, modifyModuleCables })\n)(Rack);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Rack from './Rack/Components/Rack';\nimport './App.css';\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Rack/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}