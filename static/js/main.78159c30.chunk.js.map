{"version":3,"sources":["Common/port.svg","Common/knob.svg","Modules/Components sync /^/.//.*/.svg$","Modules/Components/pulse.svg","Modules/Components/sawtooth.svg","Modules/Components/sine.svg","Modules/Components/triangle.svg","Common/screw_header.svg","Cables/actions.js","actionTypes.js","Modules/actions.js","Common/Port.js","Common/Knob.js","Modules/Components/styles.js","Modules/Components/VCO.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Modules/Components/Keyboard.js","Rack/helpers/createPulseOscillator.js","Modules/Components/ADSR.js","Modules/portHelpers.js","Modules/Components/VCA.js","Modules/Components/VCF.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","Rack/reducer.js","reducer.js","middleware.js","store.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Rack/defaultPresets.js","Rack/actions.js","Rack/Components/PresetManager.js","Common/Panel.js","Rack/helpers/createVoltToHzConverter.js","Rack/Components/Rack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./pulse.svg","./sawtooth.svg","./sine.svg","./triangle.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","addCable","_ref","type","portId","fromPoint","color","modifyCable","_ref2","toPoint","toPortId","removeCable","addModule","moduleType","connectModules","output","input","disconnectModule","port","registerInputs","inputs","registerOutputs","outputs","unsetStartingPort","removeModule","moduleId","dispatch","getState","console","log","_getState","_getState$modules","modules","connections","cables","removedModule","disconnectPorts","R","cablePortId","concat","LABEL_POSITIONS","connect","ownProps","startingPort","setStartingPort","_elem","label","_ref$labelPosition","labelPosition","portType","portLabel","react_default","a","createElement","className","cx","disabled","onMouseDown","stopPropagation","_elem$getBoundingClie","getBoundingClientRect","x","y","width","height","randomColor","luminosity","onMouseUp","_connectModules","_elem$getBoundingClie2","defineProperty","ref","elem","preventDefault","src","require","alt","Knob","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseMove","bind","assertThisInitialized","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","_this$props","isMoving","onChange","max","min","step","buttons","_this$_elem$getBoundi","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","setIsMoving","_this$props2","value","_this2","_this$props3","_this$props3$height","_this$props3$width","style","display","flexDirection","cursor","margin","transform","Component","compose","withState","styles","container","body","flex","justifyContent","spaceAround","createOscillator","audioContext","oscillator","frequency","VCO","pulse","createPulseOscillator","_oscillators","Sawtooth","Pulse","Triangle","Sine","window","_frequencyControl","createVoltToHzConverter","_detuneControl","createConstantSource","volt","offset","_fmGain","createGain","gain","o","detune","_pwCvGain","pwm","handleFrequencyChange","handleTuneChange","handlePwChange","handlePwmCvChange","handleFmCvChange","startNodes","V/Oct","audioNode","disconnect","PWM","FM","setFrequency","setTune","setPw","setPwmCv","setFmCv","start","tune","pw","pwmCv","fmCv","objectSpread","src_Common_Port","Common_Knob","osc","key","toLowerCase","setStatic","OscillatorNode","ConstantSourceNode","StereoAudioInterface","_leftPanner","StereoPannerNode","pan","_rightPanner","destination","Left","Right","In","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","C#","D#","F#","G#","A#","calculateNoteVolt","noteIndex","octave","Keyboard","_gate","_cv","handleKeyDown","handleKeyUp","handleOctaveChange","handleKeyboardDown","handleKeyboardUp","_keyboardDown","CV","Gate","event","keyCodeIndex","keyCode","cv","changeFrequency","target","setOctave","newOctave","Number","note","i","isBlackKey","endsWith","gridRow","alignSelf","gridColumn","backgroundColor","convertKnobValueToTime","pow","ADSR","_adsr","handleGateInChange","_gateInterval","callback","interval","_loop","AudioParam","lastValue","setInterval","listenToFirstAudioParam","clearInterval","Out","sustain","attack","decay","release","now","currentTime","cancelScheduledValues","linearRampToValueAtTime","setValueAtTime","setAttack","setDecay","setSustain","setRelease","VCA","_gain","GainNode","VCF","_vcf","createBiquadFilter","Q","handleTypeChange","setPitch","handleQChange","setQuality","maxValue","sampleRate","numberOfOctaves","LN2","multiplier","setQ","setType","q","_this3","BiquadFilterNode","MODULE_TYPE","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","moduleCounters","removeLastConnection","handleActions","_handleActions","state","newModule","_ref$id","undefined","Module","MonoAudioInterface","isBrowserSupported","panelWidth","createModule","left","maxLeft","alert","_ref3","_ref4","_ref5","_R$evolve3","_ref6","_ref7","_ref8","prevLeft","moduleWidth","newLeft","newRight","innerWidth","_ref9","right","_ref10","moveX","diff","reducer_handleActions","setDirty","isDirty","Rack_reducer_handleActions","presetLoading","combineReducers","rack","middleware","next","action","lastInput","lastOutput","_getState$modules2","middlewareChain","thunk","createStore","reducer","applyMiddleware","apply","onClick","Cable","d","lowestPoint","highestPoint","midpointY","abs","distance","midpointX","calculateMidpoint","opacity","stroke","fill","strokeWidth","scrollLeft","position","top","pointerEvents","Components_Cable","defaultPresets","Basic","connectModulesAndCables","connection","fromPortId","fromElem","getElementById","toElem","checkIfAllModulesRemoves","preset","setTimeout","checkIfModulesCreated","stateModuleIds","moduleIds","checkIfAllConnected","stateConnections","stateConnection","PresetManager","handlePresetChange","prevProps","setPreset","loadPreset","Screw","PanelEdge","children","Panel_Screw","dragging","setDragging","Panel_PanelEdge","index_es","size","icon","pulseCurve","Float32Array","constantOneCurve","node","pulseShaper","createWaveShaper","curve","widthGain","constantOneShaper","arguments","createVoltToFreqExpCurve","baseFrequency","normalized","octaves","voltToFreqWaveshaper","voltScale","Rack","AudioContext","webkitAudioContext","_audioContext","handleDragging","handleRackScroll","_analyser","createAnalyser","analyser","visuallize","canvas","_canvas","canvasCtx","getContext","fftSize","dataArray","frequencyBinCount","length","WIDTH","HEIGHT","clearRect","draw","v","requestAnimationFrame","getFloatTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","prevModule","modifyModuleCables","movedModule","moveCable","dragModule","_this$props4","draggingModuleId","moveModule","isDragging","setDraggingModuleId","setScrollLeft","_this$props5","onMouseMove","onScroll","Components_ModulePicker","Components_PresetManager","src_Common_Panel","Components_CablesContainer","library","add","faTrash","App","es","store","Rack_Components_Rack","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78159c30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/port.1b33f6c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","var map = {\n\t\"./pulse.svg\": 74,\n\t\"./sawtooth.svg\": 75,\n\t\"./sine.svg\": 76,\n\t\"./triangle.svg\": 77\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73;","module.exports = __webpack_public_path__ + \"static/media/pulse.f9689bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sawtooth.de511017.svg\";","module.exports = __webpack_public_path__ + \"static/media/sine.e1994103.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.87d20148.svg\";","module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});\n\nexport const modifyModuleCables = ({ moduleId, diff }) => ({\n    type: ActionTypes.MODIFY_MODULE_CABLES,\n    moduleId,\n    diff\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\nexport const REMOVE_ALL_MODULES = 'REMOVE_ALL_MODULES';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\nexport const MODIFY_MODULE_CABLES = 'MODIFY_MODULE_CABLES';\n\nexport const LOAD_PRESET_START = 'LOAD_PRESET_START';\nexport const LOAD_PRESET_FINISH = 'LOAD_PRESET_FINISH';","import * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\nimport { removeCable } from \"../Cables/actions\";\n\nexport const addModule = (moduleType, id) => ({\n    type: ActionTypes.ADD_MODULE,\n    moduleType,\n    id\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x\n});\n\nexport const removeModule = moduleId => (dispatch, getState) => {\n    console.log(\"remove module\", moduleId);\n    const { modules: { modules, connections }, cables: { cables } } = getState();\n    const removedModule = modules[moduleId];\n    if (!removedModule) return;\n\n    const disconnectPorts =\n        R.pipe(\n            R.keys,\n            R.filter(portId => R.path([moduleId, portId], connections)),\n            R.forEach(portId => {\n                dispatch(disconnectModule({ moduleId, portId }));\n                let cablePortId = `${moduleId}-${portId}`;\n                if (!cables[cablePortId])\n                {\n                    cablePortId = R.pipe(\n                        R.filter(R.propEq('toPortId', cablePortId)),\n                        R.keys,\n                        R.head\n                    )(cables);\n                }\n                dispatch(removeCable(cablePortId));\n            })\n        );\n\n    if (removedModule.inputs)\n    {\n        disconnectPorts(removedModule.inputs);\n    }\n    if (removedModule.outputs)\n    {\n        disconnectPorts(removedModule.outputs);\n    }\n    dispatch({\n        type: ActionTypes.REMOVE_MODULE,\n        moduleId\n    })\n};\n\nexport const removeAllModules = () => (dispatch, getState) => {\n    console.log(\"remove all modules\");\n    R.pipe(\n        R.keys,\n        R.map(moduleId => dispatch(removeModule(moduleId)))\n    )(getState().modules.modules);\n    dispatch({ type: ActionTypes.REMOVE_ALL_MODULES });\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { connectModules, disconnectModule, setStartingPort, unsetStartingPort } from '../Modules/actions';\nimport { addCable, removeCable, modifyCable } from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\n\nexport const LABEL_POSITIONS = {\n    ABOVE: 'ABOVE',\n    BELOW: 'BELOW'\n}\n\nconst Port = ({ label, labelPosition = LABEL_POSITIONS.ABOVE, portId, connections, connectModules, disconnectModule, moduleId, portType, startingPort, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable }) => {\n    let _elem;\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connections[portId]) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connections[portId].moduleId}-${connections[portId].portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n        addCable({\n            portId: `${moduleId}-${portId}`,\n            fromPoint: { x: x + width / 2 , y: y + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId))\n        {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n\n        if (connections[portId] &&\n            (connections[portId].moduleId !== startingPort.moduleId || connections[portId].portId !== startingPort.portId)) {\n            removeCable(`${connections[portId].moduleId}-${connections[portId].portId}`);\n            removeCable(`${moduleId}-${portId}`);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2 , y: y + height / 2 },\n            toPortId: `${moduleId}-${portId}`\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    const portLabel = label || portId;\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}>\n        { labelPosition === LABEL_POSITIONS.ABOVE && portLabel }\n        <img id={`${moduleId}-${portId}`} height=\"30\" width=\"30\" ref={elem => _elem = elem}\n             onMouseDown={e => e.preventDefault()} src={require('./port.svg')} alt={`${moduleId}-${portId}`}/>\n        { labelPosition === LABEL_POSITIONS.BELOW && portLabel }\n    </div>;\n};\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    startingPort: modules.startingPort,\n    connections: modules.connections[ownProps.moduleId]\n});\n\nexport default connect(mapStateToProps, { connectModules, disconnectModule, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable })(Port);","import React, { Component } from 'react';\nimport { compose, withState } from 'recompose';\n\nconst MAX_ANGLE = 150;\n\nclass Knob extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.calculateValueAngle = this.calculateValueAngle.bind(this);\n    }\n\n    componentWillMount() {\n        document.addEventListener('mouseup', this.handleMouseUp);\n        document.addEventListener('mousemove', this.handleMouseMove);\n    }\n\n    handleMouseMove(e) {\n        const { isMoving, onChange, max, min, step } = this.props;\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = this._elem.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;        \n        if (angle > 2.1 * MAX_ANGLE) angle = 0;    \n\n        const ratio = angle / (2 * MAX_ANGLE);\n            let newValue = ratio * (max - min) + min;\n            newValue = Math.floor(newValue / step) * step;\n            if (newValue > max) newValue = max;\n            onChange(newValue);\n    }\n\n    handleMouseDown(e) {\n        e.stopPropagation();\n        this.props.setIsMoving(true);\n    }\n\n    handleMouseUp() {\n        this.props.setIsMoving(false);\n    }\n\n    calculateValueAngle() {\n        const { min, max, value } = this.props;\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }\n\n    render() {\n        const { label, height = 50, width = 50 } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            { label }\n            <img ref={elem => { this._elem = elem; } }\n                 style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${this.calculateValueAngle()}deg)` }}\n                 onMouseDown={this.handleMouseDown}\n                 alt='knob' src={require('./knob.svg')} height={height} width={width}/>\n        </div>\n    }\n}\n\nexport default compose(\n    withState('isMoving', 'setIsMoving', false)\n)(Knob);","export default {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-evenly'\n    },\n    spaceAround: {\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n};","import React, { Component } from 'react';\nimport { compose, withState, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport styles from './styles';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nclass VCO extends Component {\n    constructor(props) {\n        super(props);\n        const{ audioContext } = props;\n        if (!audioContext) throw new Error('audioContext property must be provided');\n\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        this._oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            Pulse: pulse,\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Sine: createOscillator(audioContext, 'sine'),\n        };\n        window.pulse = this._oscillators.Pulse;\n        window['sine' + props.id] = this._oscillators.Sine;\n\n\n        this._frequencyControl = audioContext.createVoltToHzConverter(440, 2);\n        this._detuneControl = audioContext.createConstantSource();\n        this._frequencyControl.volt.value = 0;\n        this._detuneControl.offset.value = 0;\n\n        this._fmGain = audioContext.createGain();\n        this._fmGain.gain.value = 0;\n        this._fmGain.connect(this._frequencyControl.volt);\n        R.forEachObjIndexed(o => this._frequencyControl.connect(o.frequency))(this._oscillators);\n        R.forEachObjIndexed(o => this._detuneControl.connect(o.detune))(this._oscillators);\n\n        this._pwCvGain = audioContext.createGain();\n        this._pwCvGain.gain.value = 0;\n        this._pwCvGain.connect(this._oscillators.Pulse.width);\n        window.pwm = this._pwCvGain;\n\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTuneChange = this.handleTuneChange.bind(this);\n        this.handlePwChange = this.handlePwChange.bind(this);\n        this.handlePwmCvChange = this.handlePwmCvChange.bind(this);\n        this.handleFmCvChange = this.handleFmCvChange.bind(this);\n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this.startNodes();\n        registerInputs(id, {\n            'V/Oct': {\n                connect: audioNode => audioNode.connect(this._frequencyControl.volt),\n                disconnect: audioNode => audioNode.disconnect(this._frequencyControl.volt)\n            },\n            'PWM': {\n                connect: audioNode => audioNode.connect(this._pwCvGain),\n                disconnect: audioNode => audioNode.disconnect(this._pwCvGain)\n            },\n            'FM': {\n                connect: audioNode => audioNode.connect(this._fmGain),\n                disconnect: audioNode => audioNode.disconnect(this._fmGain)\n            }\n        });\n        registerOutputs(id, {\n            Sawtooth: this._oscillators.Sawtooth,\n            Pulse: this._oscillators.Pulse,\n            Triangle: this._oscillators.Triangle,\n            Sine: this._oscillators.Sine\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(value);\n        this._frequencyControl.offset.value = value;\n    }\n\n    handleTuneChange(value) {\n        this.props.setTune(value);\n        this._detuneControl.offset.value = value;\n    }\n\n    handlePwChange(value) {\n        this.props.setPw(value);\n        this._oscillators.Pulse.width.value = value;\n    }\n\n    handlePwmCvChange(value) {\n        this.props.setPwmCv(value);\n        this._pwCvGain.gain.value = value / 10;\n    }\n\n    handleFmCvChange(value) {\n        this.props.setFmCv(value);\n        this._fmGain.gain.value = value;\n    }\n\n    startNodes() {\n        R.forEachObjIndexed(o => o.start())(this._oscillators);\n        this._frequencyControl.start();\n        this._detuneControl.start();\n    }\n    \n    render() {\n        const { id, frequency, tune, pw, pwmCv, fmCv } = this.props;\n        return <div style={styles.container}>\n            <span>VCO</span>\n            <div style={{ ...styles.body, justifyContent: 'space-between' }}>\n                <div style={styles.spaceAround}>\n                    <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                        <Port portId='V/Oct' moduleId={id} portType='input'/>\n                        <Port portId='FM' moduleId={id} portType='input'/>\n                        <Port portId='PWM' moduleId={id} portType='input'/>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                        <Knob label='Range' min={-2} max={2} step={0.001} value={frequency} width={30} height={30} onChange={this.handleFrequencyChange}/>\n                        <Knob label='Tune' min={-600} max={600} step={1} value={tune} width={30} height={30} onChange={this.handleTuneChange}/>\n                        <Knob label='FM CV' min={0} max={1} step={0.005} value={fmCv} width={30} height={30} onChange={this.handleFmCvChange}/>\n                        <Knob label='PW' min={-1} max={1} step={0.001} value={pw} width={30} height={30} onChange={this.handlePwChange}/>\n                        <Knob label='PWM CV' min={0} max={1} step={0.005} value={pwmCv} width={30} height={30} onChange={this.handlePwmCvChange}/>\n                    </div>\n                </div>\n                <div style={styles.spaceAround}>\n                    {\n                        R.pipe(\n                            R.keys,\n                            R.map(osc =>\n                                <Port key={osc} label={<img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc}/>}\n                                      labelPosition={LABEL_POSITIONS.BELOW} portId={osc} moduleId={id} portType='output'/>)\n                        )(this._oscillators)\n                    }\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 8),\n    withState('frequency', 'setFrequency', 0),\n    withState('tune', 'setTune', 0),\n    withState('pw', 'setPw', 0),\n    withState('pwmCv', 'setPwmCv', 0),\n    withState('fmCv', 'setFmCv', 0),\n    withState('vOct', 'setVOct', 0),\n    connect(null, { connectModules, registerInputs, registerOutputs })\n)(VCO);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n\n        this._leftPanner = new StereoPannerNode(props.audioContext, { pan: -1 });\n        this._rightPanner = new StereoPannerNode(props.audioContext, { pan: 1 });\n        this._leftPanner.connect(props.audioContext.destination);\n        this._rightPanner.connect(props.audioContext.destination);\n    }\n\n    componentWillMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(this._leftPanner),\n                disconnect: audioNode => audioNode.disconnect(this._leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(this._rightPanner),\n                disconnect: audioNode => audioNode.disconnect(this._rightPanner)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>Stereo</span>\n            <div style={styles.body}>\n                <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof StereoPannerNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n    }\n\n    componentWillMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this.props.audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(this.props.audioContext.destination)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>Mono</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', true),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\n\nclass Keyboard extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._gate = props.audioContext.createConstantSource();\n        this._gate.offset.value = 0;\n        this._gate.start();\n        this._cv = props.audioContext.createConstantSource();\n        this._cv.offset.value = 0;\n        this._cv.start();\n\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleOctaveChange = this.handleOctaveChange.bind(this);\n        this.handleKeyboardDown = this.handleKeyboardDown.bind(this);\n        this.handleKeyboardUp = this.handleKeyboardUp.bind(this);\n        this._keyboardDown = false;\n    }\n\n    componentWillMount() {\n        const { id, registerOutputs } = this.props;        \n        registerOutputs(id, {\n            CV: this._cv,\n            Gate: this._gate\n        });\n\n        document.addEventListener('keydown', this.handleKeyboardDown);\n        document.addEventListener('keyup', this.handleKeyboardUp);\n    }\n\n    handleKeyboardDown(event) {\n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!this._keyboardDown && keyCodeIndex !== -1) {\n            this._keyboardDown = true;\n            this.handleKeyDown(calculateNoteVolt(keyCodeIndex, this.props.octave));\n        }\n    }\n\n    handleKeyboardUp() {\n        this._keyboardDown = false;\n        this.handleKeyUp();\n    }\n\n    handleKeyDown(cv) {\n        this.changeFrequency(cv);\n        this._gate.offset.value = 1;\n    }\n\n    handleKeyUp() {\n        this._gate.offset.value = 0;\n    }\n\n    handleOctaveChange({ target: { value }}) {\n        const { setOctave, octave } = this.props;\n        const newOctave = Number(value);\n        const cv = this._cv.offset.value;\n        this.changeFrequency(cv + newOctave - octave);\n        setOctave(newOctave);\n    }\n\n    changeFrequency(cv) {\n        this._cv.offset.value = cv;\n    }\n\n    render() {\n        const { id, connections, octave } = this.props;\n        return <div style={styles.container}>\n            <span>&#181;Keyboard</span>\n            <div style={styles.body}>\n                Octave\n                <select value={octave} onChange={this.handleOctaveChange}>\n                    <option value={2}>-2</option>\n                    <option value={3}>-1</option>\n                    <option value={4}>0</option>\n                    <option value={5}>+1</option>\n                    <option value={6}>+2</option>\n                </select>\n                <div style={{ display: 'grid', flex: 1 }}>\n                    {\n                        NOTES.map((note, i) => {\n                                const isBlackKey = note.endsWith('#');\n                                const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                                return [\n                                    <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                    <button key={`${note}${i}`}\n                                            onMouseDown={e => {\n                                                e.stopPropagation();\n                                                this.handleKeyDown(calculateNoteVolt(i, octave));\n                                            }}\n                                            onMouseUp={this.handleKeyUp}\n                                            style={{ height:20, width:20,\n                                                gridRow,\n                                                alignSelf: 'center',\n                                                gridColumn: isBlackKey ? 3 : 2,\n                                                backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                                ];\n                            }\n                        )\n                    }\n                </div>\n                <div style={styles.spaceAround}>\n                    <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('octave', 'setOctave', 4),\n    connect(mapStateToProps, { connectModules, registerOutputs })\n)(Keyboard);","// Pulse oscillator from Andy Harman\n// https://github.com/pendragon-andyh/WebAudio-PulseOscillator\nconst pulseCurve = new Float32Array(256);\nfor(let i = 0; i < 128; i++) {\n    pulseCurve[i] = -1;\n    pulseCurve[i + 128] = 1;\n}\nconst constantOneCurve = new Float32Array(2);\nconstantOneCurve[0] = 1;\nconstantOneCurve[1] = 1;\nexport default function createPulseOscillator() {\n    const node = this.createOscillator();\n    node.type = \"sawtooth\";\n\n    const pulseShaper = this.createWaveShaper();\n    pulseShaper.curve = pulseCurve;\n    node.connect(pulseShaper);\n    const widthGain = this.createGain();\n    widthGain.gain.value = 0;\n    node.width = widthGain.gain;\n    node.widthGain = widthGain;\n    widthGain.connect(pulseShaper);\n\n    const constantOneShaper = this.createWaveShaper();\n    constantOneShaper.curve = constantOneCurve;\n    node.connect(constantOneShaper);\n    constantOneShaper.connect(widthGain);\n\n    node.connect = function() {\n        pulseShaper.connect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    node.disconnect = function() {\n        pulseShaper.disconnect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    return node;\n}","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { listenToFirstAudioParam } from '../portHelpers';\nimport styles from './styles';\n\nconst convertKnobValueToTime = value => Math.pow(value, 4) * 15 + 0.001;\n\nclass ADSR extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._adsr = props.audioContext.createConstantSource();\n        this._adsr.offset.value = 0;\n        this.handleGateInChange = this.handleGateInChange.bind(this);        \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this._adsr.start();\n        registerInputs(id, {\n            Gate: {\n                connect: audioNode => this._gateInterval = listenToFirstAudioParam(audioNode, this.handleGateInChange),\n                disconnect: () => {\n                    if (this._gateInterval) {\n                        clearInterval((this._gateInterval));\n                        this._gateInterval = null;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._adsr\n        });\n    }\n\n    handleGateInChange(value) {\n        const { sustain, audioContext } = this.props;\n        const attack = convertKnobValueToTime(this.props.attack);\n        const decay = convertKnobValueToTime(this.props.decay);\n        const release = convertKnobValueToTime(this.props.release);       \n        const now = audioContext.currentTime;\n        const offset = this._adsr.offset;\n\n        if (value === 1) {\n            offset.cancelScheduledValues(0);\n            offset.linearRampToValueAtTime(0, now + 0.01);\n            offset.linearRampToValueAtTime(1, now + attack);\n            offset.linearRampToValueAtTime(sustain, now + attack + decay);\n        } else if (value === 0) {\n            offset.cancelScheduledValues(0);\n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(0, now + release);\n        }\n    }\n\n    render() {\n        const { id, connections, attack, setAttack, decay, setDecay,\n            sustain, setSustain, release, setRelease } = this.props;\n        return <div style={styles.container}>\n            <span>ADSR</span>\n            <div style={styles.body}>\n                Attack:\n                <Knob min={0} max={1} step={0.001} value={attack} onChange={value => setAttack(value)} width={30}\n                      height={30}/>\n                Decay:\n                <Knob min={0} max={1} step={0.001} value={decay} onChange={value => setDecay(value)} width={30}\n                      height={30}/>\n                Sustain:\n                <Knob min={0} max={1} step={0.01} value={sustain} onChange={value => setSustain(Number(value))}\n                      width={30} height={30}/>\n                Release:\n                <Knob min={0} max={1} step={0.001} value={release} onChange={value => setRelease(Number(value))}\n                      width={30} height={30}/>\n                <div style={styles.spaceAround}>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='input'/>\n                    <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('attack', 'setAttack', 0.5),\n    withState('decay', 'setDecay', 0.5),\n    withState('sustain', 'setSustain', 0.5),\n    withState('release', 'setRelease', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(ADSR);","export function listenToFirstAudioParam(audioNode, callback)\n{\n    let interval = null;\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            let lastValue = audioNode[p].value;\n            callback(lastValue);\n            interval = setInterval(() => {\n                if (lastValue !== audioNode[p].value) {\n                    lastValue = audioNode[p].value;\n                    callback(lastValue);\n                }\n            }, 0);\n            break;\n        }\n    }\n    return interval;\n}","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass VCA extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n        this._gain = props.audioContext.createGain();\n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs, audioContext } = this.props;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._gain),\n                disconnect: audioNode => audioNode.disconnect(this._gain)\n            },\n            CV: {\n                connect: audioNode => {\n                    this._gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    audioNode.connect(this._gain.gain);\n                },\n                disconnect: audioNode => {\n                    this._gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(this._gain.gain);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase) it won't effect any more\n                    if (audioNode.offset)\n                    {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._gain\n        });\n    }\n\n    render() {\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>VCA</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='CV' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]    \n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof GainNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n    )(VCA);","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\n\nconst QUAL_MUL = 30;\n\nclass VCF extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._vcf = props.audioContext.createBiquadFilter();  \n        this._vcf.type = \"lowpass\";\n        this._vcf.Q.value = 0.5;\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.setPitch = this.setPitch.bind(this);\n        this.handleQChange = this.handleQChange.bind(this);\n        this.setQuality = this.setQuality.bind(this);       \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;        \n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._vcf),\n                disconnect: audioNode => audioNode.disconnect(this._vcf)\n            },\n        });\n        registerOutputs(id, {\n           Out: this._vcf\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(Number(value), this.setPitch);\n    }\n\n    setPitch()\n    {\n        const { frequency, audioContext } = this.props;\n        // Clamp the frequency between the minimum value (40 Hz) and half of the\n        // sampling rate.\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        this._vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }\n\n    handleQChange(value) {\n        this.props.setQ(Number(value), this.setQuality);\n    }\n\n    handleTypeChange({ target: { value }}) {\n        this.props.setType(value);\n        this._vcf.type = value;\n    }\n\n    setQuality()\n    {\n        const { q } = this.props;\n        this._vcf.Q.value = q * QUAL_MUL;\n    }\n\n    render() {\n        const { id, connections, type, frequency, q } = this.props;        \n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>VCF</span>\n            Shape:\n            <select value={type} onChange={this.handleTypeChange}>\n                <option value='lowpass'>Low Pass</option>\n                <option value='highpass'>High Pass</option>\n            </select>\n            Frequency:\n            <Knob min={0} max={1} step={0.01} value={frequency} onChange={value => this.handleFrequencyChange(value)}/>\n            Q:\n            <Knob min={0} max={1} step={0.01} value={q} onChange={value => this.handleQChange(value)}/>\n            <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof BiquadFilterNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('type', 'setType', 'lowpass'),\n    withState('frequency', 'setFrequency', 0.1),\n    withState('q', 'setQ', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(VCF);","import * as R from 'ramda';\nimport VCO from './Components/VCO';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport VCA from './Components/VCA';\nimport VCF from './Components/VCF';\n\nexport const MODULE_TYPE = {\n    VCO: 'VCO',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCA: 'VCA',\n    VCF: 'VCF'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 20;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}` };\n    switch (type){\n        case MODULE_TYPE.VCO:\n            module.Module = VCO;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF:\n            module.Module = VCF;\n            break;\n        case MODULE_TYPE.VCA:\n            module.Module = VCA;\n            break;\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    moduleCounters[type]++;\n    return module;\n};\n","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { moduleType, id }) => {\n        const newModule = createModule({ type: moduleType, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${moduleType}`);\n            return state;\n        }\n\n        newModule.left = state.maxLeft;\n        return R.evolve({\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width)\n        })(state);\n    },\n\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('outputs', outputs)\n        })\n    })(state),\n\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId })\n            }))\n    })(state),\n\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x }) => {\n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;\n\n        if (newRight > window.innerWidth) return state;\n        \n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n            ({ id, left, width }) => {\n                const right = left + width;\n                return id !== moduleId &&  (\n                    (left >= newLeft && left < newRight) ||\n                    (left < newLeft && right > newLeft) ||\n                    (left === newLeft && right === newRight)\n                );\n            }\n        ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: R.evolve({\n                [moduleId]: R.evolve({\n                    left: R.always(newLeft)\n                })\n            }),\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    },\n\n    [ActionTypes.REMOVE_MODULE]: (state, { moduleId }) => {\n        const removedModule = state.modules[moduleId];\n\n        return R.evolve({\n            modules: R.dissoc(moduleId),\n            maxLeft: lastValue => removedModule.left + removedModule.width === lastValue ? removedModule.left : lastValue\n        })(state);\n    }\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {}\n};\n\nconst moveX = diff => R.evolve({\n    x: R.add(diff)\n});\n\nexport default handleActions({\n\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, { toPoint, toPortId })\n        })\n    })(state),\n\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state),\n\n    [ActionTypes.MODIFY_MODULE_CABLES]: (state, { moduleId, diff }) => R.evolve({\n        cables: R.map(R.cond([\n            [R.where({ portId: R.startsWith(moduleId) }), R.evolve({ fromPoint: moveX(diff) })],\n            [R.where({ toPortId: R.startsWith(moduleId) }), R.evolve({ toPoint: moveX(diff) })],\n            [R.T, R.identity]\n        ]))\n    })(state)\n\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\n// import * as R from 'ramda';\n\nconst initialState = {\n    presetLoading: false,\n    isDirty: false\n};\n\nconst setDirty = isDirty => state => ({ ...state, isDirty });\n\nexport default handleActions({\n    [ActionTypes.LOAD_PRESET_START]: state => ({ ...state, presetLoading: true }),\n    [ActionTypes.LOAD_PRESET_FINISH]: state => ({ ...setDirty(false)(state), presetLoading: false  }),\n    [ActionTypes.REMOVE_MODULE]: setDirty(true),\n    [ActionTypes.ADD_MODULE]: setDirty(true),\n    [ActionTypes.REMOVE_CABLE]: setDirty(true),\n    [ActionTypes.ADD_CABLE]: setDirty(true)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\nimport rack from './Rack/reducer';\n\nexport default combineReducers({ modules, cables, rack });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch  (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            if (input && output)\n            {\n                input.connect(output);\n            }\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n            break;\n        }\n        default:\n            break;        \n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nexport default createStore(reducer, applyMiddleware(...middlewareChain));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addModule } from '../actions';\nimport { MODULE_TYPE } from '../moduleFactory';\n\nconst ModulePicker = ({ addModule }) => <div>\n    <button onClick={() => addModule(MODULE_TYPE.KEYBOARD) }>Add Keyboard</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCO) }>Add VCO</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCA) }>Add VCA</button>\n    <button onClick={() => addModule(MODULE_TYPE.ADSR) }>Add ADSR</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCF) }>Add VCF</button>   \n    <button onClick={() => addModule(MODULE_TYPE.STEREO_AUDIO_INTERFACE) }>Add Stereo Audio Interface</button>\n    <button onClick={() => addModule(MODULE_TYPE.MONO_AUDIO_INTERFACE) }>Add Mono Audio Interface</button>\n</div>;\n\nexport default connect(null, { addModule })(ModulePicker);\n","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        opacity={0.6} stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ cables, scrollLeft }) =>\n    <svg style={{ position: 'absolute', left: -scrollLeft, top: 0, width: `calc(100% + ${scrollLeft}px)`, height: '100%', pointerEvents: 'none' }}>\n        {cables.map(({ portId, fromPoint, toPoint, color }) => <Cable key={portId} fromPoint={fromPoint} toPoint={toPoint} color={color}/>)}\n    </svg>;\n\nconst mapStateToProps = ({ cables }) => ({\n    cables: R.values(cables.cables)\n});\n\nexport default connect(mapStateToProps, {})(CablesContainer);","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.VCO, id: 'VCO1' },\n          { type: MODULE_TYPE.VCF, id: 'VCF1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.VCA, id: 'VCA1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'VCO1', portId: 'V/Oct' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'VCF1', portId: 'In' }, output: { moduleId: 'VCO1', portId: 'Sine' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'VCA1', portId: 'In' }, output: { moduleId: 'VCF1', portId: 'Out' } },\n          { input: { moduleId: 'VCA1', portId: 'CV' }, output: { moduleId: 'ADSR1', portId: 'Out' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'VCA1', portId: 'Out' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules, removeAllModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\nimport { LOAD_PRESET_START, LOAD_PRESET_FINISH } from \"../actionTypes\";\n\nconst connectModulesAndCables = R.curry((dispatch, connection) => {\n    const { input, output } = connection;\n    dispatch(connectModules(connection));\n\n    const fromPortId = `${input.moduleId}-${input.portId}`;\n    const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n    dispatch(addCable({\n        portId: fromPortId,\n        color: randomColor({ luminosity: 'dark' }),\n        fromPoint: {\n            x: fromElem.x + fromElem.width / 2,\n            y: fromElem.y + fromElem.height / 2\n        }\n    }));\n\n    const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n    dispatch(modifyCable({\n        portId: fromPortId,\n        toPortId: `${output.moduleId}-${output.portId}`,\n        toPoint: {\n            x: toElem.x + toElem.width / 2,\n            y: toElem.y + toElem.height / 2\n        }\n    }));\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    dispatch({ type: LOAD_PRESET_START });\n    dispatch(removeAllModules());\n    setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n};\n\nconst checkIfAllModulesRemoves = (dispatch, getState, preset) => () => {\n    if (!R.isEmpty(getState().modules.modules)) {\n        setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(module => dispatch(addModule(module.type, module.id)))(preset.modules);\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n};\n\nconst checkIfModulesCreated = (dispatch, getState, preset) => () => {\n    const stateModuleIds = R.map(R.prop('id'), getState().modules.modules);\n    const moduleIds = R.map(R.prop('id'), preset.modules);\n\n    if (!R.isEmpty(R.difference(stateModuleIds, moduleIds))) {\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(connectModulesAndCables(dispatch))(preset.connections);\n        setTimeout(checkIfAllConnected(dispatch, getState, preset.connections), 50);\n    }\n};\n\nconst checkIfAllConnected = (dispatch, getState, connections) => () => {\n    const stateConnections = getState().modules.connections;\n    const allConnected  = R.all(connection => {\n        const stateConnection = stateConnections[connection.input.moduleId];\n        if (!stateConnection) return false;\n\n        const port = stateConnection[connection.input.portId];\n        return port && port.moduleId === connection.output.moduleId && port.portId === connection.output.portId;\n    }, connections);\n\n    if (!allConnected) {\n        setTimeout(checkIfAllConnected(dispatch, getState, connections), 10);\n    } else {\n        dispatch({ type: LOAD_PRESET_FINISH });\n    }\n};","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { compose, withState } from 'recompose';\nimport defaultPresets from '../defaultPresets';\nimport { connect } from 'react-redux';\nimport { loadPreset } from '../actions';\n\nclass PresetManager extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.handlePresetChange = this.handlePresetChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        const { isDirty, setPreset, presetLoading } = this.props;\n        if (!presetLoading && isDirty && !prevProps.isDirty)\n        {\n            setPreset('');\n        }\n    }\n\n    handlePresetChange({ target: { value } })\n    {\n        const { loadPreset, setPreset } = this.props;\n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    }\n\n    render()\n    {\n        const { preset } = this.props;\n        return <div>\n            <select value={preset} onChange={this.handlePresetChange}>\n                {\n                    preset === '' && <option value=''>Select Preset</option>\n                }\n                { R.pipe(\n                    R.keys,\n                    R.map(p => <option key={p} value={p}>{p}</option>)\n                )(defaultPresets) }\n            </select>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ rack }) => ({\n    isDirty: rack.isDirty,\n    presetLoading: rack.presetLoading\n});\n\nexport default compose(\n    withState('preset', 'setPreset', ''),\n    connect(mapStateToProps, { loadPreset })\n)(PresetManager);","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Panel.css';\nimport { connect } from 'react-redux';\nimport { removeModule } from '../Modules/actions';\n\nconst Screw = () => <img alt='screw' src={require('./screw_header.svg')} height={14} width={14} style={{ margin: 5 }}/>;\n\nconst PanelEdge = ({ children }) => <div className='panel_edge'>\n    <Screw/>\n    {children}\n    <Screw/>\n</div>;\n\nconst Panel = ({ children, dragging, setDragging, width, left, removeModule, moduleId }) =>\n    <div className='module-panel'\n         style={{ width, left, cursor: dragging ? 'grabbing' : 'grab' }}\n         onMouseDown={() => setDragging(true)} onMouseUp={() => setDragging(false)}>\n        <PanelEdge>\n            <span onClick={() => removeModule(moduleId)} className=\"btn_delete_module\"><FontAwesomeIcon size='xs' icon='trash'/></span>\n        </PanelEdge>\n        <div className='panel_content'>\n            {children}\n        </div>\n        <PanelEdge/>\n    </div>;\n\nexport default connect(null, { removeModule })(Panel);","const createVoltToFreqExpCurve = baseFrequency => {\n    const BUFFER_LENGTH = 8192;\n    const curve = new Float32Array(BUFFER_LENGTH);\n    for (let i = 0; i < BUFFER_LENGTH; i++) {\n        const normalized = (i / (BUFFER_LENGTH - 1)) * 4 - 2;\n        curve[i] = baseFrequency * Math.pow(2, normalized);\n    }\n    return curve;\n};\n\nexport default function createVoltToHzConverter(baseFrequency, octaves) {\n    const node = this.createConstantSource();\n    node.volt = node.offset;\n    const voltToFreqWaveshaper = this.createWaveShaper();\n    const voltScale = this.createGain();\n    voltToFreqWaveshaper.curve = createVoltToFreqExpCurve(baseFrequency);\n    voltScale.gain.value = 1 / octaves;\n    node.connect(voltScale).connect(voltToFreqWaveshaper);\n\n    node.connect = function() {\n        voltToFreqWaveshaper.connect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n\n    node.disconnect = function() {\n        voltToFreqWaveshaper.disconnect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n    return node;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose, withState } from 'recompose';\nimport * as R from 'ramda';\nimport ModulePicker from '../../Modules/Components/ModulePicker';\nimport CablesContainer from '../../Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport { unsetStartingPort, moveModule } from '../../Modules/actions';\nimport { modifyCable, removeCable, modifyModuleCables } from '../../Cables/actions';\nimport './Rack.css';\nimport Panel from \"../../Common/Panel\";\nimport createPulseOscillator from '../helpers/createPulseOscillator';\nimport createVoltToHzConverter from '../helpers/createVoltToHzConverter';\n\nclass Rack extends Component {\n    constructor(props){\n        super(props);\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        this._audioContext = new AudioContext();\n        this._audioContext.createPulseOscillator = createPulseOscillator;\n        this._audioContext.createVoltToHzConverter = createVoltToHzConverter;\n\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleDragging = this.handleDragging.bind(this);\n        this.handleRackScroll = this.handleRackScroll.bind(this);\n\n        //temp\n        this._analyser = this._audioContext.createAnalyser();\n        window.analyser = this._analyser;\n        window.visuallize = this.visuallize = this.visuallize.bind(this);\n    }\n\n    visuallize()\n    {\n        const canvas = this._canvas;\n        const canvasCtx = canvas.getContext(\"2d\");\n        const analyser = this._analyser;\n\n        analyser.fftSize = 1024;\n        const dataArray = new Float32Array(analyser.frequencyBinCount);\n        canvas.width = dataArray.length;\n        canvas.height = 200;\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n        function draw()\n        {\n            setTimeout(() => window.v = requestAnimationFrame(draw), 300);\n\n            analyser.getFloatTimeDomainData(dataArray);\n\n            canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n            canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n\n            canvasCtx.lineWidth = 2;\n            canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n\n            canvasCtx.beginPath();\n\n            let x = 0;\n\n            for (let i = 0; i < dataArray.length; i++)\n            {\n\n                x = i;\n                const y = (0.5 + dataArray[i] / 2) * HEIGHT;\n\n                if (i === 0)\n                {\n                    canvasCtx.moveTo(x, y);\n                }\n                else\n                {\n                    canvasCtx.lineTo(x, y);\n                }\n            }\n\n            canvasCtx.stroke();\n        }\n\n        draw();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { modules, modifyModuleCables } = this.props;\n        let prevModule;\n        const movedModule = R.find(\n            ({ id, left }) => {\n                prevModule = R.find(R.where({\n                    id: R.equals(id),\n                    left: R.complement(R.equals(left))\n                }))(prevProps.modules)\n                return !R.isNil(prevModule)\n            }\n        )(modules);\n        if (movedModule) {\n            modifyModuleCables({\n                moduleId: movedModule.id,\n                diff: movedModule.left - prevModule.left\n            })\n        }\n    }\n\n    handleMouseUp() {\n        const { unsetStartingPort, removeCable, startingPort } = this.props;\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }\n\n    handleMouseMove(e) {\n        this.moveCable(e);\n        this.dragModule(e);\n    }\n\n    moveCable(e) {\n        const { modifyCable, startingPort } = this.props;\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY }\n        });\n    }\n\n    dragModule(e) {\n        const { draggingModuleId, moveModule } = this.props;\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX);\n    }\n\n    handleDragging(moduleId) {\n        return isDragging => {\n            this.props.setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }\n\n    handleRackScroll() {    \n        this.props.setScrollLeft(document.getElementById('rack').scrollLeft);    \n    }\n\n    render() {\n        const { modules, draggingModuleId, scrollLeft } = this.props;\n        return <div onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove} onScroll={this.handleRackScroll}>\n            <ModulePicker/>\n            <PresetManager/>\n            <div>\n                <div id=\"rack\" className='rack'>\n                    { modules.map(({ Module, id, width, left }) =>\n                        <Panel key={id}\n                               moduleId={id}\n                               setDragging={this.handleDragging(id)}\n                               dragging={ id === draggingModuleId }\n                               width={width} left={left}>\n                            <Module id={id} audioContext={this._audioContext}/>\n                        </Panel>\n                    ) }\n                </div>\n                <CablesContainer scrollLeft={scrollLeft}/>\n            </div>\n            <canvas ref={ref => this._canvas = ref} className=\"visualizer\" width=\"640\" height=\"100\"/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = state => ({\n    modules: R.values(state.modules.modules),\n    startingPort: state.modules.startingPort\n});\nexport default compose(\n    withState('draggingModuleId', 'setDraggingModuleId', null),\n    withState('scrollLeft', 'setScrollLeft', 0),\n    connect(mapStateToProps, { modifyCable, removeCable, unsetStartingPort, moveModule, modifyModuleCables })\n)(Rack);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Rack from './Rack/Components/Rack';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Rack/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}