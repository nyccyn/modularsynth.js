{"version":3,"sources":["Common/screw_header.svg","Cables/actions.js","actionTypes.js","Modules/actions.js","storeHelpers.js","Common/Port.js","Common/Knob.js","Modules/Components/styles.js","Modules/lib.js","Modules/Components/VCO.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Common/Switch.js","Modules/Components/Keyboard.js","Modules/Components/ADSR.js","Modules/Components/VCA.js","Modules/Components/VCFLowPass.js","Modules/Components/Multiples.js","Modules/Components/LFO.js","Synth/helpers/createPulseOscillator.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","Synth/reducer.js","reducer.js","middleware.js","store.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Synth/defaultPresets.js","Synth/actions.js","Synth/Components/PresetManager.js","Common/Panel.js","Synth/helpers/createVoltToHzConverter.js","Synth/Components/Synth.js","App.js","serviceWorker.js","index.js","Modules/Components sync /^/.//.*/.svg$","Modules/Components/pulse.svg","Common/port.svg","Common/knob.svg","Modules/Components/revsawtooth.svg","Modules/Components/sawtooth.svg","Modules/Components/sine.svg","Modules/Components/triangle.svg"],"names":["module","exports","addCable","type","portId","fromPoint","color","modifyCable","toPoint","toPortId","removeCable","changeOverPort","addModule","moduleType","id","rackId","connectModules","output","input","disconnectModule","port","registerInputs","inputs","registerOutputs","outputs","setStartingPort","unsetStartingPort","moveModule","moduleId","x","removeModule","dispatch","getState","modules","connections","cables","removedModule","disconnectPorts","R","cablePortId","useAction","action","useDispatch","useCallback","LABEL_POSITIONS","Port","label","labelPosition","portType","startingPort","useSelector","connection","modulesActions","cablesActions","fullPortId","useMemo","imgElem","useRef","useEffect","fromPortCable","current","getBoundingClientRect","y","width","height","window","scrollY","toPortCable","portLabel","className","cx","disabled","onMouseDown","e","stopPropagation","randomColor","luminosity","onMouseUp","ref","onMouseEnter","onMouseLeave","preventDefault","src","require","alt","Knob","onChange","max","min","value","step","useState","isMoving","setIsMoving","imgRef","handleMouseMove","buttons","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","removeEventListener","style","display","flexDirection","cursor","margin","transform","Container","styled","div","Grid","prop","GridCell","container","body","flex","justifyContent","spaceAround","useModule","moduleFactory","setModule","moduleIds","console","debug","memoizedModule","newModule","useListenToFirstAudioParam","audioNode","callback","savedCallback","intervalId","setIntervalId","audioParam","p","AudioParam","getFirstAudioParam","lastValue","setInterval","useConnections","createOscillator","audioContext","oscillator","frequency","VCO","actions","setFrequency","tune","setTune","pw","setPw","pwmCv","setPwmCv","fmCv","setFmCv","pulse","createPulseOscillator","oscillators","Sawtooth","Pulse","Triangle","Sine","frequencyControl","createVoltToHzConverter","detuneControl","createConstantSource","volt","offset","fmGain","createGain","gain","connect","o","detune","pwCvGain","start","disconnect","handleFrequencyChange","handleTuneChange","handlePwChange","handlePwmCvChange","handleFmCvChange","styles","osc","key","toLowerCase","isBrowserSupported","OscillatorNode","ConstantSourceNode","panelWidth","StereoAudioInterface","leftPanner","StereoPannerNode","pan","rightPanner","destination","Left","Right","MonoAudioInterface","In","vertical","LabelsContainer","size","css","Label","span","HandlerContainer","Handler","handlerSize","position","Switch","options","setPosition","ranges","result","i","length","push","newPos","moveHandler","pos","newVal","range","abs","handleSpaceMouseDown","handleHandlerMouseDown","map","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","calculateNoteVolt","noteIndex","octave","Keyboard","setOctave","cv","setCv","keyboardDown","setKeyboardDown","gate","CV","Gate","handleKeyDown","handleKeyUp","handleKeyboardDown","event","keyCodeIndex","keyCode","handleKeyboardUp","onkeydown","onkeyup","handleOctaveChange","note","isBlackKey","endsWith","gridRow","alignSelf","gridColumn","backgroundColor","convertKnobValueToTime","pow","ADSR","gateAudioNode","setGateAudioNode","attack","setAttack","decay","setDecay","sustain","setSustain","release","setRelease","adsr","gateInterval","convAttack","convDecay","convRelease","now","currentTime","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","clearInterval","Out","Number","VCA","GainNode","VCFLowPass","q","setQ","cv2Gain","setCv2Gain","cv3Gain","setCv3Gain","vcf","createBiquadFilter","cv2","cv3","Q","CV1","CV2","CV3","maxValue","sampleRate","numberOfOctaves","log","LN2","multiplier","handleQChange","handleCv2GainChange","handleCv3GainChange","fontSize","BiquadFilterNode","Multiples","A","B","groupsInput","setGroupsInput","groupA","groupB","createGroupInputs","group","groupInputs","moduleGroup","createGroupOutputs","groupOutpus","renderGroup","isInput","portProps","FREQ_RANGE","mapIndexed","LFO","setRange","RevSawtooth","revSawtoothWave","createPeriodicWave","DroppedSaw","real","imag","setPeriodicWave","newFreq","marginTop","column","row","MODULE_TYPE","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","VCF_LOW_PASS","MULTIPLES","moduleCounters","removeLastConnection","handleActions","state","undefined","Module","Error","createModule","left","maxLeft","audioContextInitiliazed","racks","alert","Object","defineProperty","get","counter","prevLeft","moduleWidth","newLeft","newRight","innerWidth","right","oldRackId","overPort","setDirty","isDirty","presetLoading","combineReducers","rack","middleware","next","lastInput","lastOutput","middlewareChain","thunk","createStore","reducer","applyMiddleware","ModulePicker","onClick","calculateMidpoint","lowestPoint","highestPoint","midpointY","distance","midpointX","Cable","d","opacity","stroke","fill","strokeWidth","CablesContainer","scrollLeft","scrollTop","top","pointerEvents","cable","Basic","connectModulesAndCables","fromPortId","fromElem","getElementById","toElem","loadPreset","preset","setTimeout","checkIfAllModulesRemoves","checkIfModulesCreated","stateModuleIds","checkIfAllConnected","stateConnections","stateConnection","PresetManager","setPreset","handlePresetChange","target","defaultPresets","Screw","PanelEdge","children","Panel","dragging","setDragging","icon","pulseCurve","Float32Array","constantOneCurve","node","this","pulseShaper","createWaveShaper","curve","widthGain","constantOneShaper","apply","arguments","createVoltToFreqExpCurve","memoizeWith","identity","baseFrequency","octaves","normalized","voltToFreqWaveshaper","voltScale","Synth","cablesAction","draggingModuleId","setDraggingModuleId","setScrollLeft","setScrollTop","activeRackId","setActiveRackId","setAudioContext","onscroll","newAudioContext","AudioContext","webkitAudioContext","moveCable","dragModule","handleDragging","isDragging","handleRackScroll","onMouseMove","onScroll","overflowX","library","add","faTrash","App","store","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","webpackContext","req","webpackContextResolve","__webpack_require__","code","keys","resolve"],"mappings":"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","file":"static/js/main.f506eaca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, fromPoint, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    fromPoint,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});\n\nexport const changeOverPort = portId => ({\n    type: ActionTypes.CHANGE_OVER_PORT,\n    portId\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\nexport const REMOVE_ALL_MODULES = 'REMOVE_ALL_MODULES';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\nexport const CHANGE_OVER_PORT = 'CHANGE_OVER_PORT';\n\nexport const LOAD_PRESET_START = 'LOAD_PRESET_START';\nexport const LOAD_PRESET_FINISH = 'LOAD_PRESET_FINISH';","import * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\nimport { removeCable } from '../Cables/actions';\n\nexport const addModule = (moduleType, id, rackId) => ({\n    type: ActionTypes.ADD_MODULE,\n    moduleType,\n    id,\n    rackId\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x, rackId) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x,\n    rackId\n});\n\nexport const removeModule = moduleId => (dispatch, getState) => {\n    const { modules: { modules, connections }, cables: { cables } } = getState();\n    const removedModule = modules[moduleId];\n    if (!removedModule) return;\n\n    const disconnectPorts =\n        R.pipe(\n            R.keys,\n            R.filter(portId => R.path([moduleId, portId], connections)),\n            R.forEach(portId => {\n                dispatch(disconnectModule({ moduleId, portId }));\n                let cablePortId = `${moduleId}-${portId}`;\n                if (!cables[cablePortId])\n                {\n                    cablePortId = R.pipe(\n                        R.filter(R.propEq('toPortId', cablePortId)),\n                        R.keys,\n                        R.head\n                    )(cables);\n                }\n                dispatch(removeCable(cablePortId));\n            })\n        );\n\n    if (removedModule.inputs)\n    {\n        disconnectPorts(removedModule.inputs);\n    }\n    if (removedModule.outputs)\n    {\n        disconnectPorts(removedModule.outputs);\n    }\n    dispatch({\n        type: ActionTypes.REMOVE_MODULE,\n        moduleId\n    })\n};\n\nexport const removeAllModules = () => (dispatch, getState) => {\n    R.pipe(\n        R.keys,\n        R.map(moduleId => dispatch(removeModule(moduleId)))\n    )(getState().modules.modules);\n    dispatch({ type: ActionTypes.REMOVE_ALL_MODULES });\n};","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as R from 'ramda';\n\nexport function useAction(action) {\n    const dispatch = useDispatch();\n    return useCallback(R.pipe(action, dispatch), [action, dispatch]);\n}","import React, { useEffect, useRef, useMemo } from 'react';\nimport * as R from 'ramda';\nimport { useSelector } from 'react-redux';\nimport * as modulesActions from '../Modules/actions';\nimport * as cablesActions from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\nimport { useAction } from '../storeHelpers';\n\nexport const LABEL_POSITIONS = {\n    HIDE: 'HIDE',\n    ABOVE: 'ABOVE',\n    BELOW: 'BELOW'\n}\n\nconst Port = ({ label, labelPosition = LABEL_POSITIONS.ABOVE, portId, moduleId, portType }) => {\n    const startingPort = useSelector(R.path(['modules', 'startingPort']));\n    const connection = useSelector(R.path(['modules', 'connections', moduleId, portId]));\n    const cables = useSelector(R.pipe(R.path(['cables', 'cables']), R.values));\n\n    const connectModules = useAction(modulesActions.connectModules);\n    const disconnectModule = useAction(modulesActions.disconnectModule);\n    const setStartingPort = useAction(modulesActions.setStartingPort);\n    const unsetStartingPort = useAction(modulesActions.unsetStartingPort);\n    const addCable = useAction(cablesActions.addCable);\n    const removeCable = useAction(cablesActions.removeCable);\n    const modifyCable = useAction(cablesActions.modifyCable);\n    const changeOverPort = useAction(cablesActions.changeOverPort);\n\n    const fullPortId = useMemo(() => `${moduleId}-${portId}`, [moduleId, portId]);\n\n    const imgElem = useRef(null);\n\n    useEffect(() => {\n        const fromPortCable = R.find(R.whereEq({ portId: fullPortId }), cables);\n        if (fromPortCable) {\n            const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n            modifyCable({\n                portId: fromPortCable.portId,\n                fromPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n            });\n        }\n        else {\n            const toPortCable = R.find(R.whereEq({ toPortId: fullPortId }), cables);\n            if (toPortCable) {\n                const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n                modifyCable({\n                    portId: toPortCable.portId,\n                    toPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n                });\n            }\n        }\n    }, [connection]);\n\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connection) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n\n        addCable({\n            portId: fullPortId,\n            fromPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId)) {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n\n        if (connection &&\n            (connection.moduleId !== startingPort.moduleId || connection.portId !== startingPort.portId)) {\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n            removeCable(fullPortId);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2, y: y + height / 2 },\n            toPortId: fullPortId\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    const portLabel = R.isNil(label) ? portId : label;\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n    >\n        {labelPosition === LABEL_POSITIONS.ABOVE && portLabel}\n        <img id={fullPortId} height=\"30\" width=\"30\" ref={imgElem}\n            onMouseEnter={() => changeOverPort(fullPortId)}\n            onMouseLeave={() => changeOverPort(null)}\n            onMouseDown={e => e.preventDefault()} src={require('./port.svg')} alt={fullPortId} />\n        {labelPosition === LABEL_POSITIONS.BELOW && portLabel}\n    </div>;\n};\n\nexport default Port;","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nconst MAX_ANGLE = 150;\n\nconst Knob = ({ onChange, max, min, value, step, label, height = 50, width = 50 }) => {\n    const [isMoving, setIsMoving] = useState(false);\n    const imgRef = useRef(null);\n\n    const handleMouseMove = useCallback((e) => {\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = imgRef.current.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;\n        if (angle > 2.1 * MAX_ANGLE) angle = 0;\n\n        const ratio = angle / (2 * MAX_ANGLE);\n        let newValue = ratio * (max - min) + min;\n        newValue = Math.floor(newValue / step) * step;\n        if (newValue > max) newValue = max;\n        onChange(newValue);\n    }, [isMoving, min, max, onChange, step]);\n\n    const handleMouseDown = useCallback((e) => {\n        e.stopPropagation();\n        setIsMoving(true);\n    }, []);\n\n    const handleMouseUp = useCallback(() => {\n        setIsMoving(false);\n    }, []);\n\n    const calculateValueAngle = useCallback(() => {\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }, [min, max, value]);\n\n    useEffect(() => {\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [handleMouseUp, handleMouseMove]);\n\n    return <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {label}\n        <img ref={imgRef}\n            style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${calculateValueAngle()}deg)` }}\n            onMouseDown={handleMouseDown}\n            alt='knob' src={require('./knob.svg')} height={height} width={width} />\n    </div>;\n};\n\nexport default Knob;","import styled from 'styled-components';\nimport { prop } from 'ramda';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%\n`;\n\nexport const Grid = styled.div`\n    display: grid;\n    flex: 1;\n    margin-top: ${prop('marginTop')}px;\n    margin-bottom: ${prop('marginBottom')}px;\n    margin-left: ${prop('marginLeft')}px;\n    margin-right: ${prop('marginRight')}px;\n`;\n\nexport const GridCell = styled.div`\n    grid-column: ${prop('column')};\n    grid-row: ${prop('row')};\n`;\n\nexport default {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-evenly'\n    },\n    spaceAround: {\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n};","import { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\n\nconst modules = {};\n\nexport function useModule(id, moduleFactory)\n{        \n    const [module, setModule] = useState(null);\n    const moduleIds = useSelector(R.pipe(R.path(['modules', 'modules']), R.keys));\n    \n    useEffect(() => {        \n        R.pipe(\n            R.converge(R.without,[\n                R.always(moduleIds),\n                R.keys\n            ]),\n            R.forEach(id => delete modules[id])\n        )(modules);        \n    }, [moduleIds]);\n\n    useEffect(() => {\n        console.debug(`useModule rendered for ${id}`);\n        const memoizedModule = modules[id];        \n        if (!R.isNil(memoizedModule)) {\n            setModule(memoizedModule);\n        }\n        else {\n            const newModule = moduleFactory();\n            newModule.id = id;\n            modules[id] = newModule;\n            setModule(newModule);\n        }\n    }, [id, moduleFactory]);\n    \n    return module;\n}\n\nexport function getFirstAudioParam(audioNode)\n{\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            return audioNode[p];\n        }\n    }\n    return null;\n}\n\nexport function useListenToFirstAudioParam(audioNode, callback)\n{\n    const savedCallback = useRef(callback);\n    const [intervalId, setIntervalId] = useState(null);\n\n    useEffect(() => savedCallback.current = callback, [callback]);\n\n    useEffect(() => {\n        if (!audioNode) return;        \n        const audioParam = getFirstAudioParam(audioNode);\n        if (audioParam) {\n            let lastValue = audioParam.value;\n            savedCallback.current(lastValue);\n            setIntervalId(setInterval(() => {                \n                if (lastValue !== audioParam.value) {\n                    lastValue = audioParam.value;\n                    savedCallback.current(lastValue);\n                }\n            }, 0));\n        }        \n    }, [audioNode]);    \n    return intervalId;\n}\n\nexport function useConnections(id) {\n    return useSelector(R.path(['modules', 'connections', id]));    \n}","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport styles from './styles';\nimport { useModule } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nconst VCO = ({ id, audioContext }) => {\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0);\n    const [tune, setTune] = useState(0);\n    const [pw, setPw] = useState(0);\n    const [pwmCv, setPwmCv] = useState(0);\n    const [fmCv, setFmCv] = useState(0);    \n    \n    const moduleFactory = useCallback(() => {\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        const oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            Pulse: pulse,\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Sine: createOscillator(audioContext, 'sine'),\n        };\n\n        const frequencyControl = audioContext.createVoltToHzConverter(440, 4);\n        const detuneControl = audioContext.createConstantSource();\n        frequencyControl.volt.value = 0;\n        detuneControl.offset.value = 0;\n\n        const fmGain = audioContext.createGain();\n        fmGain.gain.value = 0;\n        fmGain.connect(frequencyControl.volt);\n        R.forEachObjIndexed(o => frequencyControl.connect(o.frequency))(oscillators);\n        R.forEachObjIndexed(o => detuneControl.connect(o.detune))(oscillators);\n\n        const pwCvGain = audioContext.createGain();\n        pwCvGain.gain.value = 0;\n        pwCvGain.connect(oscillators.Pulse.width);\n\n        R.forEachObjIndexed(o => o.start())(oscillators);\n        frequencyControl.start();\n        detuneControl.start();\n\n        return { oscillators, frequencyControl, detuneControl, fmGain, pwCvGain };\n    }, [audioContext]);\n\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            'V/Oct': {\n                connect: audioNode => audioNode.connect(module.frequencyControl.volt),\n                disconnect: audioNode => audioNode.disconnect(module.frequencyControl.volt)\n            },\n            'PWM': {\n                connect: audioNode => audioNode.connect(module.pwCvGain),\n                disconnect: audioNode => audioNode.disconnect(module.pwCvGain)\n            },\n            'FM': {\n                connect: audioNode => audioNode.connect(module.fmGain),\n                disconnect: audioNode => audioNode.disconnect(module.fmGain)\n            }\n        });\n        registerOutputs(id, {\n            Sawtooth: module.oscillators.Sawtooth,\n            Pulse: module.oscillators.Pulse,\n            Triangle: module.oscillators.Triangle,\n            Sine: module.oscillators.Sine\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(value);\n        module.frequencyControl.volt.value = value;\n    }, [module]);\n\n    const handleTuneChange = useCallback((value) => {\n        setTune(value);\n        module.detuneControl.offset.value = value;\n    }, [module]);\n\n    const handlePwChange = useCallback((value) => {\n        setPw(value);\n        module.oscillators.Pulse.width.value = value;\n    }, [module]);\n\n    const handlePwmCvChange = useCallback((value) => {\n        setPwmCv(value);\n        module.pwCvGain.gain.value = value / 10;\n    }, [module]);\n\n    const handleFmCvChange = useCallback((value) => {\n        setFmCv(value);\n        module.fmGain.gain.value = value;\n    }, [module]);\n\n    return <div style={styles.container}>\n            <span>VCO</span>\n            <div style={{ ...styles.body, justifyContent: 'space-between' }}>\n                <div style={styles.spaceAround}>\n                    <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                        <Port portId='V/Oct' moduleId={id} portType='input'/>\n                        <Port portId='FM' moduleId={id} portType='input'/>\n                        <Port portId='PWM' moduleId={id} portType='input'/>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                        <Knob label='Range' min={-4} max={4} step={0.001} value={frequency} width={30} height={30} onChange={handleFrequencyChange}/>\n                        <Knob label='Tune' min={-600} max={600} step={1} value={tune} width={30} height={30} onChange={handleTuneChange}/>\n                        <Knob label='FM CV' min={0} max={1} step={0.005} value={fmCv} width={30} height={30} onChange={handleFmCvChange}/>\n                        <Knob label='PW' min={-1} max={1} step={0.001} value={pw} width={30} height={30} onChange={handlePwChange}/>\n                        <Knob label='PWM CV' min={0} max={1} step={0.005} value={pwmCv} width={30} height={30} onChange={handlePwmCvChange}/>\n                    </div>\n                </div>\n                <div style={styles.spaceAround}>\n                    {\n                        module && R.pipe(\n                            R.keys,\n                            R.map(osc =>\n                                <Port key={osc} label={<img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc}/>}\n                                      labelPosition={LABEL_POSITIONS.BELOW} portId={osc} moduleId={id} portType='output'/>)\n                        )(module.oscillators)\n                    }\n                </div>\n            </div>\n        </div>;\n};\n\nVCO.isBrowserSupported = typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined';\nVCO.panelWidth = 8;\n\nexport default VCO;","import React, { useEffect, useCallback } from 'react';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport * as actions from '../actions';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst StereoAudioInterface = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);    \n\n    const moduleFactory = useCallback(() => {\n        const leftPanner = new StereoPannerNode(audioContext, { pan: -1 });\n        const rightPanner = new StereoPannerNode(audioContext, { pan: 1 });\n        leftPanner.connect(audioContext.destination);\n        rightPanner.connect(audioContext.destination);\n        return { leftPanner, rightPanner };\n    }, [audioContext])\n\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(module.leftPanner),\n                disconnect: audioNode => audioNode.disconnect(module.leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(module.rightPanner),\n                disconnect: audioNode => audioNode.disconnect(module.rightPanner)\n            }\n        });\n    }, [module, id, registerInputs]);\n\n    return <div style={styles.container}>\n            <span>Stereo</span>\n            <div style={styles.body}>\n                <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n};\n\nStereoAudioInterface.isBrowserSupported = typeof StereoPannerNode !== 'undefined';\nStereoAudioInterface.panelWidth = 4;\n\nexport default StereoAudioInterface;","import React, { useEffect } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport { useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst MonoAudioInterface = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);    \n\n    useEffect(() => {\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(audioContext.destination)\n            }\n        })\n    }, [id, registerInputs, audioContext]);\n\n    return <div style={styles.container}>\n            <span>Mono</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n};\n\nMonoAudioInterface.isBrowserSupported = true;\nMonoAudioInterface.panelWidth = 4;\n\nexport default MonoAudioInterface;","import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport * as R from 'ramda';\nimport styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: ${({ vertical }) => vertical ? 'row': 'column' };\n    align-items: center;\n    justify-content: center;\n`;\n\nconst LabelsContainer = styled.div`\n    display: flex;\n    flex-direction: ${({ vertical }) => vertical ? 'column': 'row' };\n    justify-content: space-between;\n    ${({ vertical, size }) =>\n        vertical ?\n        css`height: ${size + 10}px;` :\n        css`width: ${size + 10}px;`\n    }\n`;\n\nconst Label = styled.span`\n    font-size: 10px; \n    flex: 1;\n`;\n\nconst HandlerContainer = styled.div`\n    background-color: black;\n    width: ${({ vertical, size }) => vertical ? 10 : size}px;\n    height: ${({ vertical, size }) => vertical ? size : 10}px;\n    cursor: pointer;\n    position: relative;\n`;\n\nconst Handler = styled.div`        \n    width: ${({ vertical, handlerSize }) => vertical ? 10 : handlerSize}px;\n    height: ${({ vertical, handlerSize }) => vertical ? handlerSize : 10}px;\n    background-color: gray;\n    position: absolute;\n    transition: ${({ vertical }) => vertical ? 'top': 'left' } .2s;\n    ${({ vertical, position }) =>\n        vertical ?\n        css`top: ${position}px;` :\n        css`left: ${position}px;`\n    }\n`;\n\nconst Switch = ({ value, onChange, options, vertical = false, size = 30, handlerSize = 5 }) => {\n    \n    const [position, setPosition] = useState(0);\n    const [isMoving, setIsMoving] = useState(false);\n\n    const ref = useRef(null);    \n\n    const ranges = useMemo(() => {\n        const result = [handlerSize/2];\n        for (let i = 1; i < options.length - 1; i++)\n        {\n            result.push(size / (options.length - 1) * i);\n        }\n        result.push(size - handlerSize / 2);\n        return result;\n    }, [options, size, handlerSize]);\n\n    useEffect(() => {\n        let newPos = R.findIndex(R.whereEq({ value }), options) * (size / (options.length - 1)) - handlerSize / 2;\n        newPos = Math.min(Math.max(0, newPos), size - handlerSize);\n        setPosition(newPos);\n    }, [value, options, size, handlerSize]);\n\n    const moveHandler = useCallback(e => {\n        const pos = e[vertical ? 'clientY': 'clientX'] - ref.current.getBoundingClientRect()[vertical ? 'y' : 'x'];\n        const newVal = R.findIndex(range => Math.abs(pos - range) <= handlerSize / 2, ranges);\n        if (newVal !== -1)\n        {\n            onChange(options[newVal].value);\n        }\n    }, [ranges, handlerSize, onChange, options]);\n\n    const handleSpaceMouseDown = useCallback(e => {\n        e.stopPropagation();\n        moveHandler(e);\n    }, [moveHandler]);\n    \n    const handleHandlerMouseDown = useCallback((e) => {\n        e.stopPropagation();\n        setIsMoving(true);\n    }, []);\n\n    const handleMouseUp = useCallback(() => {\n        setIsMoving(false);\n    }, []);\n\n    const handleMouseMove = useCallback((e) => {\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        moveHandler(e);        \n    }, [isMoving, moveHandler]);\n\n    useEffect(() => {\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [handleMouseUp, handleMouseMove]);\n    \n    return <Container vertical={vertical}>\n        <LabelsContainer size={size} vertical={vertical}>\n            { options.map(({ value, label }) => <Label key={value}>{label}</Label>) }\n        </LabelsContainer>        \n        <HandlerContainer size={size} vertical={vertical} onMouseDown={handleSpaceMouseDown} ref={ref}>\n                <Handler position={position} vertical={vertical} handlerSize={handlerSize} onMouseDown={handleHandlerMouseDown}/>            \n        </HandlerContainer>\n    </Container>;\n}\n\nexport default Switch;","import React, { useEffect, useState, useCallback } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport Switch from '../../Common/Switch';\nimport styles from './styles';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\nconst Keyboard = ({ id, audioContext }) => {\n    const connections = useConnections(id);    \n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [octave, setOctave] = useState(4);\n    const [cv, setCv] = useState(0);\n    const [keyboardDown, setKeyboardDown] = useState(false);\n\n    const moduleFactory = useCallback(() => {\n        const gate = audioContext.createConstantSource();\n        gate.offset.value = 0;\n        gate.start();\n        const cv = audioContext.createConstantSource();\n        cv.offset.value = 0;\n        cv.start();\n\n        return { gate, cv };\n    }, [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerOutputs(id, {\n            CV: module.cv,\n            Gate: module.gate\n        });\n    }, [id, module, registerOutputs]);\n\n    useEffect(() => {\n        if (module) module.cv.offset.value = cv;\n    }, [module, cv]);\n\n    const handleKeyDown = useCallback((cv) => {        \n        setCv(cv);\n        module.gate.offset.value = 1;\n    }, [module]);\n\n    const handleKeyUp = useCallback(() => {\n        module.gate.offset.value = 0;\n    }, [module]);\n    \n    const handleKeyboardDown = useCallback((event) => {    \n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!keyboardDown && keyCodeIndex !== -1) {\n            setKeyboardDown(false);\n            handleKeyDown(calculateNoteVolt(keyCodeIndex, octave));\n        }\n    }, [keyboardDown, handleKeyDown, octave]);\n\n    const handleKeyboardUp = useCallback(() => {\n        setKeyboardDown(false);\n        handleKeyUp();\n    }, [handleKeyUp]);\n\n    useEffect(() => {\n        document.onkeydown = handleKeyboardDown;\n        document.onkeyup = handleKeyboardUp;\n    }, [handleKeyboardDown, handleKeyboardUp]);\n\n    const handleOctaveChange = useCallback(value => {        \n        const cv = module.cv.offset.value;\n        setCv(cv + value - octave);\n        setOctave(value);\n    }, [module, octave]);\n\n    return <div style={styles.container}>\n            <span>&#181;Keyboard</span>\n            <div style={styles.body}>\n                Octave\n                <Switch value={octave}\n                        onChange={handleOctaveChange}\n                        size={60}\n                        options={[\n                            {value: 2, label: '-2'},\n                            {value: 3, label: '-1'},\n                            {value: 4, label: '0'},\n                            {value: 5, label: '+1'},\n                            {value: 6, label: '+2'},\n                        ]}/>                \n                <div style={{ display: 'grid', flex: 1 }}>\n                    {\n                        NOTES.map((note, i) => {\n                                const isBlackKey = note.endsWith('#');\n                                const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                                return [\n                                    <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                    <button key={`${note}${i}`}\n                                            onMouseDown={e => {\n                                                e.stopPropagation();\n                                                handleKeyDown(calculateNoteVolt(i, octave));\n                                            }}\n                                            onMouseUp={handleKeyUp}\n                                            style={{ height:20, width:20,\n                                                gridRow,\n                                                alignSelf: 'center',\n                                                gridColumn: isBlackKey ? 3 : 2,\n                                                backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                                ];\n                            }\n                        )\n                    }\n                </div>\n                <div style={styles.spaceAround}>\n                    <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n};\n\nKeyboard.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nKeyboard.panelWidth = 6;\n\nexport default Keyboard;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { useModule, useListenToFirstAudioParam, useConnections } from '../lib';\nimport styles from './styles';\nimport { useAction } from '../../storeHelpers';\n\nconst convertKnobValueToTime = value => Math.pow(value, 4) * 15 + 0.001;\n\nconst ADSR = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [gateAudioNode, setGateAudioNode] = useState(null);\n    const [attack, setAttack] = useState(0.5);\n    const [decay, setDecay] = useState(0.5);\n    const [sustain, setSustain] = useState(0.5);\n    const [release, setRelease] = useState(0.5);\n\n    const moduleFactory = useCallback(() => {\n        const adsr = audioContext.createConstantSource();\n        adsr.offset.value = 0;\n        adsr.start();    \n        return { adsr };\n    }, [audioContext]);\n\n    const module = useModule(id, moduleFactory);\n\n    const handleGateInChange = useCallback((value) => {\n        if (!module) return;\n\n        const convAttack = convertKnobValueToTime(attack) + 0.01;\n        const convDecay = convertKnobValueToTime(decay);\n        const convRelease = convertKnobValueToTime(release);       \n        const now = audioContext.currentTime;\n        const offset = module.adsr.offset;    \n\n        if (value === 1) {\n            offset.cancelScheduledValues(now);            \n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(1, now + convAttack);\n            offset.linearRampToValueAtTime(sustain, now + convAttack + convDecay);\n        } else if (value === 0) {\n            offset.cancelScheduledValues(now);\n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(0, now + convRelease);\n        }\n    }, [module, attack, decay, sustain, release, audioContext.currentTime]);\n\n    const gateInterval = useListenToFirstAudioParam(gateAudioNode, handleGateInChange);\n\n    useEffect(() => {    \n        if (!module) return;\n\n        registerInputs(id, {\n            Gate: {\n                connect: setGateAudioNode,                \n                disconnect: () => {\n                    setGateAudioNode(null);\n                    if (gateInterval) {\n                        clearInterval(gateInterval);\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: module.adsr\n        });\n    }, [module, gateInterval, registerInputs, registerOutputs, id]);\n\n    return <div style={styles.container}>\n            <span>ADSR</span>\n            <div style={styles.body}>\n                Attack:\n                <Knob min={0} max={1} step={0.001} value={attack} onChange={value => setAttack(value)} width={30}\n                      height={30}/>\n                Decay:\n                <Knob min={0} max={1} step={0.001} value={decay} onChange={value => setDecay(value)} width={30}\n                      height={30}/>\n                Sustain:\n                <Knob min={0} max={1} step={0.01} value={sustain} onChange={value => setSustain(Number(value))}\n                      width={30} height={30}/>\n                Release:\n                <Knob min={0} max={1} step={0.001} value={release} onChange={value => setRelease(Number(value))}\n                      width={30} height={30}/>\n                <div style={styles.spaceAround}>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='input'/>\n                    <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n};\n\nADSR.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nADSR.panelWidth = 6;\n\nexport default ADSR;","import React, { useEffect, useCallback } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst VCA = ({ id, audioContext }) => {    \n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const moduleFactory = useCallback(() => ({ gain: audioContext.createGain() }), [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(module.gain),            \n                disconnect: audioNode => audioNode.disconnect(module.gain)\n            },\n            CV: {\n                connect: audioNode => {\n                    module.gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    return audioNode.connect(module.gain.gain);\n                },\n                disconnect: audioNode => {                \n                    module.gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(module.gain.gain);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase) it won't effect any more\n                    if (audioNode.offset) {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n            Out: module.gain\n        });\n    }, [module, id, registerInputs, registerOutputs, audioContext]);\n\n    return <div style={styles.container}>\n        <span>VCA</span>\n        <div style={styles.body}>\n            <Port portId='In' connections={connections} moduleId={id} portType='input' />\n            <Port portId='CV' connections={connections} moduleId={id} portType='input' />\n            <Port portId='Out' connections={connections} moduleId={id} portType='output' />\n        </div>\n    </div>;\n};\n\nVCA.isBrowserSupported = typeof GainNode !== 'undefined';\nVCA.panelWidth = 4;\n\nexport default VCA;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\nimport styles from './styles';\n\nconst QUAL_MUL = 30;\n\nconst VCFLowPass = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0.5);\n    const [q, setQ] = useState(0.1);\n    const [cv2Gain, setCv2Gain] = useState(0.5);\n    const [cv3Gain, setCv3Gain] = useState(0.5);\n\n    const moduleFactory = useCallback(() => {\n        const vcf = audioContext.createBiquadFilter();\n        const cv = audioContext.createVoltToHzConverter(440, 2);\n        const cv2 = audioContext.createVoltToHzConverter(440, 2);\n        const cv3 = audioContext.createVoltToHzConverter(440, 2);\n        const cv2Gain = audioContext.createGain();\n        const cv3Gain = audioContext.createGain();\n\n        cv.volt.value = 0;\n        cv.start();\n        cv.connect(vcf.frequency);\n\n        cv2.volt.value = 0;\n        cv2.start();\n        cv2.connect(cv2Gain);\n        cv2Gain.gain.value = 0.5;\n        cv2Gain.connect(vcf.frequency);\n\n        cv3.volt.value = 0;\n        cv3.start();\n        cv3.connect(cv3Gain);\n        cv3Gain.gain.value = 0.5;\n        cv3Gain.connect(vcf.frequency);\n\n        vcf.type = 'lowpass';\n        vcf.Q.value = 0.5;\n        return { vcf, cv, cv2, cv3, cv2Gain, cv3Gain };\n    }, [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n        window.vcf = module;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(module.vcf),\n                disconnect: audioNode => audioNode.disconnect(module.vcf)\n            },\n            CV1: {\n                connect: audioNode => audioNode.connect(module.cv.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv.volt)\n            },\n            CV2: {\n                connect: audioNode => audioNode.connect(module.cv2.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv2.volt)\n            },\n            CV3: {\n                connect: audioNode => audioNode.connect(module.cv3.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv3.volt)\n            }\n        });\n        registerOutputs(id, {\n            Out: module.vcf\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        module.vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }, [module, frequency, audioContext]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.vcf.Q.value = q * QUAL_MUL;        \n    }, [module, q])\n\n    const handleQChange = useCallback((value) => {\n        setQ(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv2Gain.gain.value = cv2Gain;\n    }, [module, cv2Gain]);\n\n    const handleCv2GainChange = useCallback(value => {\n        setCv2Gain(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv3Gain.gain.value = cv3Gain;\n    }, [module, cv3Gain]);\n\n    const handleCv3GainChange = useCallback(value => {\n        setCv3Gain(Number(value));\n    }, []);\n\n    return <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <span style={{ display: 'flex', flexDirection: 'column' }}>\n            VCF\n            <span style={{ fontSize: 10 }}>LOW PASS FILTER</span>\n        </span>\n        <div style={{ ...styles.spaceAround, flex: 1 }}>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                <Port portId='CV1' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV2' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV3' connections={connections} moduleId={id} portType='input' />\n                <Port portId='In' connections={connections} moduleId={id} portType='input' />\n                <Port portId='Out' connections={connections} moduleId={id} portType='output' />\n            </div>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                Frequency\n                <Knob min={0} max={1} step={0.01} value={frequency} width={30} height={30} onChange={value => handleFrequencyChange(value)} />\n                CV 2\n                <Knob min={0} max={1} step={0.01} value={cv2Gain} width={30} height={30} onChange={value => handleCv2GainChange(value)} />\n                CV 3\n                <Knob min={0} max={1} step={0.01} value={cv3Gain} width={30} height={30} onChange={value => handleCv3GainChange(value)} />\n                Res\n                <Knob min={0} max={1} step={0.01} value={q} width={30} height={30} onChange={value => handleQChange(value)} />\n            </div>\n        </div>\n    </div>;\n};\n\nVCFLowPass.isBrowserSupported = typeof BiquadFilterNode !== 'undefined';\nVCFLowPass.panelWidth = 6;\n\nexport default VCFLowPass;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport styles from './styles';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst Multiples = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [groupsInput, setGroupsInput] = useState({ A: null, B: null });\n\n    const moduleFactory = useCallback(() => {\n        const groupA = { input: null, audioNode: null };\n        const groupB = { input: null, audioNode: null };\n        return { groupA, groupB };\n    }, []);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        const createGroupInputs = group => {\n            const groupInputs = {};\n            const moduleGroup = module[`group${group}`];\n            for (let i = 1; i <= 4; i++) {\n                groupInputs[`Group${group}${i}In`] = {\n                    connect: audioNode => {\n                        setGroupsInput({ ...groupsInput, [group]: i })\n                        moduleGroup.input = i;\n                        moduleGroup.audioNode = audioNode;\n                    },\n                    disconnect: () => {\n                        setGroupsInput({ ...groupsInput, [group]: null })\n                        moduleGroup.audioNode = null;\n                    }\n                };\n            }\n            return groupInputs;\n        }\n\n        const createGroupOutputs = group => {\n            const groupOutpus = {};\n            for (let i = 1; i <= 4; i++) {\n                groupOutpus[`Group${group}${i}Out`] = () => module[`group${group}`].audioNode;\n            }\n            return groupOutpus;\n        }\n\n        registerInputs(id, {\n            ...createGroupInputs('A'),\n            ...createGroupInputs('B')\n        });\n        registerOutputs(id, {\n            ...createGroupOutputs('A'),\n            ...createGroupOutputs('B')\n        });\n    }, [module, id, registerInputs, registerOutputs, groupsInput]);\n\n    const renderGroup = useCallback(group => {\n        const result = [];\n        for (let i = 1; i <= 4; i++) {\n            const isInput = R.isNil(groupsInput[group]) || groupsInput[group] === i;\n            const portProps = {\n                key: `Group${group}${i}`,\n                portId: `Group${group}${i}${isInput ? 'In' : 'Out'}`,\n                connections,\n                moduleId: id,\n                portType: isInput ? 'input' : 'output',\n                labelPosition: LABEL_POSITIONS.HIDE\n            };\n            result.push(<Port {...portProps} />)\n        }\n        return result;\n    }, [groupsInput, connections, id]);\n\n    return <div style={styles.container}>\n        <span style={{ fontSize: 13 }}>Multiples</span>\n        <div style={styles.body}>\n            <div>\n                {renderGroup('A')}\n            </div>\n            <div>\n                {renderGroup('B')}\n            </div>\n        </div>\n    </div>;\n}\n\nMultiples.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nMultiples.panelWidth = 3;\nexport default Multiples;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport { DroppedSaw } from '@mohayonao/wave-tables';\nimport * as actions from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport Switch from \"../../Common/Switch\";\nimport { Container, Grid, GridCell } from './styles';\nimport { useModule } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nconst FREQ_RANGE = {\n    LOW: 'LOW',\n    MEDIUM: 'MEDIUM',\n    HIGH: 'HIGH'\n};\n\nconst mapIndexed = R.addIndex(R.map);\n\nconst LFO = ({ id, audioContext }) => {\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0);\n    const [range, setRange] = useState(FREQ_RANGE.LOW);\n\n    const moduleFactory = useCallback(() => {\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        const oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            RevSawtooth: createOscillator(audioContext, 'sine'),\n            Sine: createOscillator(audioContext, 'sine'),\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Pulse: pulse,\n        };\n        const revSawtoothWave = audioContext.createPeriodicWave(DroppedSaw.real, DroppedSaw.imag);\n        oscillators.RevSawtooth.setPeriodicWave(revSawtoothWave);\n\n        const frequencyControl = audioContext.createConstantSource();\n        frequencyControl.offset.value = 0;\n        R.forEachObjIndexed(o => frequencyControl.connect(o.frequency))(oscillators);\n        R.forEachObjIndexed(o => o.start())(oscillators);\n        frequencyControl.start();\n\n        return { oscillators, frequencyControl };\n    }, [audioContext]);\n\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerOutputs(id, {\n            Sawtooth: module.oscillators.Sawtooth,\n            RevSawtooth: module.oscillators.RevSawtooth,\n            Sine: module.oscillators.Sine,\n            Triangle: module.oscillators.Triangle,\n            Pulse: module.oscillators.Pulse\n        });\n    }, [module, id, registerOutputs]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        let newFreq;\n        switch (range) {\n            case FREQ_RANGE.LOW:\n                newFreq = Math.pow(2, frequency) * 4.995 + 0.005;\n                break;\n            case FREQ_RANGE.MEDIUM:\n                newFreq = Math.pow(2, frequency) * 49.9 + 0.1;\n                break;\n            case FREQ_RANGE.HIGH:\n            default:\n                newFreq = Math.pow(2, frequency) * 4490 + 10;\n                break;\n        }\n        module.frequencyControl.offset.value = newFreq;\n    }, [module, frequency, range]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(value);\n    }, []);\n\n    return <Container>\n        <span>LFO</span>\n        <Grid marginTop={15}>\n            {\n                module && R.pipe(\n                    R.keys,\n                    R.take(4),\n                    mapIndexed((osc, i) =>\n                        <GridCell key={osc} column={1} row={i + 1}>\n                            <Port label={''} portId={osc} moduleId={id} portType='output' />\n                        </GridCell>\n                    )\n                )(module.oscillators)\n            }\n            <GridCell column={1} row={5}>\n                <Port portId='Pulse' moduleId={id} portType='output'\n                    label={<img width={25} src={require(`./pulse.svg`)} alt='Pulse' />}\n                    labelPosition={LABEL_POSITIONS.BELOW} />\n            </GridCell>\n\n            {\n                module && R.pipe(\n                    R.keys,\n                    R.take(4),\n                    mapIndexed((osc, i) =>\n                        <GridCell key={osc} column={2} row={i + 1}>\n                            <img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc} />\n                        </GridCell>\n                    )\n                )(module.oscillators)\n            }\n            <GridCell column={2} row={5}>\n                <Knob label='Frequ.' min={-4} max={4} step={0.001} value={frequency} width={30} height={30} onChange={handleFrequencyChange} />\n            </GridCell>\n            <GridCell column='1/3' row={6}>                \n                <Switch value={range}\n                        onChange={setRange}\n                        options={[\n                            { value: FREQ_RANGE.LOW, label: 'L' },\n                            { value: FREQ_RANGE.MEDIUM, label: 'M' },\n                            { value: FREQ_RANGE.HIGH, label: 'H' }\n                        ]}\n                />\n                Frequ.<br />\n                Range\n            </GridCell>\n        </Grid>\n    </Container>;\n};\n\nLFO.isBrowserSupported = typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined';\nLFO.panelWidth = 6;\n\nexport default LFO;","// Pulse oscillator from Andy Harman\n// https://github.com/pendragon-andyh/WebAudio-PulseOscillator\nconst pulseCurve = new Float32Array(256);\nfor(let i = 0; i < 128; i++) {\n    pulseCurve[i] = -1;\n    pulseCurve[i + 128] = 1;\n}\nconst constantOneCurve = new Float32Array(2);\nconstantOneCurve[0] = 1;\nconstantOneCurve[1] = 1;\nexport default function createPulseOscillator() {\n    const node = this.createOscillator();\n    node.type = 'sawtooth';\n\n    const pulseShaper = this.createWaveShaper();\n    pulseShaper.curve = pulseCurve;\n    node.connect(pulseShaper);\n    const widthGain = this.createGain();\n    widthGain.gain.value = 0;\n    node.width = widthGain.gain;\n    node.widthGain = widthGain;\n    widthGain.connect(pulseShaper);\n\n    const constantOneShaper = this.createWaveShaper();\n    constantOneShaper.curve = constantOneCurve;\n    node.connect(constantOneShaper);\n    constantOneShaper.connect(widthGain);\n\n    node.connect = function() {\n        pulseShaper.connect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    node.disconnect = function() {\n        pulseShaper.disconnect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    return node;\n}","import * as R from 'ramda';\nimport VCO from './Components/VCO';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport VCA from './Components/VCA';\nimport VCFLowPass from './Components/VCFLowPass';\nimport Multiples from './Components/Multiples';\nimport LFO from './Components/LFO';\n\nexport const MODULE_TYPE = {\n    VCO: 'VCO',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCA: 'VCA',\n    VCF_LOW_PASS: 'VCF_LOW_ASS',\n    MULTIPLES: 'MULTIPLES',\n    LFO: 'LFO'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 20;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}` };\n    switch (type) {\n        case MODULE_TYPE.VCO:\n            module.Module = VCO;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF_LOW_PASS:\n            module.Module = VCFLowPass;\n            break;\n        case MODULE_TYPE.VCA:\n            module.Module = VCA;\n            break;\n        case MODULE_TYPE.MULTIPLES:\n            module.Module = Multiples;\n            break;\n        case MODULE_TYPE.LFO:\n            module.Module = LFO;\n            break\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    moduleCounters[type]++;\n    return module;\n};\n","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    audioContextInitiliazed: false,\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20,\n    racks: [[], []]\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { moduleType, id, rackId = 0 }) => {\n        const newModule = createModule({ type: moduleType, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${moduleType}`);\n            return state;\n        }\n\n        newModule.left = state.maxLeft;\n        return R.evolve({\n            audioContextInitiliazed: R.T,\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width),\n            racks: R.adjust(rackId, R.append(newModule.id))\n        })(state);\n    },\n\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: module => {\n                R.mapObjIndexed(\n                    (audioNode, output) => {                        \n                        if (typeof audioNode === \"function\")\n                        {                                               \n                            Object.defineProperty(outputs, output, { get: audioNode });                            \n                        }                        \n                    }\n                )(outputs);                \n                return {...module, outputs };\n            }\n        })\n    })(state),\n\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId, counter: 0 }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId, counter: 0 })\n            }))\n    })(state),\n\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x, rackId }) => {        \n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;    \n\n        if (newRight > window.innerWidth) return state;\n        \n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n            ({ id, left, width }) => {\n                const right = left + width;\n                return id !== moduleId && R.contains(id, state.racks[rackId]) && (\n                    (left >= newLeft && left < newRight) ||\n                    (left < newLeft && right > newLeft) ||\n                    (left === newLeft && right === newRight)\n                );\n            }\n        ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: {\n                [moduleId]: {\n                    left: R.always(newLeft)\n                }\n            },\n            connections: {\n                [moduleId]: R.map(R.evolve({ counter: R.inc }))\n            },\n            racks: racks => {\n                const oldRackId = R.findIndex(R.contains(moduleId), racks);\n                if (oldRackId === rackId) return racks;\n                return R.pipe(\n                    R.adjust(oldRackId, R.without([moduleId])),\n                    R.adjust(rackId, R.append(moduleId))\n                )(racks);\n            },\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    },\n\n    [ActionTypes.REMOVE_MODULE]: (state, { moduleId }) => {\n        const removedModule = state.modules[moduleId];\n\n        return R.evolve({\n            modules: R.dissoc(moduleId),\n            racks: racks => {\n                const rackId = R.findIndex(R.contains(moduleId), racks);\n                return R.adjust(rackId, R.without([moduleId]))(racks);\n            },\n            maxLeft: lastValue => removedModule.left + removedModule.width === lastValue ? removedModule.left : lastValue\n        })(state);\n    }\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {},\n    overPort: null\n};\n\nexport default handleActions({\n\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, fromPoint, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, R.reject(R.isNil, ({ fromPoint, toPoint, toPortId })))\n        })\n    })(state),\n\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state),\n\n    [ActionTypes.CHANGE_OVER_PORT]: (state, { portId }) => ({\n        ...state,\n        overPort: portId\n    })\n\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\n// import * as R from 'ramda';\n\nconst initialState = {\n    presetLoading: false,\n    isDirty: false\n};\n\nconst setDirty = isDirty => state => ({ ...state, isDirty });\n\nexport default handleActions({\n    [ActionTypes.LOAD_PRESET_START]: state => ({ ...state, presetLoading: true }),\n    [ActionTypes.LOAD_PRESET_FINISH]: state => ({ ...setDirty(false)(state), presetLoading: false  }),\n    [ActionTypes.REMOVE_MODULE]: setDirty(true),\n    [ActionTypes.ADD_MODULE]: setDirty(true),\n    [ActionTypes.REMOVE_CABLE]: setDirty(true),\n    [ActionTypes.ADD_CABLE]: setDirty(true)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\nimport rack from './Synth/reducer';\n\nexport default combineReducers({ modules, cables, rack });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch  (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            if (input && output)\n            {\n                input.connect(output);\n            }\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n            break;\n        }\n        default:\n            break;        \n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nexport default createStore(reducer, applyMiddleware(...middlewareChain));","import React from 'react';\nimport * as actions from '../actions';\nimport { MODULE_TYPE } from '../moduleFactory';\nimport { useAction } from '../../storeHelpers';\n\nconst ModulePicker = () => {\n    const addModule = useAction(actions.addModule);\n    return <div>\n        <button onClick={() => addModule(MODULE_TYPE.KEYBOARD)}>Add Keyboard</button>\n        <button onClick={() => addModule(MODULE_TYPE.VCO)}>Add VCO</button>\n        <button onClick={() => addModule(MODULE_TYPE.VCA)}>Add VCA</button>\n        <button onClick={() => addModule(MODULE_TYPE.ADSR)}>Add ADSR</button>\n        <button onClick={() => addModule(MODULE_TYPE.VCF_LOW_PASS)}>Add VCF Low Pass</button>\n        <button onClick={() => addModule(MODULE_TYPE.LFO)}>Add LFO</button>\n        <button onClick={() => addModule(MODULE_TYPE.STEREO_AUDIO_INTERFACE)}>Add Stereo Audio Interface</button>\n        <button onClick={() => addModule(MODULE_TYPE.MONO_AUDIO_INTERFACE)}>Add Mono Audio Interface</button>\n        <button onClick={() => addModule(MODULE_TYPE.MULTIPLES)}>Add Multiples</button>\n    </div>;\n};\n\nexport default ModulePicker;\n","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color, overPort, portId, toPortId }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        opacity={(overPort === portId || overPort === toPortId) ? 0.9 : 0.6} stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ scrollLeft, height, scrollTop }) => {\n    const cables = useSelector(R.pipe(R.path(['cables', 'cables']), R.values));\n    const overPort = useSelector(R.path(['cables', 'overPort']));\n\n    return <svg style={{ position: 'fixed', left: -scrollLeft, top: -scrollTop, width: `calc(100% + ${scrollLeft}px)`, height, pointerEvents: 'none' }}>\n        {cables.map((cable) => <Cable key={cable.portId} {...cable} overPort={overPort}/>)}\n    </svg>;;\n}\n\nexport default CablesContainer;","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.VCO, id: 'VCO1' },\n          { type: MODULE_TYPE.VCF_LOW_PASS, id: 'VCF1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.VCA, id: 'VCA1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'VCO1', portId: 'V/Oct' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'VCF1', portId: 'In' }, output: { moduleId: 'VCO1', portId: 'Sine' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'VCA1', portId: 'In' }, output: { moduleId: 'VCF1', portId: 'Out' } },\n          { input: { moduleId: 'VCA1', portId: 'CV' }, output: { moduleId: 'ADSR1', portId: 'Out' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'VCA1', portId: 'Out' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules, removeAllModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\nimport { LOAD_PRESET_START, LOAD_PRESET_FINISH } from '../actionTypes';\n\nconst connectModulesAndCables = R.curry((dispatch, connection) => {\n    const { input, output } = connection;\n    dispatch(connectModules(connection));\n\n    const fromPortId = `${input.moduleId}-${input.portId}`;\n    const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n    dispatch(addCable({\n        portId: fromPortId,\n        color: randomColor({ luminosity: 'dark' }),\n        fromPoint: {\n            x: fromElem.x + fromElem.width / 2,\n            y: fromElem.y + fromElem.height / 2\n        }\n    }));\n\n    const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n    dispatch(modifyCable({\n        portId: fromPortId,\n        toPortId: `${output.moduleId}-${output.portId}`,\n        toPoint: {\n            x: toElem.x + toElem.width / 2,\n            y: toElem.y + toElem.height / 2\n        }\n    }));\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    dispatch({ type: LOAD_PRESET_START });\n    dispatch(removeAllModules());\n    setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n};\n\nconst checkIfAllModulesRemoves = (dispatch, getState, preset) => () => {\n    if (!R.isEmpty(getState().modules.modules)) {\n        setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(module => dispatch(addModule(module.type, module.id)))(preset.modules);\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n};\n\nconst checkIfModulesCreated = (dispatch, getState, preset) => () => {\n    const stateModuleIds = R.map(R.prop('id'), getState().modules.modules);\n    const moduleIds = R.map(R.prop('id'), preset.modules);\n\n    if (!R.isEmpty(R.difference(stateModuleIds, moduleIds))) {\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(connectModulesAndCables(dispatch))(preset.connections);\n        setTimeout(checkIfAllConnected(dispatch, getState, preset.connections), 50);\n    }\n};\n\nconst checkIfAllConnected = (dispatch, getState, connections) => () => {\n    const stateConnections = getState().modules.connections;\n    const allConnected  = R.all(connection => {\n        const stateConnection = stateConnections[connection.input.moduleId];\n        if (!stateConnection) return false;\n\n        const port = stateConnection[connection.input.portId];\n        return port && port.moduleId === connection.output.moduleId && port.portId === connection.output.portId;\n    }, connections);\n\n    if (!allConnected) {\n        setTimeout(checkIfAllConnected(dispatch, getState, connections), 10);\n    } else {\n        dispatch({ type: LOAD_PRESET_FINISH });\n    }\n};","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport defaultPresets from '../defaultPresets';\nimport { useSelector } from 'react-redux';\nimport * as actions from '../actions';\nimport { useAction } from '../../storeHelpers';\n\nconst PresetManager = () => {\n    const isDirty = useSelector(R.path(['rack', 'isDirty']));\n    const presetLoading = useSelector(R.path(['rack', 'presetLoading']));\n\n    const loadPreset = useAction(actions.loadPreset);\n\n    const [preset, setPreset] = useState('');\n\n    useEffect(() => {\n        if (!presetLoading && isDirty)\n        {\n            setPreset('');\n        }\n    }, [isDirty, presetLoading]);\n\n    const handlePresetChange = useCallback(({ target: { value } }) =>\n    {        \n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    }, [loadPreset])\n\n    return <div>\n            <select value={preset} onChange={handlePresetChange}>\n                {\n                    preset === '' && <option value=''>Select Preset</option>\n                }\n                { R.pipe(\n                    R.keys,\n                    R.map(p => <option key={p} value={p}>{p}</option>)\n                )(defaultPresets) }\n            </select>\n        </div>;\n};\n\nexport default PresetManager;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Panel.css';\nimport * as actions from '../Modules/actions';\nimport { useAction } from '../storeHelpers';\n\nconst Screw = () => <img alt='screw' src={require('./screw_header.svg')} height={14} width={14} style={{ margin: 5 }} />;\n\nconst PanelEdge = ({ children }) => <div className='panel_edge'>\n    <Screw />\n    {children}\n    <Screw />\n</div>;\n\nconst Panel = ({ children, dragging, setDragging, width, left, moduleId }) => {\n    const removeModule = useAction(actions.removeModule);\n\n    return <div className='module-panel'\n        style={{ width, left, cursor: dragging ? 'grabbing' : 'grab' }}\n        onMouseDown={() => setDragging(true)} onMouseUp={() => setDragging(false)}>\n        <PanelEdge>\n            <span onClick={() => removeModule(moduleId)} className=\"btn_delete_module\"><FontAwesomeIcon size='xs' icon='trash' /></span>\n        </PanelEdge>\n        <div className='panel_content'>\n            {children}\n        </div>\n        <PanelEdge />\n    </div>;\n}\n\nexport default Panel;","import { memoizeWith, identity } from 'ramda';\n\nconst createVoltToFreqExpCurve = memoizeWith(identity, (baseFrequency, octaves) => {\n    const BUFFER_LENGTH = 8192;\n    const curve = new Float32Array(BUFFER_LENGTH);\n    for (let i = 0; i < BUFFER_LENGTH; i++) {\n        const normalized = (i / (BUFFER_LENGTH - 1)) * 4 - 2;\n        curve[i] = baseFrequency * Math.pow(octaves, normalized);\n    }\n    return curve;\n});\n\nexport default function createVoltToHzConverter(baseFrequency, octaves) {\n    const node = this.createConstantSource();\n    node.volt = node.offset;\n    const voltToFreqWaveshaper = this.createWaveShaper();\n    const voltScale = this.createGain();\n    voltToFreqWaveshaper.curve = createVoltToFreqExpCurve(baseFrequency, octaves);\n    voltScale.gain.value = 1 / octaves;\n    node.connect(voltScale).connect(voltToFreqWaveshaper);\n\n    node.connect = function() {\n        voltToFreqWaveshaper.connect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n\n    node.disconnect = function() {\n        voltToFreqWaveshaper.disconnect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n    return node;\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport ModulePicker from '../../Modules/Components/ModulePicker';\nimport CablesContainer from '../../Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport * as modulesActions from '../../Modules/actions';\nimport * as cablesAction from '../../Cables/actions';\nimport './Rack.css';\nimport Panel from '../../Common/Panel';\nimport createPulseOscillator from '../helpers/createPulseOscillator';\nimport createVoltToHzConverter from '../helpers/createVoltToHzConverter';\nimport { useAction } from '../../storeHelpers';\n\nconst Synth = () => {\n    const modules = useSelector(R.path(['modules', 'modules']));\n    const racks = useSelector(R.path(['modules', 'racks']));\n    const startingPort = useSelector(R.path(['modules', 'startingPort']));\n    const audioContextInitiliazed = useSelector(R.path(['modules', 'audioContextInitiliazed']));\n\n    const unsetStartingPort = useAction(modulesActions.unsetStartingPort);\n    const moveModule = useAction(modulesActions.moveModule);\n    const modifyCable = useAction(cablesAction.modifyCable);\n    const removeCable = useAction(cablesAction.removeCable);\n\n    const [draggingModuleId, setDraggingModuleId] = useState(null);\n    const [scrollLeft, setScrollLeft] = useState(0);\n    const [scrollTop, setScrollTop] = useState(0);\n    const [activeRackId, setActiveRackId] = useState(0);\n    const [audioContext, setAudioContext] = useState(null);\n\n    useEffect(() => {\n        window.onscroll = e => setScrollTop(window.scrollY);\n    }, []);\n\n    useEffect(() => {\n        if (audioContext) return;\n\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const newAudioContext = new AudioContext();\n        newAudioContext.createPulseOscillator = createPulseOscillator;\n        newAudioContext.createVoltToHzConverter = createVoltToHzConverter;\n        setAudioContext(newAudioContext);\n    }, [audioContext, audioContextInitiliazed]);\n\n    const moveCable = useCallback((e) => {\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY + scrollTop }\n        });\n    }, [modifyCable, startingPort, scrollTop]);\n\n    const dragModule = useCallback((e) => {\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX, activeRackId);\n    }, [draggingModuleId, moveModule, activeRackId]);\n\n    const handleMouseUp = useCallback(() => {\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }, [unsetStartingPort, removeCable, startingPort]);\n\n    const handleMouseMove = useCallback((e) => {\n        moveCable(e);\n        dragModule(e);\n    }, [moveCable, dragModule]);\n\n    const handleDragging = useCallback((moduleId) => {\n        return isDragging => {\n            setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }, []);;\n\n    const handleRackScroll = useCallback((e) => {\n        setScrollLeft(e.target.scrollLeft);\n    }, []);\n\n    return <div onMouseUp={handleMouseUp} onMouseMove={handleMouseMove} onScroll={handleRackScroll}>\n        <ModulePicker />\n        <PresetManager />\n        <div>\n            <div style={{ overflowX: 'scroll' }}>\n                {\n                    racks.map((moduleIds, rackId) =>\n                        <div key={rackId} className='rack' style={{ width: `calc(100% + ${scrollLeft}px)` }} onMouseEnter={() => setActiveRackId(rackId)}>\n                            {\n                                audioContext && moduleIds.map(id => {\n                                    const { Module, width, left } = modules[id];\n                                    return <Panel key={id}\n                                        rackId={rackId}\n                                        moduleId={id}\n                                        setDragging={handleDragging(id)}\n                                        dragging={id === draggingModuleId}\n                                        width={width} left={left}>\n                                        <Module id={id} audioContext={audioContext} />\n                                    </Panel>;\n                                })\n                            }\n                        </div>\n                    )\n                }\n            </div>\n            <CablesContainer scrollLeft={scrollLeft} scrollTop={scrollTop} height={racks.length * 1.5 * 370} />\n        </div>\n    </div>;\n};\n\nexport default Synth;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Synth from './Synth/Components/Synth';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Synth/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./pulse.svg\": 50,\n\t\"./revsawtooth.svg\": 86,\n\t\"./sawtooth.svg\": 87,\n\t\"./sine.svg\": 88,\n\t\"./triangle.svg\": 89\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 49;","module.exports = __webpack_public_path__ + \"static/media/pulse.f9689bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/port.1b33f6c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","module.exports = __webpack_public_path__ + \"static/media/revsawtooth.e22804aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/sawtooth.de511017.svg\";","module.exports = __webpack_public_path__ + \"static/media/sine.e1994103.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.87d20148.svg\";"],"sourceRoot":""}