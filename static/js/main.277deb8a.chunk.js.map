{"version":3,"sources":["Common/port.svg","Common/knob.svg","Modules/Components sync /^/.//.*/.svg$","Modules/Components/pulse.svg","Modules/Components/sawtooth.svg","Modules/Components/sine.svg","Modules/Components/triangle.svg","Common/screw_header.svg","Cables/actions.js","actionTypes.js","Modules/actions.js","storeHelpers.js","Common/Port.js","Common/Knob.js","Modules/Components/styles.js","Modules/lib.js","Modules/Components/VCO.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Modules/Components/Keyboard.js","Modules/Components/ADSR.js","Modules/Components/VCA.js","Modules/Components/VCFLowPass.js","Modules/Components/Multiples.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","Synth/reducer.js","reducer.js","middleware.js","store.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Synth/defaultPresets.js","Synth/actions.js","Synth/Components/PresetManager.js","Common/Panel.js","Synth/helpers/createPulseOscillator.js","Synth/helpers/createVoltToHzConverter.js","Synth/Components/Synth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./pulse.svg","./sawtooth.svg","./sine.svg","./triangle.svg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","addCable","portId","fromPoint","color","type","modifyCable","toPoint","toPortId","removeCable","changeOverPort","addModule","moduleType","rackId","connectModules","output","input","disconnectModule","port","registerInputs","inputs","registerOutputs","outputs","setStartingPort","unsetStartingPort","moveModule","moduleId","x","removeModule","dispatch","getState","_getState","_getState$modules","modules","connections","cables","removedModule","disconnectPorts","R","cablePortId","concat","useAction","action","useDispatch","useCallback","LABEL_POSITIONS","Port","label","labelPosition","portType","startingPort","useSelector","connection","modulesActions","cablesActions","fullPortId","useMemo","imgElem","useRef","useEffect","fromPortCable","_imgElem$current$getB","current","getBoundingClientRect","y","width","height","window","scrollY","toPortCable","_imgElem$current$getB2","portLabel","react_default","a","createElement","className","cx","disabled","onMouseDown","stopPropagation","_imgElem$current$getB3","randomColor","luminosity","onMouseUp","_imgElem$current$getB4","[object Object]","ref","onMouseEnter","onMouseLeave","preventDefault","src","require","alt","Knob","onChange","max","min","value","step","_useState","useState","_useState2","slicedToArray","isMoving","setIsMoving","imgRef","handleMouseMove","buttons","_imgRef$current$getBo","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","removeEventListener","style","display","flexDirection","cursor","margin","transform","styles","container","body","flex","justifyContent","spaceAround","useModule","moduleFactory","setModule","moduleIds","console","debug","memoizedModule","newModule","useListenToFirstAudioParam","audioNode","callback","savedCallback","_useState3","_useState4","intervalId","setIntervalId","audioParam","AudioParam","getFirstAudioParam","lastValue","setInterval","useConnections","createOscillator","audioContext","oscillator","frequency","VCO","actions","setFrequency","tune","setTune","_useState5","_useState6","pw","setPw","_useState7","_useState8","pwmCv","setPwmCv","_useState9","_useState10","fmCv","setFmCv","pulse","createPulseOscillator","oscillators","Sawtooth","Pulse","Triangle","Sine","frequencyControl","createVoltToHzConverter","detuneControl","createConstantSource","volt","offset","fmGain","createGain","gain","connect","detune","pwCvGain","start","V/Oct","disconnect","PWM","FM","handleFrequencyChange","handleTuneChange","handlePwChange","handlePwmCvChange","handleFmCvChange","objectSpread","Common_Port","Common_Knob","osc","key","toLowerCase","isBrowserSupported","OscillatorNode","ConstantSourceNode","panelWidth","StereoAudioInterface","leftPanner","StereoPannerNode","pan","rightPanner","destination","Left","Right","MonoAudioInterface","In","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","C#","D#","F#","G#","A#","calculateNoteVolt","noteIndex","octave","Keyboard","setOctave","cv","setCv","keyboardDown","setKeyboardDown","gate","CV","Gate","handleKeyDown","handleKeyUp","handleKeyboardDown","event","keyCodeIndex","keyCode","handleKeyboardUp","onkeydown","onkeyup","handleOctaveChange","target","newOctave","Number","note","i","isBlackKey","endsWith","gridRow","alignSelf","gridColumn","backgroundColor","convertKnobValueToTime","pow","ADSR","gateAudioNode","setGateAudioNode","attack","setAttack","decay","setDecay","sustain","setSustain","release","setRelease","adsr","gateInterval","convAttack","convDecay","convRelease","now","currentTime","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","clearInterval","Out","VCA","GainNode","VCFLowPass","q","setQ","cv2Gain","setCv2Gain","cv3Gain","setCv3Gain","vcf","createBiquadFilter","cv2","cv3","Q","CV1","CV2","CV3","maxValue","sampleRate","numberOfOctaves","log","LN2","multiplier","handleQChange","handleCv2GainChange","handleCv3GainChange","fontSize","BiquadFilterNode","Multiples","A","B","groupsInput","setGroupsInput","groupA","groupB","createGroupInputs","group","groupInputs","moduleGroup","createGroupOutputs","groupOutpus","renderGroup","result","isInput","portProps","push","MODULE_TYPE","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","VCF_LOW_PASS","MULTIPLES","moduleCounters","removeLastConnection","handleActions","ADD_MODULE","state","Module","createModule","left","maxLeft","audioContextInitiliazed","racks","alert","REGISTER_INPUTS","REGISTER_OUTPUTS","defineProperty","get","CONNECT_MODULES","counter","DISCONNECT_MODULE","SET_STARTING_PORT","UNSET_STARTING_PORT","MOVE_MODULE","prevLeft","moduleWidth","newLeft","newRight","innerWidth","right","oldRackId","REMOVE_MODULE","ADD_CABLE","MODIFY_CABLE","REMOVE_CABLE","CHANGE_OVER_PORT","overPort","setDirty","isDirty","LOAD_PRESET_START","presetLoading","LOAD_PRESET_FINISH","combineReducers","rack","middleware","next","lastInput","lastOutput","_getState$modules2","middlewareChain","thunk","createStore","reducer","applyMiddleware","ModulePicker","onClick","calculateMidpoint","lowestPoint","highestPoint","midpointY","abs","distance","midpointX","Cable","d","opacity","stroke","fill","strokeWidth","CablesContainer","scrollLeft","scrollTop","position","top","pointerEvents","cable","Components_Cable","assign","defaultPresets","Basic","connectModulesAndCables","fromPortId","fromElem","getElementById","toElem","loadPreset","preset","setTimeout","checkIfAllModulesRemoves","checkIfModulesCreated","stateModuleIds","checkIfAllConnected","stateConnections","stateConnection","PresetManager","setPreset","handlePresetChange","Screw","PanelEdge","children","Panel","dragging","setDragging","index_es","size","icon","pulseCurve","Float32Array","constantOneCurve","node","this","pulseShaper","createWaveShaper","curve","widthGain","constantOneShaper","apply","arguments","createVoltToFreqExpCurve","memoizeWith","identity","baseFrequency","octaves","normalized","voltToFreqWaveshaper","voltScale","Synth","cablesAction","draggingModuleId","setDraggingModuleId","setScrollLeft","setScrollTop","activeRackId","setActiveRackId","setAudioContext","onscroll","newAudioContext","AudioContext","webkitAudioContext","moveCable","dragModule","handleDragging","isDragging","handleRackScroll","onMouseMove","onScroll","Components_ModulePicker","Components_PresetManager","overflowX","_modules$id","Common_Panel","Components_CablesContainer","length","library","add","faTrash","App","Component","render","es","store","Components_Synth","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.277deb8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/port.1b33f6c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","var map = {\n\t\"./pulse.svg\": 71,\n\t\"./sawtooth.svg\": 72,\n\t\"./sine.svg\": 73,\n\t\"./triangle.svg\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","module.exports = __webpack_public_path__ + \"static/media/pulse.f9689bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sawtooth.de511017.svg\";","module.exports = __webpack_public_path__ + \"static/media/sine.e1994103.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.87d20148.svg\";","module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, fromPoint, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    fromPoint,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});\n\nexport const changeOverPort = portId => ({\n    type: ActionTypes.CHANGE_OVER_PORT,\n    portId\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\nexport const REMOVE_ALL_MODULES = 'REMOVE_ALL_MODULES';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\nexport const CHANGE_OVER_PORT = 'CHANGE_OVER_PORT';\n\nexport const LOAD_PRESET_START = 'LOAD_PRESET_START';\nexport const LOAD_PRESET_FINISH = 'LOAD_PRESET_FINISH';","import * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\nimport { removeCable } from '../Cables/actions';\n\nexport const addModule = (moduleType, id, rackId) => ({\n    type: ActionTypes.ADD_MODULE,\n    moduleType,\n    id,\n    rackId\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x, rackId) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x,\n    rackId\n});\n\nexport const removeModule = moduleId => (dispatch, getState) => {\n    const { modules: { modules, connections }, cables: { cables } } = getState();\n    const removedModule = modules[moduleId];\n    if (!removedModule) return;\n\n    const disconnectPorts =\n        R.pipe(\n            R.keys,\n            R.filter(portId => R.path([moduleId, portId], connections)),\n            R.forEach(portId => {\n                dispatch(disconnectModule({ moduleId, portId }));\n                let cablePortId = `${moduleId}-${portId}`;\n                if (!cables[cablePortId])\n                {\n                    cablePortId = R.pipe(\n                        R.filter(R.propEq('toPortId', cablePortId)),\n                        R.keys,\n                        R.head\n                    )(cables);\n                }\n                dispatch(removeCable(cablePortId));\n            })\n        );\n\n    if (removedModule.inputs)\n    {\n        disconnectPorts(removedModule.inputs);\n    }\n    if (removedModule.outputs)\n    {\n        disconnectPorts(removedModule.outputs);\n    }\n    dispatch({\n        type: ActionTypes.REMOVE_MODULE,\n        moduleId\n    })\n};\n\nexport const removeAllModules = () => (dispatch, getState) => {\n    R.pipe(\n        R.keys,\n        R.map(moduleId => dispatch(removeModule(moduleId)))\n    )(getState().modules.modules);\n    dispatch({ type: ActionTypes.REMOVE_ALL_MODULES });\n};","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as R from 'ramda';\n\nexport function useAction(action) {\n    const dispatch = useDispatch();\n    return useCallback(R.pipe(action, dispatch), [action, dispatch]);\n}","import React, { useEffect, useRef, useMemo } from 'react';\nimport * as R from 'ramda';\nimport { useSelector } from 'react-redux';\nimport * as modulesActions from '../Modules/actions';\nimport * as cablesActions from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\nimport { useAction } from '../storeHelpers';\n\nexport const LABEL_POSITIONS = {\n    HIDE: 'HIDE',\n    ABOVE: 'ABOVE',\n    BELOW: 'BELOW'\n}\n\nconst Port = ({ label, labelPosition = LABEL_POSITIONS.ABOVE, portId, moduleId, portType }) => {\n    const startingPort = useSelector(R.path(['modules', 'startingPort']));\n    const connection = useSelector(R.path(['modules', 'connections', moduleId, portId]));\n    const cables = useSelector(R.pipe(R.path(['cables', 'cables']), R.values));\n\n    const connectModules = useAction(modulesActions.connectModules);\n    const disconnectModule = useAction(modulesActions.disconnectModule);\n    const setStartingPort = useAction(modulesActions.setStartingPort);\n    const unsetStartingPort = useAction(modulesActions.unsetStartingPort);\n    const addCable = useAction(cablesActions.addCable);\n    const removeCable = useAction(cablesActions.removeCable);\n    const modifyCable = useAction(cablesActions.modifyCable);\n    const changeOverPort = useAction(cablesActions.changeOverPort);\n\n    const fullPortId = useMemo(() => `${moduleId}-${portId}`, [moduleId, portId]);\n\n    const imgElem = useRef(null);\n\n    useEffect(() => {\n        const fromPortCable = R.find(R.whereEq({ portId: fullPortId }), cables);\n        if (fromPortCable) {\n            const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n            modifyCable({\n                portId: fromPortCable.portId,\n                fromPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n            });\n        }\n        else {\n            const toPortCable = R.find(R.whereEq({ toPortId: fullPortId }), cables);\n            if (toPortCable) {\n                const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n                modifyCable({\n                    portId: toPortCable.portId,\n                    toPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n                });\n            }\n        }\n    }, [connection]);\n\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connection) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n\n        addCable({\n            portId: fullPortId,\n            fromPoint: { x: x + width / 2, y: y + window.scrollY + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId)) {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = imgElem.current.getBoundingClientRect();\n\n        if (connection &&\n            (connection.moduleId !== startingPort.moduleId || connection.portId !== startingPort.portId)) {\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n            removeCable(fullPortId);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2, y: y + height / 2 },\n            toPortId: fullPortId\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    const portLabel = label || portId;\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n    >\n        {labelPosition === LABEL_POSITIONS.ABOVE && portLabel}\n        <img id={fullPortId} height=\"30\" width=\"30\" ref={imgElem}\n            onMouseEnter={() => changeOverPort(fullPortId)}\n            onMouseLeave={() => changeOverPort(null)}\n            onMouseDown={e => e.preventDefault()} src={require('./port.svg')} alt={fullPortId} />\n        {labelPosition === LABEL_POSITIONS.BELOW && portLabel}\n    </div>;\n};\n\nexport default Port;","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nconst MAX_ANGLE = 150;\n\nconst Knob = ({ onChange, max, min, value, step, label, height = 50, width = 50 }) => {\n    const [isMoving, setIsMoving] = useState(false);\n    const imgRef = useRef(null);\n\n    const handleMouseMove = useCallback((e) => {\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = imgRef.current.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;\n        if (angle > 2.1 * MAX_ANGLE) angle = 0;\n\n        const ratio = angle / (2 * MAX_ANGLE);\n        let newValue = ratio * (max - min) + min;\n        newValue = Math.floor(newValue / step) * step;\n        if (newValue > max) newValue = max;\n        onChange(newValue);\n    }, [isMoving, min, max, onChange, step]);\n\n    const handleMouseDown = useCallback((e) => {\n        e.stopPropagation();\n        setIsMoving(true);\n    }, []);\n\n    const handleMouseUp = useCallback(() => {\n        setIsMoving(false);\n    }, []);\n\n    const calculateValueAngle = useCallback(() => {\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }, [min, max, value]);\n\n    useEffect(() => {\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.removeEventListener('mousemove', handleMouseMove);\n        };\n    }, [handleMouseUp, handleMouseMove]);\n\n    return <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {label}\n        <img ref={imgRef}\n            style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${calculateValueAngle()}deg)` }}\n            onMouseDown={handleMouseDown}\n            alt='knob' src={require('./knob.svg')} height={height} width={width} />\n    </div>;\n};\n\nexport default Knob;","export default {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-evenly'\n    },\n    spaceAround: {\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n};","import { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\n\nconst modules = {};\n\nexport function useModule(id, moduleFactory)\n{        \n    const [module, setModule] = useState(null);\n    const moduleIds = useSelector(R.pipe(R.path(['modules', 'modules']), R.keys));\n    \n    useEffect(() => {        \n        R.pipe(\n            R.converge(R.without,[\n                R.always(moduleIds),\n                R.keys\n            ]),\n            R.forEach(id => delete modules[id])\n        )(modules);        \n    }, [moduleIds]);\n\n    useEffect(() => {\n        console.debug(`useModule rendered for ${id}`);\n        const memoizedModule = modules[id];        \n        if (!R.isNil(memoizedModule)) {\n            setModule(memoizedModule);\n        }\n        else {\n            const newModule = moduleFactory();\n            newModule.id = id;\n            modules[id] = newModule;\n            setModule(newModule);\n        }\n    }, [id, moduleFactory]);\n    \n    return module;\n}\n\nexport function getFirstAudioParam(audioNode)\n{\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            return audioNode[p];\n        }\n    }\n    return null;\n}\n\nexport function useListenToFirstAudioParam(audioNode, callback)\n{\n    const savedCallback = useRef(callback);\n    const [intervalId, setIntervalId] = useState(null);\n\n    useEffect(() => savedCallback.current = callback, [callback]);\n\n    useEffect(() => {\n        if (!audioNode) return;        \n        const audioParam = getFirstAudioParam(audioNode);\n        if (audioParam) {\n            let lastValue = audioParam.value;\n            savedCallback.current(lastValue);\n            setIntervalId(setInterval(() => {                \n                if (lastValue !== audioParam.value) {\n                    lastValue = audioParam.value;\n                    savedCallback.current(lastValue);\n                }\n            }, 0));\n        }        \n    }, [audioNode]);    \n    return intervalId;\n}\n\nexport function useConnections(id) {\n    return useSelector(R.path(['modules', 'connections', id]));    \n}","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport styles from './styles';\nimport { useModule } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nconst VCO = ({ id, audioContext }) => {\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0);\n    const [tune, setTune] = useState(0);\n    const [pw, setPw] = useState(0);\n    const [pwmCv, setPwmCv] = useState(0);\n    const [fmCv, setFmCv] = useState(0);    \n    \n    const moduleFactory = useCallback(() => {\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        const oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            Pulse: pulse,\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Sine: createOscillator(audioContext, 'sine'),\n        };\n\n        const frequencyControl = audioContext.createVoltToHzConverter(440, 4);\n        const detuneControl = audioContext.createConstantSource();\n        frequencyControl.volt.value = 0;\n        detuneControl.offset.value = 0;\n\n        const fmGain = audioContext.createGain();\n        fmGain.gain.value = 0;\n        fmGain.connect(frequencyControl.volt);\n        R.forEachObjIndexed(o => frequencyControl.connect(o.frequency))(oscillators);\n        R.forEachObjIndexed(o => detuneControl.connect(o.detune))(oscillators);\n\n        const pwCvGain = audioContext.createGain();\n        pwCvGain.gain.value = 0;\n        pwCvGain.connect(oscillators.Pulse.width);\n\n        R.forEachObjIndexed(o => o.start())(oscillators);\n        frequencyControl.start();\n        detuneControl.start();\n\n        return { oscillators, frequencyControl, detuneControl, fmGain, pwCvGain };\n    }, [audioContext]);\n\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            'V/Oct': {\n                connect: audioNode => audioNode.connect(module.frequencyControl.volt),\n                disconnect: audioNode => audioNode.disconnect(module.frequencyControl.volt)\n            },\n            'PWM': {\n                connect: audioNode => audioNode.connect(module.pwCvGain),\n                disconnect: audioNode => audioNode.disconnect(module.pwCvGain)\n            },\n            'FM': {\n                connect: audioNode => audioNode.connect(module.fmGain),\n                disconnect: audioNode => audioNode.disconnect(module.fmGain)\n            }\n        });\n        registerOutputs(id, {\n            Sawtooth: module.oscillators.Sawtooth,\n            Pulse: module.oscillators.Pulse,\n            Triangle: module.oscillators.Triangle,\n            Sine: module.oscillators.Sine\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(value);\n        module.frequencyControl.volt.value = value;\n    }, [module]);\n\n    const handleTuneChange = useCallback((value) => {\n        setTune(value);\n        module.detuneControl.offset.value = value;\n    }, [module]);\n\n    const handlePwChange = useCallback((value) => {\n        setPw(value);\n        module.oscillators.Pulse.width.value = value;\n    }, [module]);\n\n    const handlePwmCvChange = useCallback((value) => {\n        setPwmCv(value);\n        module.pwCvGain.gain.value = value / 10;\n    }, [module]);\n\n    const handleFmCvChange = useCallback((value) => {\n        setFmCv(value);\n        module.fmGain.gain.value = value;\n    }, [module]);\n\n    return <div style={styles.container}>\n            <span>VCO</span>\n            <div style={{ ...styles.body, justifyContent: 'space-between' }}>\n                <div style={styles.spaceAround}>\n                    <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                        <Port portId='V/Oct' moduleId={id} portType='input'/>\n                        <Port portId='FM' moduleId={id} portType='input'/>\n                        <Port portId='PWM' moduleId={id} portType='input'/>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                        <Knob label='Range' min={-4} max={4} step={0.001} value={frequency} width={30} height={30} onChange={handleFrequencyChange}/>\n                        <Knob label='Tune' min={-600} max={600} step={1} value={tune} width={30} height={30} onChange={handleTuneChange}/>\n                        <Knob label='FM CV' min={0} max={1} step={0.005} value={fmCv} width={30} height={30} onChange={handleFmCvChange}/>\n                        <Knob label='PW' min={-1} max={1} step={0.001} value={pw} width={30} height={30} onChange={handlePwChange}/>\n                        <Knob label='PWM CV' min={0} max={1} step={0.005} value={pwmCv} width={30} height={30} onChange={handlePwmCvChange}/>\n                    </div>\n                </div>\n                <div style={styles.spaceAround}>\n                    {\n                        module && R.pipe(\n                            R.keys,\n                            R.map(osc =>\n                                <Port key={osc} label={<img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc}/>}\n                                      labelPosition={LABEL_POSITIONS.BELOW} portId={osc} moduleId={id} portType='output'/>)\n                        )(module.oscillators)\n                    }\n                </div>\n            </div>\n        </div>;\n};\n\nVCO.isBrowserSupported = typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined';\nVCO.panelWidth = 8;\n\nexport default VCO;","import React, { useEffect, useCallback } from 'react';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport * as actions from '../actions';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst StereoAudioInterface = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);    \n\n    const moduleFactory = useCallback(() => {\n        const leftPanner = new StereoPannerNode(audioContext, { pan: -1 });\n        const rightPanner = new StereoPannerNode(audioContext, { pan: 1 });\n        leftPanner.connect(audioContext.destination);\n        rightPanner.connect(audioContext.destination);\n        return { leftPanner, rightPanner };\n    }, [audioContext])\n\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(module.leftPanner),\n                disconnect: audioNode => audioNode.disconnect(module.leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(module.rightPanner),\n                disconnect: audioNode => audioNode.disconnect(module.rightPanner)\n            }\n        });\n    }, [module, id, registerInputs]);\n\n    return <div style={styles.container}>\n            <span>Stereo</span>\n            <div style={styles.body}>\n                <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n};\n\nStereoAudioInterface.isBrowserSupported = typeof StereoPannerNode !== 'undefined';\nStereoAudioInterface.panelWidth = 4;\n\nexport default StereoAudioInterface;","import React, { useEffect } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport { useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst MonoAudioInterface = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);    \n\n    useEffect(() => {\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(audioContext.destination)\n            }\n        })\n    }, [id, registerInputs, audioContext]);\n\n    return <div style={styles.container}>\n            <span>Mono</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n};\n\nMonoAudioInterface.isBrowserSupported = true;\nMonoAudioInterface.panelWidth = 4;\n\nexport default MonoAudioInterface;","import React, { useEffect, useState, useCallback } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\nconst Keyboard = ({ id, audioContext }) => {\n    const connections = useConnections(id);    \n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [octave, setOctave] = useState(4);\n    const [cv, setCv] = useState(0);\n    const [keyboardDown, setKeyboardDown] = useState(false);\n\n    const moduleFactory = useCallback(() => {\n        const gate = audioContext.createConstantSource();\n        gate.offset.value = 0;\n        gate.start();\n        const cv = audioContext.createConstantSource();\n        cv.offset.value = 0;\n        cv.start();\n\n        return { gate, cv };\n    }, [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerOutputs(id, {\n            CV: module.cv,\n            Gate: module.gate\n        });\n    }, [id, module, registerOutputs]);\n\n    useEffect(() => {\n        if (module) module.cv.offset.value = cv;\n    }, [module, cv]);\n\n    const handleKeyDown = useCallback((cv) => {        \n        setCv(cv);\n        module.gate.offset.value = 1;\n    }, [module]);\n\n    const handleKeyUp = useCallback(() => {\n        module.gate.offset.value = 0;\n    }, [module]);\n    \n    const handleKeyboardDown = useCallback((event) => {    \n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!keyboardDown && keyCodeIndex !== -1) {\n            setKeyboardDown(false);\n            handleKeyDown(calculateNoteVolt(keyCodeIndex, octave));\n        }\n    }, [keyboardDown, handleKeyDown, octave]);\n\n    const handleKeyboardUp = useCallback(() => {\n        setKeyboardDown(false);\n        handleKeyUp();\n    }, [handleKeyUp]);\n\n    useEffect(() => {\n        document.onkeydown = handleKeyboardDown;\n        document.onkeyup = handleKeyboardUp;\n    }, [handleKeyboardDown, handleKeyboardUp]);\n\n    const handleOctaveChange = useCallback(({ target: { value }}) => {\n        const newOctave = Number(value);\n        const cv = module.cv.offset.value;\n        setCv(cv + newOctave - octave);\n        setOctave(newOctave);\n    }, [module, octave]);\n\n    return <div style={styles.container}>\n            <span>&#181;Keyboard</span>\n            <div style={styles.body}>\n                Octave\n                <select value={octave} onChange={handleOctaveChange}>\n                    <option value={2}>-2</option>\n                    <option value={3}>-1</option>\n                    <option value={4}>0</option>\n                    <option value={5}>+1</option>\n                    <option value={6}>+2</option>\n                </select>\n                <div style={{ display: 'grid', flex: 1 }}>\n                    {\n                        NOTES.map((note, i) => {\n                                const isBlackKey = note.endsWith('#');\n                                const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                                return [\n                                    <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                    <button key={`${note}${i}`}\n                                            onMouseDown={e => {\n                                                e.stopPropagation();\n                                                handleKeyDown(calculateNoteVolt(i, octave));\n                                            }}\n                                            onMouseUp={handleKeyUp}\n                                            style={{ height:20, width:20,\n                                                gridRow,\n                                                alignSelf: 'center',\n                                                gridColumn: isBlackKey ? 3 : 2,\n                                                backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                                ];\n                            }\n                        )\n                    }\n                </div>\n                <div style={styles.spaceAround}>\n                    <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n};\n\nKeyboard.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nKeyboard.panelWidth = 6;\n\nexport default Keyboard;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { useModule, useListenToFirstAudioParam, useConnections } from '../lib';\nimport styles from './styles';\nimport { useAction } from '../../storeHelpers';\n\nconst convertKnobValueToTime = value => Math.pow(value, 4) * 15 + 0.001;\n\nconst ADSR = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [gateAudioNode, setGateAudioNode] = useState(null);\n    const [attack, setAttack] = useState(0.5);\n    const [decay, setDecay] = useState(0.5);\n    const [sustain, setSustain] = useState(0.5);\n    const [release, setRelease] = useState(0.5);\n\n    const moduleFactory = useCallback(() => {\n        const adsr = audioContext.createConstantSource();\n        adsr.offset.value = 0;\n        adsr.start();    \n        return { adsr };\n    }, [audioContext]);\n\n    const module = useModule(id, moduleFactory);\n\n    const handleGateInChange = useCallback((value) => {\n        if (!module) return;\n\n        const convAttack = convertKnobValueToTime(attack) + 0.01;\n        const convDecay = convertKnobValueToTime(decay);\n        const convRelease = convertKnobValueToTime(release);       \n        const now = audioContext.currentTime;\n        const offset = module.adsr.offset;    \n\n        if (value === 1) {\n            offset.cancelScheduledValues(now);            \n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(1, now + convAttack);\n            offset.linearRampToValueAtTime(sustain, now + convAttack + convDecay);\n        } else if (value === 0) {\n            offset.cancelScheduledValues(now);\n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(0, now + convRelease);\n        }\n    }, [module, attack, decay, sustain, release, audioContext.currentTime]);\n\n    const gateInterval = useListenToFirstAudioParam(gateAudioNode, handleGateInChange);\n\n    useEffect(() => {    \n        if (!module) return;\n\n        registerInputs(id, {\n            Gate: {\n                connect: setGateAudioNode,                \n                disconnect: () => {\n                    setGateAudioNode(null);\n                    if (gateInterval) {\n                        clearInterval(gateInterval);\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: module.adsr\n        });\n    }, [module, gateInterval, registerInputs, registerOutputs, id]);\n\n    return <div style={styles.container}>\n            <span>ADSR</span>\n            <div style={styles.body}>\n                Attack:\n                <Knob min={0} max={1} step={0.001} value={attack} onChange={value => setAttack(value)} width={30}\n                      height={30}/>\n                Decay:\n                <Knob min={0} max={1} step={0.001} value={decay} onChange={value => setDecay(value)} width={30}\n                      height={30}/>\n                Sustain:\n                <Knob min={0} max={1} step={0.01} value={sustain} onChange={value => setSustain(Number(value))}\n                      width={30} height={30}/>\n                Release:\n                <Knob min={0} max={1} step={0.001} value={release} onChange={value => setRelease(Number(value))}\n                      width={30} height={30}/>\n                <div style={styles.spaceAround}>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='input'/>\n                    <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n};\n\nADSR.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nADSR.panelWidth = 6;\n\nexport default ADSR;","import React, { useEffect, useCallback } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst VCA = ({ id, audioContext }) => {    \n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const moduleFactory = useCallback(() => ({ gain: audioContext.createGain() }), [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(module.gain),            \n                disconnect: audioNode => audioNode.disconnect(module.gain)\n            },\n            CV: {\n                connect: audioNode => {\n                    module.gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    return audioNode.connect(module.gain.gain);\n                },\n                disconnect: audioNode => {                \n                    module.gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(module.gain.gain);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase) it won't effect any more\n                    if (audioNode.offset) {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n            Out: module.gain\n        });\n    }, [module, id, registerInputs, registerOutputs, audioContext]);\n\n    return <div style={styles.container}>\n        <span>VCA</span>\n        <div style={styles.body}>\n            <Port portId='In' connections={connections} moduleId={id} portType='input' />\n            <Port portId='CV' connections={connections} moduleId={id} portType='input' />\n            <Port portId='Out' connections={connections} moduleId={id} portType='output' />\n        </div>\n    </div>;\n};\n\nVCA.isBrowserSupported = typeof GainNode !== 'undefined';\nVCA.panelWidth = 4;\n\nexport default VCA;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as actions from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\nimport styles from './styles';\n\nconst QUAL_MUL = 30;\n\nconst VCFLowPass = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [frequency, setFrequency] = useState(0.5);\n    const [q, setQ] = useState(0.1);\n    const [cv2Gain, setCv2Gain] = useState(0.5);\n    const [cv3Gain, setCv3Gain] = useState(0.5);\n\n    const moduleFactory = useCallback(() => {\n        const vcf = audioContext.createBiquadFilter();\n        const cv = audioContext.createVoltToHzConverter(440, 2);\n        const cv2 = audioContext.createVoltToHzConverter(440, 2);\n        const cv3 = audioContext.createVoltToHzConverter(440, 2);\n        const cv2Gain = audioContext.createGain();\n        const cv3Gain = audioContext.createGain();\n\n        cv.volt.value = 0;\n        cv.start();\n        cv.connect(vcf.frequency);\n\n        cv2.volt.value = 0;\n        cv2.start();\n        cv2.connect(cv2Gain);\n        cv2Gain.gain.value = 0.5;\n        cv2Gain.connect(vcf.frequency);\n\n        cv3.volt.value = 0;\n        cv3.start();\n        cv3.connect(cv3Gain);\n        cv3Gain.gain.value = 0.5;\n        cv3Gain.connect(vcf.frequency);\n\n        vcf.type = 'lowpass';\n        vcf.Q.value = 0.5;\n        return { vcf, cv, cv2, cv3, cv2Gain, cv3Gain };\n    }, [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n        window.vcf = module;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(module.vcf),\n                disconnect: audioNode => audioNode.disconnect(module.vcf)\n            },\n            CV1: {\n                connect: audioNode => audioNode.connect(module.cv.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv.volt)\n            },\n            CV2: {\n                connect: audioNode => audioNode.connect(module.cv2.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv2.volt)\n            },\n            CV3: {\n                connect: audioNode => audioNode.connect(module.cv3.volt),\n                disconnect: audioNode => audioNode.disconnect(module.cv3.volt)\n            }\n        });\n        registerOutputs(id, {\n            Out: module.vcf\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    useEffect(() => {\n        if (!module) return;\n\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        module.vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }, [module, frequency, audioContext]);\n\n    const handleFrequencyChange = useCallback((value) => {\n        setFrequency(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.vcf.Q.value = q * QUAL_MUL;        \n    }, [module, q])\n\n    const handleQChange = useCallback((value) => {\n        setQ(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv2Gain.gain.value = cv2Gain;\n    }, [module, cv2Gain]);\n\n    const handleCv2GainChange = useCallback(value => {\n        setCv2Gain(Number(value));\n    }, []);\n\n    useEffect(() => {\n        if (!module) return;\n        module.cv3Gain.gain.value = cv3Gain;\n    }, [module, cv3Gain]);\n\n    const handleCv3GainChange = useCallback(value => {\n        setCv3Gain(Number(value));\n    }, []);\n\n    return <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <span style={{ display: 'flex', flexDirection: 'column' }}>\n            VCF\n            <span style={{ fontSize: 10 }}>LOW PASS FILTER</span>\n        </span>\n        <div style={{ ...styles.spaceAround, flex: 1 }}>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                <Port portId='CV1' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV2' connections={connections} moduleId={id} portType='input' />\n                <Port portId='CV3' connections={connections} moduleId={id} portType='input' />\n                <Port portId='In' connections={connections} moduleId={id} portType='input' />\n                <Port portId='Out' connections={connections} moduleId={id} portType='output' />\n            </div>\n            <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                Frequency\n                <Knob min={0} max={1} step={0.01} value={frequency} width={30} height={30} onChange={value => handleFrequencyChange(value)} />\n                CV 2\n                <Knob min={0} max={1} step={0.01} value={cv2Gain} width={30} height={30} onChange={value => handleCv2GainChange(value)} />\n                CV 3\n                <Knob min={0} max={1} step={0.01} value={cv3Gain} width={30} height={30} onChange={value => handleCv3GainChange(value)} />\n                Res\n                <Knob min={0} max={1} step={0.01} value={q} width={30} height={30} onChange={value => handleQChange(value)} />\n            </div>\n        </div>\n    </div>;\n};\n\nVCFLowPass.isBrowserSupported = typeof BiquadFilterNode !== 'undefined';\nVCFLowPass.panelWidth = 6;\n\nexport default VCFLowPass;","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport * as actions from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport styles from './styles';\nimport { useModule, useConnections } from '../lib';\nimport { useAction } from '../../storeHelpers';\n\nconst Multiples = ({ id, audioContext }) => {\n    const connections = useConnections(id);\n    const registerInputs = useAction(actions.registerInputs);\n    const registerOutputs = useAction(actions.registerOutputs);\n\n    const [groupsInput, setGroupsInput] = useState({ A: null, B: null });\n\n    const moduleFactory = useCallback(() => {\n        const groupA = { input: null, audioNode: null };\n        const groupB = { input: null, audioNode: null };\n        return { groupA, groupB };\n    }, [audioContext]);\n    const module = useModule(id, moduleFactory);\n\n    useEffect(() => {\n        if (!module) return;\n\n        const createGroupInputs = group => {\n            const groupInputs = {};\n            const moduleGroup = module[`group${group}`];\n            for (let i = 1; i <= 4; i++) {\n                groupInputs[`Group${group}${i}In`] = {\n                    connect: audioNode => {\n                        setGroupsInput({ ...groupsInput, [group]: i })\n                        moduleGroup.input = i;\n                        moduleGroup.audioNode = audioNode;\n                    },\n                    disconnect: () => {\n                        setGroupsInput({ ...groupsInput, [group]: null })\n                        moduleGroup.audioNode = null;\n                    }\n                };\n            }\n            return groupInputs;\n        }\n\n        const createGroupOutputs = group => {\n            const groupOutpus = {};\n            for (let i = 1; i <= 4; i++) {\n                groupOutpus[`Group${group}${i}Out`] = () => module[`group${group}`].audioNode;\n            }\n            return groupOutpus;\n        }\n\n        registerInputs(id, {\n            ...createGroupInputs('A'),\n            ...createGroupInputs('B')\n        });\n        registerOutputs(id, {\n            ...createGroupOutputs('A'),\n            ...createGroupOutputs('B')\n        });\n    }, [module, id, registerInputs, registerOutputs]);\n\n    const renderGroup = useCallback(group => {\n        const result = [];\n        for (let i = 1; i <= 4; i++) {\n            const isInput = R.isNil(groupsInput[group]) || groupsInput[group] === i;\n            const portProps = {\n                key: `Group${group}${i}`,\n                portId: `Group${group}${i}${isInput ? 'In' : 'Out'}`,\n                connections,\n                moduleId: id,\n                portType: isInput ? 'input' : 'output',\n                labelPosition: LABEL_POSITIONS.HIDE\n            };\n            result.push(<Port {...portProps} />)\n        }\n        return result;\n    }, [groupsInput]);\n\n    return <div style={styles.container}>\n        <span style={{ fontSize: 13 }}>Multiples</span>\n        <div style={styles.body}>\n            <div>\n                {renderGroup('A')}\n            </div>\n            <div>\n                {renderGroup('B')}\n            </div>\n        </div>\n    </div>;\n}\n\nMultiples.isBrowserSupported = typeof ConstantSourceNode !== 'undefined';\nMultiples.panelWidth = 3;\nexport default Multiples;","import * as R from 'ramda';\nimport VCO from './Components/VCO';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport VCA from './Components/VCA';\nimport VCFLowPass from './Components/VCFLowPass';\nimport Multiples from './Components/Multiples';\n\nexport const MODULE_TYPE = {\n    VCO: 'VCO',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCA: 'VCA',\n    VCF_LOW_PASS: 'VCF_LOW_ASS',\n    MULTIPLES: 'MULTIPLES'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 20;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}` };\n    switch (type){\n        case MODULE_TYPE.VCO:\n            module.Module = VCO;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF_LOW_PASS:\n            module.Module = VCFLowPass;\n            break;\n        case MODULE_TYPE.VCA:\n            module.Module = VCA;\n            break;\n        case MODULE_TYPE.MULTIPLES:\n            module.Module = Multiples;\n            break;\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    moduleCounters[type]++;\n    return module;\n};\n","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    audioContextInitiliazed: false,\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20,\n    racks: [[], []]\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { moduleType, id, rackId = 0 }) => {\n        const newModule = createModule({ type: moduleType, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${moduleType}`);\n            return state;\n        }\n\n        newModule.left = state.maxLeft;\n        return R.evolve({\n            audioContextInitiliazed: R.T,\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width),\n            racks: R.adjust(rackId, R.append(newModule.id))\n        })(state);\n    },\n\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: module => {\n                R.mapObjIndexed(\n                    (audioNode, output) => {                        \n                        if (typeof audioNode === \"function\")\n                        {                                               \n                            Object.defineProperty(outputs, output, { get: audioNode });                            \n                        }                        \n                    }\n                )(outputs);                \n                return {...module, outputs };\n            }\n        })\n    })(state),\n\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId, counter: 0 }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId, counter: 0 })\n            }))\n    })(state),\n\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x, rackId }) => {        \n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;    \n\n        if (newRight > window.innerWidth) return state;\n        \n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n            ({ id, left, width }) => {\n                const right = left + width;\n                return id !== moduleId && R.contains(id, state.racks[rackId]) && (\n                    (left >= newLeft && left < newRight) ||\n                    (left < newLeft && right > newLeft) ||\n                    (left === newLeft && right === newRight)\n                );\n            }\n        ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: {\n                [moduleId]: {\n                    left: R.always(newLeft)\n                }\n            },\n            connections: {\n                [moduleId]: R.map(R.evolve({ counter: R.inc }))\n            },\n            racks: racks => {\n                const oldRackId = R.findIndex(R.contains(moduleId), racks);\n                if (oldRackId === rackId) return racks;\n                return R.pipe(\n                    R.adjust(oldRackId, R.without([moduleId])),\n                    R.adjust(rackId, R.append(moduleId))\n                )(racks);\n            },\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    },\n\n    [ActionTypes.REMOVE_MODULE]: (state, { moduleId }) => {\n        const removedModule = state.modules[moduleId];\n\n        return R.evolve({\n            modules: R.dissoc(moduleId),\n            racks: racks => {\n                const rackId = R.findIndex(R.contains(moduleId), racks);\n                return R.adjust(rackId, R.without([moduleId]))(racks);\n            },\n            maxLeft: lastValue => removedModule.left + removedModule.width === lastValue ? removedModule.left : lastValue\n        })(state);\n    }\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {},\n    overPort: null\n};\n\nexport default handleActions({\n\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, fromPoint, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, R.reject(R.isNil, ({ fromPoint, toPoint, toPortId })))\n        })\n    })(state),\n\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state),\n\n    [ActionTypes.CHANGE_OVER_PORT]: (state, { portId }) => ({\n        ...state,\n        overPort: portId\n    })\n\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\n// import * as R from 'ramda';\n\nconst initialState = {\n    presetLoading: false,\n    isDirty: false\n};\n\nconst setDirty = isDirty => state => ({ ...state, isDirty });\n\nexport default handleActions({\n    [ActionTypes.LOAD_PRESET_START]: state => ({ ...state, presetLoading: true }),\n    [ActionTypes.LOAD_PRESET_FINISH]: state => ({ ...setDirty(false)(state), presetLoading: false  }),\n    [ActionTypes.REMOVE_MODULE]: setDirty(true),\n    [ActionTypes.ADD_MODULE]: setDirty(true),\n    [ActionTypes.REMOVE_CABLE]: setDirty(true),\n    [ActionTypes.ADD_CABLE]: setDirty(true)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\nimport rack from './Synth/reducer';\n\nexport default combineReducers({ modules, cables, rack });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch  (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            if (input && output)\n            {\n                input.connect(output);\n            }\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n            break;\n        }\n        default:\n            break;        \n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nexport default createStore(reducer, applyMiddleware(...middlewareChain));","import React from 'react';\nimport * as actions from '../actions';\nimport { MODULE_TYPE } from '../moduleFactory';\nimport { useAction } from '../../storeHelpers';\n\nconst ModulePicker = () => {\n    const addModule = useAction(actions.addModule);\n    return <div>\n        <button onClick={() => addModule(MODULE_TYPE.KEYBOARD)}>Add Keyboard</button>\n        <button onClick={() => addModule(MODULE_TYPE.VCO)}>Add VCO</button>\n        <button onClick={() => addModule(MODULE_TYPE.VCA)}>Add VCA</button>\n        <button onClick={() => addModule(MODULE_TYPE.ADSR)}>Add ADSR</button>\n        <button onClick={() => addModule(MODULE_TYPE.VCF_LOW_PASS)}>Add VCF Low Pass</button>\n        <button onClick={() => addModule(MODULE_TYPE.STEREO_AUDIO_INTERFACE)}>Add Stereo Audio Interface</button>\n        <button onClick={() => addModule(MODULE_TYPE.MONO_AUDIO_INTERFACE)}>Add Mono Audio Interface</button>\n        <button onClick={() => addModule(MODULE_TYPE.MULTIPLES)}>Add Multiples</button>\n    </div>;\n};\n\nexport default ModulePicker;\n","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color, overPort, portId, toPortId }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        opacity={(overPort === portId || overPort === toPortId) ? 0.9 : 0.6} stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ scrollLeft, height, scrollTop }) => {\n    const cables = useSelector(R.pipe(R.path(['cables', 'cables']), R.values));\n    const overPort = useSelector(R.path(['cables', 'overPort']));\n\n    return <svg style={{ position: 'fixed', left: -scrollLeft, top: -scrollTop, width: `calc(100% + ${scrollLeft}px)`, height, pointerEvents: 'none' }}>\n        {cables.map((cable) => <Cable key={cable.portId} {...cable} overPort={overPort}/>)}\n    </svg>;;\n}\n\nexport default CablesContainer;","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.VCO, id: 'VCO1' },\n          { type: MODULE_TYPE.VCF_LOW_PASS, id: 'VCF1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.VCA, id: 'VCA1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'VCO1', portId: 'V/Oct' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'VCF1', portId: 'In' }, output: { moduleId: 'VCO1', portId: 'Sine' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'VCA1', portId: 'In' }, output: { moduleId: 'VCF1', portId: 'Out' } },\n          { input: { moduleId: 'VCA1', portId: 'CV' }, output: { moduleId: 'ADSR1', portId: 'Out' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'VCA1', portId: 'Out' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules, removeAllModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\nimport { LOAD_PRESET_START, LOAD_PRESET_FINISH } from '../actionTypes';\n\nconst connectModulesAndCables = R.curry((dispatch, connection) => {\n    const { input, output } = connection;\n    dispatch(connectModules(connection));\n\n    const fromPortId = `${input.moduleId}-${input.portId}`;\n    const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n    dispatch(addCable({\n        portId: fromPortId,\n        color: randomColor({ luminosity: 'dark' }),\n        fromPoint: {\n            x: fromElem.x + fromElem.width / 2,\n            y: fromElem.y + fromElem.height / 2\n        }\n    }));\n\n    const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n    dispatch(modifyCable({\n        portId: fromPortId,\n        toPortId: `${output.moduleId}-${output.portId}`,\n        toPoint: {\n            x: toElem.x + toElem.width / 2,\n            y: toElem.y + toElem.height / 2\n        }\n    }));\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    dispatch({ type: LOAD_PRESET_START });\n    dispatch(removeAllModules());\n    setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n};\n\nconst checkIfAllModulesRemoves = (dispatch, getState, preset) => () => {\n    if (!R.isEmpty(getState().modules.modules)) {\n        setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(module => dispatch(addModule(module.type, module.id)))(preset.modules);\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n};\n\nconst checkIfModulesCreated = (dispatch, getState, preset) => () => {\n    const stateModuleIds = R.map(R.prop('id'), getState().modules.modules);\n    const moduleIds = R.map(R.prop('id'), preset.modules);\n\n    if (!R.isEmpty(R.difference(stateModuleIds, moduleIds))) {\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(connectModulesAndCables(dispatch))(preset.connections);\n        setTimeout(checkIfAllConnected(dispatch, getState, preset.connections), 50);\n    }\n};\n\nconst checkIfAllConnected = (dispatch, getState, connections) => () => {\n    const stateConnections = getState().modules.connections;\n    const allConnected  = R.all(connection => {\n        const stateConnection = stateConnections[connection.input.moduleId];\n        if (!stateConnection) return false;\n\n        const port = stateConnection[connection.input.portId];\n        return port && port.moduleId === connection.output.moduleId && port.portId === connection.output.portId;\n    }, connections);\n\n    if (!allConnected) {\n        setTimeout(checkIfAllConnected(dispatch, getState, connections), 10);\n    } else {\n        dispatch({ type: LOAD_PRESET_FINISH });\n    }\n};","import React, { useState, useEffect, useCallback } from 'react';\nimport * as R from 'ramda';\nimport defaultPresets from '../defaultPresets';\nimport { useSelector } from 'react-redux';\nimport * as actions from '../actions';\nimport { useAction } from '../../storeHelpers';\n\nconst PresetManager = () => {\n    const isDirty = useSelector(R.path(['rack', 'isDirty']));\n    const presetLoading = useSelector(R.path(['rack', 'presetLoading']));\n\n    const loadPreset = useAction(actions.loadPreset);\n\n    const [preset, setPreset] = useState('');\n\n    useEffect(() => {\n        if (!presetLoading && isDirty)\n        {\n            setPreset('');\n        }\n    }, [isDirty, presetLoading]);\n\n    const handlePresetChange = useCallback(({ target: { value } }) =>\n    {        \n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    }, [loadPreset])\n\n    return <div>\n            <select value={preset} onChange={handlePresetChange}>\n                {\n                    preset === '' && <option value=''>Select Preset</option>\n                }\n                { R.pipe(\n                    R.keys,\n                    R.map(p => <option key={p} value={p}>{p}</option>)\n                )(defaultPresets) }\n            </select>\n        </div>;\n};\n\nexport default PresetManager;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Panel.css';\nimport * as actions from '../Modules/actions';\nimport { useAction } from '../storeHelpers';\n\nconst Screw = () => <img alt='screw' src={require('./screw_header.svg')} height={14} width={14} style={{ margin: 5 }} />;\n\nconst PanelEdge = ({ children }) => <div className='panel_edge'>\n    <Screw />\n    {children}\n    <Screw />\n</div>;\n\nconst Panel = ({ children, dragging, setDragging, width, left, moduleId }) => {\n    const removeModule = useAction(actions.removeModule);\n\n    return <div className='module-panel'\n        style={{ width, left, cursor: dragging ? 'grabbing' : 'grab' }}\n        onMouseDown={() => setDragging(true)} onMouseUp={() => setDragging(false)}>\n        <PanelEdge>\n            <span onClick={() => removeModule(moduleId)} className=\"btn_delete_module\"><FontAwesomeIcon size='xs' icon='trash' /></span>\n        </PanelEdge>\n        <div className='panel_content'>\n            {children}\n        </div>\n        <PanelEdge />\n    </div>;\n}\n\nexport default Panel;","// Pulse oscillator from Andy Harman\n// https://github.com/pendragon-andyh/WebAudio-PulseOscillator\nconst pulseCurve = new Float32Array(256);\nfor(let i = 0; i < 128; i++) {\n    pulseCurve[i] = -1;\n    pulseCurve[i + 128] = 1;\n}\nconst constantOneCurve = new Float32Array(2);\nconstantOneCurve[0] = 1;\nconstantOneCurve[1] = 1;\nexport default function createPulseOscillator() {\n    const node = this.createOscillator();\n    node.type = 'sawtooth';\n\n    const pulseShaper = this.createWaveShaper();\n    pulseShaper.curve = pulseCurve;\n    node.connect(pulseShaper);\n    const widthGain = this.createGain();\n    widthGain.gain.value = 0;\n    node.width = widthGain.gain;\n    node.widthGain = widthGain;\n    widthGain.connect(pulseShaper);\n\n    const constantOneShaper = this.createWaveShaper();\n    constantOneShaper.curve = constantOneCurve;\n    node.connect(constantOneShaper);\n    constantOneShaper.connect(widthGain);\n\n    node.connect = function() {\n        pulseShaper.connect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    node.disconnect = function() {\n        pulseShaper.disconnect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    return node;\n}","import { memoizeWith, identity } from 'ramda';\n\nconst createVoltToFreqExpCurve = memoizeWith(identity, (baseFrequency, octaves) => {\n    const BUFFER_LENGTH = 8192;\n    const curve = new Float32Array(BUFFER_LENGTH);\n    for (let i = 0; i < BUFFER_LENGTH; i++) {\n        const normalized = (i / (BUFFER_LENGTH - 1)) * 4 - 2;\n        curve[i] = baseFrequency * Math.pow(octaves, normalized);\n    }\n    return curve;\n});\n\nexport default function createVoltToHzConverter(baseFrequency, octaves) {\n    const node = this.createConstantSource();\n    node.volt = node.offset;\n    const voltToFreqWaveshaper = this.createWaveShaper();\n    const voltScale = this.createGain();\n    voltToFreqWaveshaper.curve = createVoltToFreqExpCurve(baseFrequency, octaves);\n    voltScale.gain.value = 1 / octaves;\n    node.connect(voltScale).connect(voltToFreqWaveshaper);\n\n    node.connect = function() {\n        voltToFreqWaveshaper.connect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n\n    node.disconnect = function() {\n        voltToFreqWaveshaper.disconnect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n    return node;\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport ModulePicker from '../../Modules/Components/ModulePicker';\nimport CablesContainer from '../../Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport * as modulesActions from '../../Modules/actions';\nimport * as cablesAction from '../../Cables/actions';\nimport './Rack.css';\nimport Panel from '../../Common/Panel';\nimport createPulseOscillator from '../helpers/createPulseOscillator';\nimport createVoltToHzConverter from '../helpers/createVoltToHzConverter';\nimport { useAction } from '../../storeHelpers';\n\nconst Synth = () => {\n    const modules = useSelector(R.path(['modules', 'modules']));\n    const racks = useSelector(R.path(['modules', 'racks']));\n    const startingPort = useSelector(R.path(['modules', 'startingPort']));\n    const audioContextInitiliazed = useSelector(R.path(['modules', 'audioContextInitiliazed']));\n\n    const unsetStartingPort = useAction(modulesActions.unsetStartingPort);\n    const moveModule = useAction(modulesActions.moveModule);\n    const modifyCable = useAction(cablesAction.modifyCable);\n    const removeCable = useAction(cablesAction.removeCable);\n\n    const [draggingModuleId, setDraggingModuleId] = useState(null);\n    const [scrollLeft, setScrollLeft] = useState(0);\n    const [scrollTop, setScrollTop] = useState(0);\n    const [activeRackId, setActiveRackId] = useState(0);\n    const [audioContext, setAudioContext] = useState(null);\n\n    useEffect(() => {\n        window.onscroll = e => setScrollTop(window.scrollY);\n    }, []);\n\n    useEffect(() => {\n        if (audioContext) return;\n\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const newAudioContext = new AudioContext();\n        newAudioContext.createPulseOscillator = createPulseOscillator;\n        newAudioContext.createVoltToHzConverter = createVoltToHzConverter;\n        setAudioContext(newAudioContext);\n    }, [audioContext, audioContextInitiliazed]);\n\n    const moveCable = useCallback((e) => {\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY + scrollTop }\n        });\n    }, [modifyCable, startingPort, scrollTop]);\n\n    const dragModule = useCallback((e) => {\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX, activeRackId);\n    }, [draggingModuleId, moveModule, activeRackId]);\n\n    const handleMouseUp = useCallback(() => {\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }, [unsetStartingPort, removeCable, startingPort]);\n\n    const handleMouseMove = useCallback((e) => {\n        moveCable(e);\n        dragModule(e);\n    }, [moveCable, dragModule]);\n\n    const handleDragging = useCallback((moduleId) => {\n        return isDragging => {\n            setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }, []);;\n\n    const handleRackScroll = useCallback((e) => {\n        setScrollLeft(e.target.scrollLeft);\n    }, []);\n\n    return <div onMouseUp={handleMouseUp} onMouseMove={handleMouseMove} onScroll={handleRackScroll}>\n        <ModulePicker />\n        <PresetManager />\n        <div>\n            <div style={{ overflowX: 'scroll' }}>\n                {\n                    racks.map((moduleIds, rackId) =>\n                        <div key={rackId} className='rack' style={{ width: `calc(100% + ${scrollLeft}px)` }} onMouseEnter={() => setActiveRackId(rackId)}>\n                            {\n                                audioContext && moduleIds.map(id => {\n                                    const { Module, width, left } = modules[id];\n                                    return <Panel key={id}\n                                        rackId={rackId}\n                                        moduleId={id}\n                                        setDragging={handleDragging(id)}\n                                        dragging={id === draggingModuleId}\n                                        width={width} left={left}>\n                                        <Module id={id} audioContext={audioContext} />\n                                    </Panel>;\n                                })\n                            }\n                        </div>\n                    )\n                }\n            </div>\n            <CablesContainer scrollLeft={scrollLeft} scrollTop={scrollTop} height={racks.length * 1.5 * 370} />\n        </div>\n    </div>;\n};\n\nexport default Synth;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Synth from './Synth/Components/Synth';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Synth/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}