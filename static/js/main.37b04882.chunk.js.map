{"version":3,"sources":["Common/port.svg","Common/knob.svg","Modules/Components sync /^/.//.*/.svg$","Modules/Components/pulse.svg","Modules/Components/sawtooth.svg","Modules/Components/sine.svg","Modules/Components/triangle.svg","Common/screw_header.svg","Modules/actions.js","actionTypes.js","Cables/actions.js","Common/Port.js","Common/Knob.js","Modules/Components/styles.js","Modules/Components/VCO.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Modules/Components/Keyboard.js","Rack/helpers/createPulseOscillator.js","Modules/Components/ADSR.js","Modules/portHelpers.js","Modules/Components/VCA.js","Modules/Components/VCF.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","reducer.js","middleware.js","store.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Rack/defaultPresets.js","Rack/actions.js","Rack/Components/PresetManager.js","Common/Panel.js","Rack/helpers/createVoltToHzConverter.js","Rack/Components/Rack.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./pulse.svg","./sawtooth.svg","./sine.svg","./triangle.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","addModule","moduleType","type","connectModules","_ref","output","input","registerInputs","inputs","registerOutputs","outputs","unsetStartingPort","addCable","portId","fromPoint","color","modifyCable","_ref2","toPoint","toPortId","removeCable","LABEL_POSITIONS","connect","ownProps","modules","startingPort","connections","moduleId","disconnectModule","port","setStartingPort","_elem","label","_ref$labelPosition","labelPosition","portType","portLabel","react_default","a","createElement","className","cx","disabled","onMouseDown","stopPropagation","concat","_elem$getBoundingClie","getBoundingClientRect","x","y","width","height","randomColor","luminosity","onMouseUp","_connectModules","_elem$getBoundingClie2","defineProperty","ref","elem","preventDefault","src","require","alt","Knob","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseMove","bind","assertThisInitialized","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","_this$props","isMoving","onChange","max","min","step","buttons","_this$_elem$getBoundi","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","setIsMoving","_this$props2","value","_this2","_this$props3","_this$props3$height","_this$props3$width","style","display","flexDirection","cursor","margin","transform","Component","compose","withState","styles","container","body","flex","justifyContent","spaceAround","createOscillator","audioContext","oscillator","frequency","VCO","pulse","createPulseOscillator","_oscillators","Sawtooth","Pulse","Triangle","Sine","window","_frequencyControl","createVoltToHzConverter","_detuneControl","createConstantSource","volt","offset","_fmGain","createGain","gain","R","o","detune","_pwCvGain","pwm","handleFrequencyChange","handleTuneChange","handlePwChange","handlePwmCvChange","handleFmCvChange","startNodes","V/Oct","audioNode","disconnect","PWM","FM","setFrequency","setTune","setPw","setPwmCv","setFmCv","start","tune","pw","pwmCv","fmCv","objectSpread","src_Common_Port","Common_Knob","osc","key","toLowerCase","setStatic","OscillatorNode","ConstantSourceNode","StereoAudioInterface","_leftPanner","StereoPannerNode","pan","_rightPanner","destination","Left","Right","In","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","C#","D#","F#","G#","A#","calculateNoteVolt","noteIndex","octave","Keyboard","_gate","_cv","handleKeyDown","handleKeyUp","handleOctaveChange","handleKeyboardDown","handleKeyboardUp","_keyboardDown","CV","Gate","event","keyCodeIndex","keyCode","cv","changeFrequency","target","setOctave","newOctave","Number","note","i","isBlackKey","endsWith","gridRow","alignSelf","gridColumn","backgroundColor","convertKnobValueToTime","pow","ADSR","_adsr","handleGateInChange","_gateInterval","callback","interval","_loop","AudioParam","lastValue","setInterval","listenToFirstAudioParam","clearInterval","Out","sustain","attack","decay","release","now","currentTime","cancelScheduledValues","linearRampToValueAtTime","setValueAtTime","setAttack","setDecay","setSustain","setRelease","VCA","_gain","GainNode","VCF","_vcf","createBiquadFilter","Q","handleTypeChange","setPitch","handleQChange","setQuality","maxValue","sampleRate","numberOfOctaves","log","LN2","multiplier","setQ","setType","q","_this3","BiquadFilterNode","MODULE_TYPE","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","moduleCounters","removeLastConnection","handleActions","_handleActions","state","newModule","_ref$id","undefined","Module","MonoAudioInterface","isBrowserSupported","panelWidth","createModule","left","maxLeft","alert","_ref3","_ref4","_ref5","_R$evolve3","_ref6","_ref7","_ref8","prevLeft","moduleWidth","newLeft","newRight","_ref9","right","moveX","diff","reducer_handleActions","cables","combineReducers","middleware","getState","next","action","_getState$modules","lastInput","lastOutput","_getState$modules2","middlewareChain","thunk","createStore","reducer","applyMiddleware","apply","onClick","Cable","d","lowestPoint","highestPoint","midpointY","abs","distance","midpointX","calculateMidpoint","opacity","stroke","fill","strokeWidth","position","top","pointerEvents","Components_Cable","defaultPresets","Basic","connectModulesAndCables","dispatch","connection","fromPortId","fromElem","getElementById","toElem","loadPreset","preset","setTimeout","setPreset","Screw","PanelEdge","children","Panel_Screw","Panel","dragging","setDragging","Panel_PanelEdge","pulseCurve","Float32Array","constantOneCurve","node","pulseShaper","createWaveShaper","curve","widthGain","constantOneShaper","arguments","createVoltToFreqExpCurve","baseFrequency","normalized","octaves","voltToFreqWaveshaper","voltScale","Rack","AudioContext","webkitAudioContext","_audioContext","handleDragging","_analyser","createAnalyser","analyser","visuallize","canvas","_canvas","canvasCtx","getContext","fftSize","dataArray","frequencyBinCount","length","WIDTH","HEIGHT","clearRect","draw","v","requestAnimationFrame","getFloatTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","prevProps","prevModule","modifyModuleCables","movedModule","moveCable","dragModule","_this$props4","draggingModuleId","moveModule","isDragging","setDraggingModuleId","_this$props5","onMouseMove","Components_ModulePicker","Components_PresetManager","src_Common_Panel","Components_CablesContainer","Rack_Components_Rack","App","es","store","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37b04882.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/port.1b33f6c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","var map = {\n\t\"./pulse.svg\": 68,\n\t\"./sawtooth.svg\": 69,\n\t\"./sine.svg\": 70,\n\t\"./triangle.svg\": 71\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 67;","module.exports = __webpack_public_path__ + \"static/media/pulse.f9689bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sawtooth.de511017.svg\";","module.exports = __webpack_public_path__ + \"static/media/sine.e1994103.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.87d20148.svg\";","module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addModule = (moduleType, id) => ({\n    type: ActionTypes.ADD_MODULE,\n    moduleType,\n    id\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\nexport const MODIFY_MODULE_CABLES = 'MODIFY_MODULE_CABLES';","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});\n\nexport const modifyModuleCables = ({ moduleId, diff }) => ({\n    type: ActionTypes.MODIFY_MODULE_CABLES,\n    moduleId,\n    diff\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { connectModules, disconnectModule, setStartingPort, unsetStartingPort } from '../Modules/actions';\nimport { addCable, removeCable, modifyCable } from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\n\nexport const LABEL_POSITIONS = {\n    ABOVE: 'ABOVE',\n    BELOW: 'BELOW'\n}\n\nconst Port = ({ label, labelPosition = LABEL_POSITIONS.ABOVE, portId, connections, connectModules, disconnectModule, moduleId, portType, startingPort, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable }) => {\n    let _elem;\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connections[portId]) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connections[portId].moduleId}-${connections[portId].portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n        addCable({\n            portId: `${moduleId}-${portId}`,\n            fromPoint: { x: x + width / 2 , y: y + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId))\n        {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n\n        if (connections[portId] &&\n            (connections[portId].moduleId !== startingPort.moduleId || connections[portId].portId !== startingPort.portId)) {\n            removeCable(`${connections[portId].moduleId}-${connections[portId].portId}`);\n            removeCable(`${moduleId}-${portId}`);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2 , y: y + height / 2 },\n            toPortId: `${moduleId}-${portId}`\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    const portLabel = label || portId;\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}>\n        { labelPosition === LABEL_POSITIONS.ABOVE && portLabel }\n        <img id={`${moduleId}-${portId}`} height=\"30\" width=\"30\" ref={elem => _elem = elem}\n             onMouseDown={e => e.preventDefault()} src={require('./port.svg')} alt={`${moduleId}-${portId}`}/>\n        { labelPosition === LABEL_POSITIONS.BELOW && portLabel }\n    </div>;\n};\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    startingPort: modules.startingPort,\n    connections: modules.connections[ownProps.moduleId]\n});\n\nexport default connect(mapStateToProps, { connectModules, disconnectModule, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable })(Port);","import React, { Component } from 'react';\nimport { compose, withState } from 'recompose';\n\nconst MAX_ANGLE = 150;\n\nclass Knob extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.calculateValueAngle = this.calculateValueAngle.bind(this);\n    }\n\n    componentWillMount() {\n        document.addEventListener('mouseup', this.handleMouseUp);\n        document.addEventListener('mousemove', this.handleMouseMove);\n    }\n\n    handleMouseMove(e) {\n        const { isMoving, onChange, max, min, step } = this.props;\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = this._elem.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;        \n        if (angle > 2.1 * MAX_ANGLE) angle = 0;    \n\n        const ratio = angle / (2 * MAX_ANGLE);\n            let newValue = ratio * (max - min) + min;\n            newValue = Math.floor(newValue / step) * step;\n            if (newValue > max) newValue = max;\n            onChange(newValue);\n    }\n\n    handleMouseDown(e) {\n        e.stopPropagation();\n        this.props.setIsMoving(true);\n    }\n\n    handleMouseUp() {\n        this.props.setIsMoving(false);\n    }\n\n    calculateValueAngle() {\n        const { min, max, value } = this.props;\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }\n\n    render() {\n        const { label, height = 50, width = 50 } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            { label }\n            <img ref={elem => { this._elem = elem; } }\n                 style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${this.calculateValueAngle()}deg)` }}\n                 onMouseDown={this.handleMouseDown}\n                 alt='knob' src={require('./knob.svg')} height={height} width={width}/>\n        </div>\n    }\n}\n\nexport default compose(\n    withState('isMoving', 'setIsMoving', false)\n)(Knob);","export default {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-evenly'\n    },\n    spaceAround: {\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n};","import React, { Component } from 'react';\nimport { compose, withState, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport styles from './styles';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nclass VCO extends Component {\n    constructor(props) {\n        super(props);\n        const{ audioContext } = props;\n        if (!audioContext) throw new Error('audioContext property must be provided');\n\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        this._oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            Pulse: pulse,\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Sine: createOscillator(audioContext, 'sine'),\n        };\n        window.pulse = this._oscillators.Pulse;\n        window['sine' + props.id] = this._oscillators.Sine;\n\n\n        this._frequencyControl = audioContext.createVoltToHzConverter(440, 2);\n        this._detuneControl = audioContext.createConstantSource();\n        this._frequencyControl.volt.value = 0;\n        this._detuneControl.offset.value = 0;\n\n        this._fmGain = audioContext.createGain();\n        this._fmGain.gain.value = 0;\n        this._fmGain.connect(this._frequencyControl.volt);\n        R.forEachObjIndexed(o => this._frequencyControl.connect(o.frequency))(this._oscillators);\n        R.forEachObjIndexed(o => this._detuneControl.connect(o.detune))(this._oscillators);\n\n        this._pwCvGain = audioContext.createGain();\n        this._pwCvGain.gain.value = 0;\n        this._pwCvGain.connect(this._oscillators.Pulse.width);\n        window.pwm = this._pwCvGain;\n\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTuneChange = this.handleTuneChange.bind(this);\n        this.handlePwChange = this.handlePwChange.bind(this);\n        this.handlePwmCvChange = this.handlePwmCvChange.bind(this);\n        this.handleFmCvChange = this.handleFmCvChange.bind(this);\n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this.startNodes();\n        registerInputs(id, {\n            'V/Oct': {\n                connect: audioNode => audioNode.connect(this._frequencyControl.volt),\n                disconnect: audioNode => audioNode.disconnect(this._frequencyControl.volt)\n            },\n            'PWM': {\n                connect: audioNode => audioNode.connect(this._pwCvGain),\n                disconnect: audioNode => audioNode.disconnect(this._pwCvGain)\n            },\n            'FM': {\n                connect: audioNode => audioNode.connect(this._fmGain),\n                disconnect: audioNode => audioNode.disconnect(this._fmGain)\n            }\n        });\n        registerOutputs(id, {\n            Sawtooth: this._oscillators.Sawtooth,\n            Pulse: this._oscillators.Pulse,\n            Triangle: this._oscillators.Triangle,\n            Sine: this._oscillators.Sine\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(value);\n        this._frequencyControl.offset.value = value;\n    }\n\n    handleTuneChange(value) {\n        this.props.setTune(value);\n        this._detuneControl.offset.value = value;\n    }\n\n    handlePwChange(value) {\n        this.props.setPw(value);\n        this._oscillators.Pulse.width.value = value;\n    }\n\n    handlePwmCvChange(value) {\n        this.props.setPwmCv(value);\n        this._pwCvGain.gain.value = value / 10;\n    }\n\n    handleFmCvChange(value) {\n        this.props.setFmCv(value);\n        this._fmGain.gain.value = value;\n    }\n\n    startNodes() {\n        R.forEachObjIndexed(o => o.start())(this._oscillators);\n        this._frequencyControl.start();\n        this._detuneControl.start();\n    }\n    \n    render() {\n        const { id, frequency, tune, pw, pwmCv, fmCv } = this.props;\n        return <div style={styles.container}>\n            <span>VCO</span>\n            <div style={{ ...styles.body, justifyContent: 'space-between' }}>\n                <div style={styles.spaceAround}>\n                    <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                        <Port portId='V/Oct' moduleId={id} portType='input'/>\n                        <Port portId='FM' moduleId={id} portType='input'/>\n                        <Port portId='PWM' moduleId={id} portType='input'/>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                        <Knob label='Range' min={-2} max={2} step={0.001} value={frequency} width={30} height={30} onChange={this.handleFrequencyChange}/>\n                        <Knob label='Tune' min={-600} max={600} step={1} value={tune} width={30} height={30} onChange={this.handleTuneChange}/>\n                        <Knob label='FM CV' min={0} max={1} step={0.005} value={fmCv} width={30} height={30} onChange={this.handleFmCvChange}/>\n                        <Knob label='PW' min={-1} max={1} step={0.001} value={pw} width={30} height={30} onChange={this.handlePwChange}/>\n                        <Knob label='PWM CV' min={0} max={1} step={0.005} value={pwmCv} width={30} height={30} onChange={this.handlePwmCvChange}/>\n                    </div>\n                </div>\n                <div style={styles.spaceAround}>\n                    {\n                        R.pipe(\n                            R.keys,\n                            R.map(osc =>\n                                <Port key={osc} label={<img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc}/>}\n                                      labelPosition={LABEL_POSITIONS.BELOW} portId={osc} moduleId={id} portType='output'/>)\n                        )(this._oscillators)\n                    }\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 8),\n    withState('frequency', 'setFrequency', 0),\n    withState('tune', 'setTune', 0),\n    withState('pw', 'setPw', 0),\n    withState('pwmCv', 'setPwmCv', 0),\n    withState('fmCv', 'setFmCv', 0),\n    withState('vOct', 'setVOct', 0),\n    connect(null, { connectModules, registerInputs, registerOutputs })\n)(VCO);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n\n        this._leftPanner = new StereoPannerNode(props.audioContext, { pan: -1 });\n        this._rightPanner = new StereoPannerNode(props.audioContext, { pan: 1 });\n        this._leftPanner.connect(props.audioContext.destination);\n        this._rightPanner.connect(props.audioContext.destination);\n    }\n\n    componentWillMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(this._leftPanner),\n                disconnect: audioNode => audioNode.disconnect(this._leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(this._rightPanner),\n                disconnect: audioNode => audioNode.disconnect(this._rightPanner)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>Stereo</span>\n            <div style={styles.body}>\n                <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof StereoPannerNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n    }\n\n    componentWillMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this.props.audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(this.props.audioContext.destination)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>Mono</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', true),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\n\nclass Keyboard extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._gate = props.audioContext.createConstantSource();\n        this._gate.offset.value = 0;\n        this._gate.start();\n        this._cv = props.audioContext.createConstantSource();\n        this._cv.offset.value = 0;\n        this._cv.start();\n\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleOctaveChange = this.handleOctaveChange.bind(this);\n        this.handleKeyboardDown = this.handleKeyboardDown.bind(this);\n        this.handleKeyboardUp = this.handleKeyboardUp.bind(this);\n        this._keyboardDown = false;\n    }\n\n    componentWillMount() {\n        const { id, registerOutputs } = this.props;        \n        registerOutputs(id, {\n            CV: this._cv,\n            Gate: this._gate\n        });\n\n        document.addEventListener('keydown', this.handleKeyboardDown);\n        document.addEventListener('keyup', this.handleKeyboardUp);\n    }\n\n    handleKeyboardDown(event) {\n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!this._keyboardDown && keyCodeIndex !== -1) {\n            this._keyboardDown = true;\n            this.handleKeyDown(calculateNoteVolt(keyCodeIndex, this.props.octave));\n        }\n    }\n\n    handleKeyboardUp() {\n        this._keyboardDown = false;\n        this.handleKeyUp();\n    }\n\n    handleKeyDown(cv) {\n        this.changeFrequency(cv);\n        this._gate.offset.value = 1;\n    }\n\n    handleKeyUp() {\n        this._gate.offset.value = 0;\n    }\n\n    handleOctaveChange({ target: { value }}) {\n        const { setOctave, octave } = this.props;\n        const newOctave = Number(value);\n        const cv = this._cv.offset.value;\n        this.changeFrequency(cv + newOctave - octave);\n        setOctave(newOctave);\n    }\n\n    changeFrequency(cv) {\n        this._cv.offset.value = cv;\n    }\n\n    render() {\n        const { id, connections, octave } = this.props;\n        return <div style={styles.container}>\n            <span>&#181;Keyboard</span>\n            <div style={styles.body}>\n                Octave\n                <select value={octave} onChange={this.handleOctaveChange}>\n                    <option value={2}>-2</option>\n                    <option value={3}>-1</option>\n                    <option value={4}>0</option>\n                    <option value={5}>+1</option>\n                    <option value={6}>+2</option>\n                </select>\n                <div style={{ display: 'grid', flex: 1 }}>\n                    {\n                        NOTES.map((note, i) => {\n                                const isBlackKey = note.endsWith('#');\n                                const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                                return [\n                                    <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                    <button key={`${note}${i}`}\n                                            onMouseDown={e => {\n                                                e.stopPropagation();\n                                                this.handleKeyDown(calculateNoteVolt(i, octave));\n                                            }}\n                                            onMouseUp={this.handleKeyUp}\n                                            style={{ height:20, width:20,\n                                                gridRow,\n                                                alignSelf: 'center',\n                                                gridColumn: isBlackKey ? 3 : 2,\n                                                backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                                ];\n                            }\n                        )\n                    }\n                </div>\n                <div style={styles.spaceAround}>\n                    <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('octave', 'setOctave', 4),\n    connect(mapStateToProps, { connectModules, registerOutputs })\n)(Keyboard);","// Pulse oscillator from Andy Harman\n// https://github.com/pendragon-andyh/WebAudio-PulseOscillator\nconst pulseCurve = new Float32Array(256);\nfor(let i = 0; i < 128; i++) {\n    pulseCurve[i] = -1;\n    pulseCurve[i + 128] = 1;\n}\nconst constantOneCurve = new Float32Array(2);\nconstantOneCurve[0] = 1;\nconstantOneCurve[1] = 1;\nexport default function createPulseOscillator() {\n    const node = this.createOscillator();\n    node.type = \"sawtooth\";\n\n    const pulseShaper = this.createWaveShaper();\n    pulseShaper.curve = pulseCurve;\n    node.connect(pulseShaper);\n    const widthGain = this.createGain();\n    widthGain.gain.value = 0;\n    node.width = widthGain.gain;\n    node.widthGain = widthGain;\n    widthGain.connect(pulseShaper);\n\n    const constantOneShaper = this.createWaveShaper();\n    constantOneShaper.curve = constantOneCurve;\n    node.connect(constantOneShaper);\n    constantOneShaper.connect(widthGain);\n\n    node.connect = function() {\n        pulseShaper.connect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    node.disconnect = function() {\n        pulseShaper.disconnect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    return node;\n}","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { listenToFirstAudioParam } from '../portHelpers';\nimport styles from './styles';\n\nconst convertKnobValueToTime = value => Math.pow(value, 4) * 15 + 0.001;\n\nclass ADSR extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._adsr = props.audioContext.createConstantSource();\n        this._adsr.offset.value = 0;\n        this.handleGateInChange = this.handleGateInChange.bind(this);        \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this._adsr.start();\n        registerInputs(id, {\n            Gate: {\n                connect: audioNode => this._gateInterval = listenToFirstAudioParam(audioNode, this.handleGateInChange),\n                disconnect: () => {\n                    if (this._gateInterval) {\n                        clearInterval((this._gateInterval));\n                        this._gateInterval = null;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._adsr\n        });\n    }\n\n    handleGateInChange(value) {\n        const { sustain, audioContext } = this.props;\n        const attack = convertKnobValueToTime(this.props.attack);\n        const decay = convertKnobValueToTime(this.props.decay);\n        const release = convertKnobValueToTime(this.props.release);       \n        const now = audioContext.currentTime;\n        const offset = this._adsr.offset;\n\n        if (value === 1) {\n            offset.cancelScheduledValues(0);\n            offset.linearRampToValueAtTime(0, now + 0.01);\n            offset.linearRampToValueAtTime(1, now + attack);\n            offset.linearRampToValueAtTime(sustain, now + attack + decay);\n        } else if (value === 0) {\n            offset.cancelScheduledValues(0);\n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(0, now + release);\n        }\n    }\n\n    render() {\n        const { id, connections, attack, setAttack, decay, setDecay,\n            sustain, setSustain, release, setRelease } = this.props;\n        return <div style={styles.container}>\n            <span>ADSR</span>\n            <div style={styles.body}>\n                Attack:\n                <Knob min={0} max={1} step={0.001} value={attack} onChange={value => setAttack(value)} width={30}\n                      height={30}/>\n                Decay:\n                <Knob min={0} max={1} step={0.001} value={decay} onChange={value => setDecay(value)} width={30}\n                      height={30}/>\n                Sustain:\n                <Knob min={0} max={1} step={0.01} value={sustain} onChange={value => setSustain(Number(value))}\n                      width={30} height={30}/>\n                Release:\n                <Knob min={0} max={1} step={0.001} value={release} onChange={value => setRelease(Number(value))}\n                      width={30} height={30}/>\n                <div style={styles.spaceAround}>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='input'/>\n                    <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('attack', 'setAttack', 0.5),\n    withState('decay', 'setDecay', 0.5),\n    withState('sustain', 'setSustain', 0.5),\n    withState('release', 'setRelease', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(ADSR);","export function listenToFirstAudioParam(audioNode, callback)\n{\n    let interval = null;\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            let lastValue = audioNode[p].value;\n            callback(lastValue);\n            interval = setInterval(() => {\n                if (lastValue !== audioNode[p].value) {\n                    lastValue = audioNode[p].value;\n                    callback(lastValue);\n                }\n            }, 0);\n            break;\n        }\n    }\n    return interval;\n}","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass VCA extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n        this._gain = props.audioContext.createGain();\n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs, audioContext } = this.props;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._gain),\n                disconnect: audioNode => audioNode.disconnect(this._gain)\n            },\n            CV: {\n                connect: audioNode => {\n                    this._gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    audioNode.connect(this._gain.gain);\n                },\n                disconnect: audioNode => {\n                    this._gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(this._gain.gain);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase) it won't effect any more\n                    if (audioNode.offset)\n                    {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._gain\n        });\n    }\n\n    render() {\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>VCA</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='CV' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]    \n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof GainNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n    )(VCA);","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\n\nconst QUAL_MUL = 30;\n\nclass VCF extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._vcf = props.audioContext.createBiquadFilter();  \n        this._vcf.type = \"lowpass\";\n        this._vcf.Q.value = 0.5;\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.setPitch = this.setPitch.bind(this);\n        this.handleQChange = this.handleQChange.bind(this);\n        this.setQuality = this.setQuality.bind(this);       \n    }\n\n    componentWillMount() {\n        const { id, registerInputs, registerOutputs } = this.props;        \n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._vcf),\n                disconnect: audioNode => audioNode.disconnect(this._vcf)\n            },\n        });\n        registerOutputs(id, {\n           Out: this._vcf\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(Number(value), this.setPitch);\n    }\n\n    setPitch()\n    {\n        const { frequency, audioContext } = this.props;\n        // Clamp the frequency between the minimum value (40 Hz) and half of the\n        // sampling rate.\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        this._vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }\n\n    handleQChange(value) {\n        this.props.setQ(Number(value), this.setQuality);\n    }\n\n    handleTypeChange({ target: { value }}) {\n        this.props.setType(value);\n        this._vcf.type = value;\n    }\n\n    setQuality()\n    {\n        const { q } = this.props;\n        this._vcf.Q.value = q * QUAL_MUL;\n    }\n\n    render() {\n        const { id, connections, type, frequency, q } = this.props;        \n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>VCF</span>\n            Shape:\n            <select value={type} onChange={this.handleTypeChange}>\n                <option value='lowpass'>Low Pass</option>\n                <option value='highpass'>High Pass</option>\n            </select>\n            Frequency:\n            <Knob min={0} max={1} step={0.01} value={frequency} onChange={value => this.handleFrequencyChange(value)}/>\n            Q:\n            <Knob min={0} max={1} step={0.01} value={q} onChange={value => this.handleQChange(value)}/>\n            <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof BiquadFilterNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('type', 'setType', 'lowpass'),\n    withState('frequency', 'setFrequency', 0.1),\n    withState('q', 'setQ', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(VCF);","import * as R from 'ramda';\nimport VCO from './Components/VCO';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport VCA from './Components/VCA';\nimport VCF from './Components/VCF';\n\nexport const MODULE_TYPE = {\n    VCO: 'VCO',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCA: 'VCA',\n    VCF: 'VCF'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 20;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}` };\n    switch (type){\n        case MODULE_TYPE.VCO:\n            module.Module = VCO;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF:\n            module.Module = VCF;\n            break;\n        case MODULE_TYPE.VCA:\n            module.Module = VCA;\n            break;\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    moduleCounters[type]++;\n    return module;\n};\n","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { moduleType, id }) => {\n        const newModule = createModule({ type: moduleType, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${moduleType}`);\n            return state;\n        }\n\n        newModule.left = state.maxLeft;// + R.pipe(R.values, R.pluck('width'), R.sum)(state.modules);\n        return R.evolve({\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width)\n        })(state);\n    },\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('outputs', outputs)\n        })\n    })(state),\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId })\n            }))\n    })(state),\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x }) => {\n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;\n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n            ({ id, left, width }) => {\n                const right = left + width;\n                return id !== moduleId &&  (\n                    (left >= newLeft && left < newRight) ||\n                    (left < newLeft && right > newLeft) ||\n                    (left === newLeft && right === newRight)\n                );\n            }\n        ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: R.evolve({\n                [moduleId]: R.evolve({\n                    left: R.always(newLeft)\n                })\n            }),\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    }\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {}\n};\n\nconst moveX = diff => R.evolve({\n    x: R.add(diff)\n});\n\nexport default handleActions({\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, { toPoint, toPortId })\n        })\n    })(state),\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state),\n    [ActionTypes.MODIFY_MODULE_CABLES]: (state, { moduleId, diff }) => R.evolve({\n        cables: R.map(R.cond([\n            [R.where({ portId: R.startsWith(moduleId) }), R.evolve({ fromPoint: moveX(diff) })],\n            [R.where({ toPortId: R.startsWith(moduleId) }), R.evolve({ toPoint: moveX(diff) })],\n            [R.T, R.identity]\n        ]))\n    })(state)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\n\nexport default combineReducers({ modules, cables });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch  (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            if (input && output)\n            {\n                input.connect(output);\n            }\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n        }\n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nexport default createStore(reducer, applyMiddleware(...middlewareChain));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addModule } from '../actions';\nimport { MODULE_TYPE } from '../moduleFactory';\n\nconst ModulePicker = ({ addModule }) => <div>\n    <button onClick={() => addModule(MODULE_TYPE.KEYBOARD) }>Add Keyboard</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCO) }>Add VCO</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCA) }>Add VCA</button>\n    <button onClick={() => addModule(MODULE_TYPE.ADSR) }>Add ADSR</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCF) }>Add VCF</button>   \n    <button onClick={() => addModule(MODULE_TYPE.STEREO_AUDIO_INTERFACE) }>Add Stereo Audio Interface</button>\n    <button onClick={() => addModule(MODULE_TYPE.MONO_AUDIO_INTERFACE) }>Add Mono Audio Interface</button>\n</div>;\n\nexport default connect(null, { addModule })(ModulePicker);\n","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        opacity={0.6} stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ cables }) =>\n    <svg style={{ position: 'fixed', left: 0, top: 0, width: '100%', height: '100%', pointerEvents: 'none' }}>\n        {cables.map(({ portId, fromPoint, toPoint, color }) => <Cable key={portId} fromPoint={fromPoint} toPoint={toPoint} color={color}/>)}\n    </svg>;\n\nconst mapStateToProps = ({ cables }) => ({\n    cables: R.values(cables.cables)\n});\n\nexport default connect(mapStateToProps, {})(CablesContainer);","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.VCO, id: 'VCO1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.VCA, id: 'VCA1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'VCO1', portId: 'V/Oct' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'VCA1', portId: 'In' }, output: { moduleId: 'VCO1', portId: 'Sine' } },\n          { input: { moduleId: 'VCA1', portId: 'CV' }, output: { moduleId: 'ADSR1', portId: 'Out' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'VCA1', portId: 'Out' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\n\nconst connectModulesAndCables = R.curry((dispatch, getState, connection) => {\n    const { input, output } = connection;\n    dispatch(connectModules(connection));\n\n    const fromPortId = `${input.moduleId}-${input.portId}`;\n    const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n    dispatch(addCable({\n        portId: fromPortId,\n        color: randomColor({ luminosity: 'dark' }),\n        fromPoint: {\n            x: fromElem.x + fromElem.width / 2,\n            y: fromElem.y + fromElem.height / 2\n        }\n    }));\n\n    const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n    dispatch(modifyCable({\n        portId: fromPortId,\n        toPortId: `${output.moduleId}-${output.portId}`,\n        toPoint: {\n            x: toElem.x + toElem.width / 2,\n            y: toElem.y + toElem.height / 2\n        }\n    }));\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    R.forEach(module => dispatch(addModule(module.type, module.id)))(preset.modules);\n    setTimeout(() => R.forEach(connectModulesAndCables(dispatch, getState))(preset.connections), 250);\n};","import React from 'react';\nimport * as R from 'ramda';\nimport { compose, withState } from 'recompose';\nimport defaultPresets from '../defaultPresets';\nimport { connect } from 'react-redux';\nimport { loadPreset } from '../actions';\n\nconst PresetManager = ({ preset, setPreset, loadPreset }) => {\n\n    const handlePresetChange = ({ target: { value } }) => {\n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    };\n\n    return <div>\n        <select value={preset} onChange={handlePresetChange}>\n            {\n                preset === '' && <option value=''>Select Preset</option>\n            }\n            { R.pipe(\n                R.keys,\n                R.map(p => <option key={p} value={p}>{p}</option>)\n            )(defaultPresets) }\n        </select>\n    </div>;\n};\n\nexport default compose(\n    withState('preset', 'setPreset', ''),\n    connect(null, { loadPreset })\n)(PresetManager);","import React from 'react';\nimport './Panel.css';\n\nconst Screw = () => <img alt='screw' src={require('./screw_header.svg')} height={14} width={14} style={{ margin: 5 }}/>;\n\nconst PanelEdge = ({ children }) => <div className='panel_edge'>\n    <Screw/>\n    {children}\n    <Screw/>\n</div>;\n\nconst Panel = ({ children, dragging, setDragging, width, left }) =>\n    <div className='module-panel'\n         style={{ width, left, cursor: dragging ? 'grabbing' : 'grab' }}\n         onMouseDown={() => setDragging(true)} onMouseUp={() => setDragging(false)}>\n        <PanelEdge/>\n        <div className='panel_content'>\n            {children}\n        </div>\n        <PanelEdge/>\n    </div>;\n\nexport default Panel;","const createVoltToFreqExpCurve = baseFrequency => {\n    const BUFFER_LENGTH = 8192;\n    const curve = new Float32Array(BUFFER_LENGTH);\n    for (let i = 0; i < BUFFER_LENGTH; i++) {\n        const normalized = (i / (BUFFER_LENGTH - 1)) * 4 - 2;\n        curve[i] = baseFrequency * Math.pow(2, normalized);\n    }\n    return curve;\n};\n\nexport default function createVoltToHzConverter(baseFrequency, octaves) {\n    const node = this.createConstantSource();\n    node.volt = node.offset;\n    const voltToFreqWaveshaper = this.createWaveShaper();\n    const voltScale = this.createGain();\n    voltToFreqWaveshaper.curve = createVoltToFreqExpCurve(baseFrequency);\n    voltScale.gain.value = 1 / octaves;\n    node.connect(voltScale).connect(voltToFreqWaveshaper);\n\n    node.connect = function() {\n        voltToFreqWaveshaper.connect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n\n    node.disconnect = function() {\n        voltToFreqWaveshaper.disconnect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n    return node;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose, withState } from 'recompose';\nimport * as R from 'ramda';\nimport ModulePicker from '../../Modules/Components/ModulePicker';\nimport CablesContainer from '../../Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport { unsetStartingPort, moveModule } from '../../Modules/actions';\nimport { modifyCable, removeCable, modifyModuleCables } from '../../Cables/actions';\nimport './Rack.css';\nimport Panel from \"../../Common/Panel\";\nimport createPulseOscillator from '../helpers/createPulseOscillator';\nimport createVoltToHzConverter from '../helpers/createVoltToHzConverter';\n\nclass Rack extends Component {\n    constructor(props){\n        super(props);\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        this._audioContext = new AudioContext();\n        this._audioContext.createPulseOscillator = createPulseOscillator;\n        this._audioContext.createVoltToHzConverter = createVoltToHzConverter;\n\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleDragging = this.handleDragging.bind(this);\n\n        //temp\n        this._analyser = this._audioContext.createAnalyser();\n        window.analyser = this._analyser;\n        window.visuallize = this.visuallize = this.visuallize.bind(this);\n    }\n\n    visuallize()\n    {\n        const canvas = this._canvas;\n        const canvasCtx = canvas.getContext(\"2d\");\n        const analyser = this._analyser;\n\n        analyser.fftSize = 1024;\n        const dataArray = new Float32Array(analyser.frequencyBinCount);\n        canvas.width = dataArray.length;\n        canvas.height = 200;\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n        function draw()\n        {\n            setTimeout(() => window.v = requestAnimationFrame(draw), 300);\n\n            analyser.getFloatTimeDomainData(dataArray);\n\n            canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n            canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n\n            canvasCtx.lineWidth = 2;\n            canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n\n            canvasCtx.beginPath();\n\n            let x = 0;\n\n            for (let i = 0; i < dataArray.length; i++)\n            {\n\n                x = i;\n                const y = (0.5 + dataArray[i] / 2) * HEIGHT;\n\n                if (i === 0)\n                {\n                    canvasCtx.moveTo(x, y);\n                }\n                else\n                {\n                    canvasCtx.lineTo(x, y);\n                }\n            }\n\n            canvasCtx.stroke();\n        }\n\n        draw();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { modules, modifyModuleCables } = this.props;\n        let prevModule;\n        const movedModule = R.find(\n            ({ id, left }) => {\n                prevModule = R.find(R.where({\n                    id: R.equals(id),\n                    left: R.complement(R.equals(left))\n                }))(prevProps.modules)\n                return !R.isNil(prevModule)\n            }\n        )(modules);\n        if (movedModule) {\n            modifyModuleCables({\n                moduleId: movedModule.id,\n                diff: movedModule.left - prevModule.left\n            })\n        }\n    }\n\n    handleMouseUp() {\n        const { unsetStartingPort, removeCable, startingPort } = this.props;\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }\n\n    handleMouseMove(e) {\n        this.moveCable(e);\n        this.dragModule(e);\n    }\n\n    moveCable(e) {\n        const { modifyCable, startingPort } = this.props;\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY }\n        });\n    }\n\n    dragModule(e) {\n        const { draggingModuleId, moveModule } = this.props;\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX);\n    }\n\n    handleDragging(moduleId) {\n        return isDragging => {\n            this.props.setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }\n\n    render() {\n        const { modules, draggingModuleId } = this.props;\n        return <div onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove}>\n            <ModulePicker/>\n            <PresetManager/>\n            <div>\n                <div className='rack'>\n                    { modules.map(({ Module, id, width, left }) =>\n                        <Panel key={id}\n                               setDragging={this.handleDragging(id)}\n                               dragging={ id === draggingModuleId }\n                               width={width} left={left}>\n                            <Module id={id} audioContext={this._audioContext}/>\n                        </Panel>\n                    ) }\n                </div>\n                <CablesContainer/>\n            </div>\n            <canvas ref={ref => this._canvas = ref} className=\"visualizer\" width=\"640\" height=\"100\"/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = state => ({\n    modules: R.values(state.modules.modules),\n    startingPort: state.modules.startingPort\n});\nexport default compose(\n    withState('draggingModuleId', 'setDraggingModuleId', null),\n    connect(mapStateToProps, { modifyCable, removeCable, unsetStartingPort, moveModule, modifyModuleCables })\n)(Rack);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Rack from './Rack/Components/Rack';\nimport './App.css';\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Rack/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}