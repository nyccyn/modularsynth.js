{"version":3,"sources":["Common/port.svg","Common/knob.svg","Modules/Components sync /^/.//.*/.svg$","Modules/Components/pulse.svg","Modules/Components/sawtooth.svg","Modules/Components/sine.svg","Modules/Components/triangle.svg","Common/screw_header.svg","Cables/actions.js","actionTypes.js","Modules/actions.js","Common/Port.js","Common/Knob.js","Modules/Components/styles.js","Modules/Components/VCO.js","Modules/Components/StereoAudioInterface.js","Modules/Components/MonoAudioInterface.js","Modules/Components/Keyboard.js","Synth/helpers/createPulseOscillator.js","Modules/Components/ADSR.js","Modules/portHelpers.js","Modules/Components/VCA.js","Modules/Components/VCF.js","Modules/moduleFactory.js","Modules/reducer.js","Cables/reducer.js","Synth/reducer.js","reducer.js","middleware.js","store.js","Modules/Components/ModulePicker.js","Cables/Components/Cable.js","Cables/Components/CablesContainer.js","Synth/defaultPresets.js","Synth/actions.js","Synth/Components/PresetManager.js","Common/Panel.js","Synth/helpers/createVoltToHzConverter.js","Synth/Components/Synth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./pulse.svg","./sawtooth.svg","./sine.svg","./triangle.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","addCable","_ref","type","portId","fromPoint","color","modifyCable","_ref2","toPoint","toPortId","removeCable","addModule","moduleType","rackId","connectModules","output","input","disconnectModule","port","registerInputs","inputs","registerOutputs","outputs","unsetStartingPort","removeModule","moduleId","dispatch","getState","console","log","_getState","_getState$modules","modules","connections","cables","removedModule","disconnectPorts","R","cablePortId","concat","LABEL_POSITIONS","connect","ownProps","startingPort","connection","setStartingPort","_elem","label","_ref$labelPosition","labelPosition","portType","useEffect","fromPortCable","_elem$getBoundingClie","getBoundingClientRect","x","y","width","height","toPortCable","_elem$getBoundingClie2","portLabel","react_default","a","createElement","className","cx","disabled","onMouseDown","stopPropagation","_elem$getBoundingClie3","randomColor","luminosity","onMouseUp","_connectModules","_elem$getBoundingClie4","defineProperty","ref","elem","preventDefault","src","require","alt","Knob","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseMove","bind","assertThisInitialized","handleMouseDown","handleMouseUp","calculateValueAngle","document","addEventListener","_this$props","isMoving","onChange","max","min","step","buttons","_this$_elem$getBoundi","middle","deltaX","clientX","deltaY","clientY","angle","Math","atan2","PI","newValue","floor","setIsMoving","_this$props2","value","_this2","_this$props3","_this$props3$height","_this$props3$width","style","display","flexDirection","cursor","margin","transform","Component","compose","withState","styles","container","body","flex","justifyContent","spaceAround","createOscillator","audioContext","oscillator","frequency","VCO","pulse","createPulseOscillator","_oscillators","Sawtooth","Pulse","Triangle","Sine","window","_frequencyControl","createVoltToHzConverter","_detuneControl","createConstantSource","volt","offset","_fmGain","createGain","gain","o","detune","_pwCvGain","pwm","handleFrequencyChange","handleTuneChange","handlePwChange","handlePwmCvChange","handleFmCvChange","startNodes","V/Oct","audioNode","disconnect","PWM","FM","setFrequency","setTune","setPw","setPwmCv","setFmCv","start","tune","pw","pwmCv","fmCv","objectSpread","src_Common_Port","Common_Knob","osc","key","toLowerCase","setStatic","OscillatorNode","ConstantSourceNode","StereoAudioInterface","_leftPanner","StereoPannerNode","pan","_rightPanner","destination","Left","Right","In","KEY_CODES_NOTES","NOTES","BLACK_KEYS_GRID_ROW","C#","D#","F#","G#","A#","calculateNoteVolt","noteIndex","octave","Keyboard","_gate","_cv","handleKeyDown","handleKeyUp","handleOctaveChange","handleKeyboardDown","handleKeyboardUp","_keyboardDown","CV","Gate","event","keyCodeIndex","keyCode","cv","changeFrequency","target","setOctave","newOctave","Number","note","i","isBlackKey","endsWith","gridRow","alignSelf","gridColumn","backgroundColor","convertKnobValueToTime","pow","ADSR","_adsr","handleGateInChange","_gateInterval","callback","interval","_loop","AudioParam","lastValue","setInterval","listenToFirstAudioParam","clearInterval","Out","sustain","attack","decay","release","now","currentTime","cancelScheduledValues","linearRampToValueAtTime","setValueAtTime","setAttack","setDecay","setSustain","setRelease","VCA","_gain","GainNode","VCF","_vcf","createBiquadFilter","Q","handleTypeChange","setPitch","handleQChange","setQuality","maxValue","sampleRate","numberOfOctaves","LN2","multiplier","setQ","setType","q","_this3","BiquadFilterNode","MODULE_TYPE","STEREO_AUDIO_INTERFACE","MONO_AUDIO_INTERFACE","KEYBOARD","moduleCounters","removeLastConnection","handleActions","_handleActions","state","_ref2$rackId","newModule","_ref$id","undefined","Module","MonoAudioInterface","isBrowserSupported","panelWidth","createModule","left","maxLeft","racks","alert","_ref3","_ref4","_ref5","_R$evolve3","counter","_ref6","_ref7","_ref8","prevLeft","moduleWidth","newLeft","newRight","innerWidth","_ref9","right","oldRackId","_ref10","reducer_handleActions","setDirty","isDirty","Synth_reducer_handleActions","presetLoading","combineReducers","rack","middleware","next","action","lastInput","lastOutput","_getState$modules2","middlewareChain","thunk","createStore","reducer","applyMiddleware","apply","onClick","calculateMidpoint","lowestPoint","highestPoint","midpointY","abs","distance","midpointX","Cable","d","opacity","stroke","fill","strokeWidth","scrollLeft","scrollTop","position","top","pointerEvents","Components_Cable","defaultPresets","Basic","connectModulesAndCables","fromPortId","fromElem","getElementById","toElem","checkIfAllModulesRemoves","preset","setTimeout","checkIfModulesCreated","stateModuleIds","moduleIds","checkIfAllConnected","stateConnections","stateConnection","PresetManager","handlePresetChange","prevProps","setPreset","loadPreset","Screw","PanelEdge","children","Panel_Screw","dragging","setDragging","Panel_PanelEdge","index_es","size","icon","pulseCurve","Float32Array","constantOneCurve","node","pulseShaper","createWaveShaper","curve","widthGain","constantOneShaper","arguments","createVoltToFreqExpCurve","baseFrequency","normalized","octaves","voltToFreqWaveshaper","voltScale","Synth","AudioContext","webkitAudioContext","_audioContext","handleDragging","handleRackScroll","onscroll","setScrollTop","scrollY","_analyser","createAnalyser","analyser","visuallize","canvas","_canvas","canvasCtx","getContext","fftSize","dataArray","frequencyBinCount","length","WIDTH","HEIGHT","clearRect","draw","v","requestAnimationFrame","getFloatTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","lineTo","moveCable","dragModule","draggingModuleId","moveModule","activeRackId","isDragging","setDraggingModuleId","setScrollLeft","_this$props4","setActiveRackId","onMouseMove","onScroll","Components_ModulePicker","Components_PresetManager","overflowX","onMouseEnter","_modules$id","src_Common_Panel","Components_CablesContainer","library","add","faTrash","App","es","store","Components_Synth","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d3a819d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/port.1b33f6c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/knob.23f417df.svg\";","var map = {\n\t\"./pulse.svg\": 73,\n\t\"./sawtooth.svg\": 74,\n\t\"./sine.svg\": 75,\n\t\"./triangle.svg\": 76\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 72;","module.exports = __webpack_public_path__ + \"static/media/pulse.f9689bc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sawtooth.de511017.svg\";","module.exports = __webpack_public_path__ + \"static/media/sine.e1994103.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.87d20148.svg\";","module.exports = __webpack_public_path__ + \"static/media/screw_header.2c2805d6.svg\";","import * as ActionTypes from '../actionTypes';\n\nexport const addCable = ({ portId, fromPoint, color }) => ({\n    type: ActionTypes.ADD_CABLE,\n    portId,\n    fromPoint,\n    color\n});\n\nexport const modifyCable = ({ portId, fromPoint, toPoint, toPortId }) => ({\n    type: ActionTypes.MODIFY_CABLE,\n    portId,\n    fromPoint,\n    toPoint,\n    toPortId\n});\n\nexport const removeCable = portId => ({\n    type: ActionTypes.REMOVE_CABLE,\n    portId\n});","export const ADD_MODULE = 'ADD_MODULE';\nexport const CONNECT_MODULES = 'CONNECT_MODULES';\nexport const DISCONNECT_MODULE = 'DISCONNECT_MODULE';\nexport const REGISTER_INPUTS = 'REGISTER_INPUTS';\nexport const REGISTER_OUTPUTS = 'REGISTER_OUTPUTS';\nexport const MOVE_MODULE = 'MOVE_MODULE';\nexport const REMOVE_MODULE = 'REMOVE_MODULE';\nexport const REMOVE_ALL_MODULES = 'REMOVE_ALL_MODULES';\n\nexport const SET_STARTING_PORT = 'SET_STARTING_PORT';\nexport const UNSET_STARTING_PORT = 'UNSET_STARTING_PORT';\n\nexport const ADD_CABLE = 'ADD_CABLE';\nexport const MODIFY_CABLE = 'MODIFY_CABLE';\nexport const REMOVE_CABLE = 'REMOVE_CABLE';\n\nexport const LOAD_PRESET_START = 'LOAD_PRESET_START';\nexport const LOAD_PRESET_FINISH = 'LOAD_PRESET_FINISH';","import * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\nimport { removeCable } from \"../Cables/actions\";\n\nexport const addModule = (moduleType, id, rackId) => ({\n    type: ActionTypes.ADD_MODULE,\n    moduleType,\n    id,\n    rackId\n});\n\nexport const connectModules = ({ output, input }) => ({\n    type: ActionTypes.CONNECT_MODULES,\n    output,\n    input\n});\n\nexport const disconnectModule = port => ({\n    type: ActionTypes.DISCONNECT_MODULE,\n    port\n});\n\nexport const registerInputs = (id, inputs) => ({\n    type: ActionTypes.REGISTER_INPUTS,\n    id,\n    inputs\n});\n\nexport const registerOutputs = (id, outputs) => ({\n    type: ActionTypes.REGISTER_OUTPUTS,\n    id,\n    outputs\n});\n\nexport const setStartingPort = port => ({\n    type: ActionTypes.SET_STARTING_PORT,\n    port\n});\n\nexport const unsetStartingPort = () => ({\n    type: ActionTypes.UNSET_STARTING_PORT\n});\n\nexport const moveModule = (moduleId, x, rackId) => ({\n    type: ActionTypes.MOVE_MODULE,\n    moduleId,\n    x,\n    rackId\n});\n\nexport const removeModule = moduleId => (dispatch, getState) => {\n    console.log(\"remove module\", moduleId);\n    const { modules: { modules, connections }, cables: { cables } } = getState();\n    const removedModule = modules[moduleId];\n    if (!removedModule) return;\n\n    const disconnectPorts =\n        R.pipe(\n            R.keys,\n            R.filter(portId => R.path([moduleId, portId], connections)),\n            R.forEach(portId => {\n                dispatch(disconnectModule({ moduleId, portId }));\n                let cablePortId = `${moduleId}-${portId}`;\n                if (!cables[cablePortId])\n                {\n                    cablePortId = R.pipe(\n                        R.filter(R.propEq('toPortId', cablePortId)),\n                        R.keys,\n                        R.head\n                    )(cables);\n                }\n                dispatch(removeCable(cablePortId));\n            })\n        );\n\n    if (removedModule.inputs)\n    {\n        disconnectPorts(removedModule.inputs);\n    }\n    if (removedModule.outputs)\n    {\n        disconnectPorts(removedModule.outputs);\n    }\n    dispatch({\n        type: ActionTypes.REMOVE_MODULE,\n        moduleId\n    })\n};\n\nexport const removeAllModules = () => (dispatch, getState) => {\n    console.log(\"remove all modules\");\n    R.pipe(\n        R.keys,\n        R.map(moduleId => dispatch(removeModule(moduleId)))\n    )(getState().modules.modules);\n    dispatch({ type: ActionTypes.REMOVE_ALL_MODULES });\n};","import React, { useEffect } from 'react';\nimport * as R from 'ramda';\nimport { connect } from 'react-redux';\nimport { connectModules, disconnectModule, setStartingPort, unsetStartingPort } from '../Modules/actions';\nimport { addCable, removeCable, modifyCable } from '../Cables/actions';\nimport cx from 'classnames';\nimport randomColor from 'randomcolor';\nimport './Port.css';\n\nexport const LABEL_POSITIONS = {\n    ABOVE: 'ABOVE',\n    BELOW: 'BELOW'\n}\n\nconst Port = ({ label, labelPosition = LABEL_POSITIONS.ABOVE, portId, connection, connectModules, disconnectModule,\n    moduleId, portType, startingPort, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable, cables }) => {\n    useEffect(() => {\n        const fromPortCable = R.find(R.whereEq({ portId: `${moduleId}-${portId}` }), cables);\n        if (fromPortCable) {\n            const { x, y, width, height } = _elem.getBoundingClientRect();\n            modifyCable({\n                portId: fromPortCable.portId,\n                fromPoint: { x: x + width / 2, y: y + height / 2 },\n            });\n        }\n        else {\n            const toPortCable = R.find(R.whereEq({ toPortId: `${moduleId}-${portId}` }), cables);\n            if (toPortCable) {\n                const { x, y, width, height } = _elem.getBoundingClientRect();\n                modifyCable({\n                    portId: toPortCable.portId,\n                    toPoint: { x: x + width / 2, y: y + height / 2 },\n                });\n            }\n        }\n    }, [connection]);\n\n    let _elem;\n    const handleMouseDown = e => {\n        e.stopPropagation();\n        const port = { portId, portType, moduleId };\n        if (connection) {\n            disconnectModule({\n                moduleId,\n                portId\n            });\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n        }\n\n        setStartingPort(port);\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n        addCable({\n            portId: `${moduleId}-${portId}`,\n            fromPoint: { x: x + width / 2, y: y + height / 2 },\n            color: randomColor({ luminosity: 'dark' })\n        });\n    };\n\n    const handleMouseUp = e => {\n        unsetStartingPort();\n        if (!startingPort ||\n            (startingPort.portType === portType) ||\n            (startingPort.moduleId === moduleId && startingPort.id === portId)) {\n            return;\n        }\n\n        e.stopPropagation();\n        const { x, y, width, height } = _elem.getBoundingClientRect();\n\n        if (connection &&\n            (connection.moduleId !== startingPort.moduleId || connection.portId !== startingPort.portId)) {\n            removeCable(`${connection.moduleId}-${connection.portId}`);\n            removeCable(`${moduleId}-${portId}`);\n        }\n\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: x + width / 2, y: y + height / 2 },\n            toPortId: `${moduleId}-${portId}`\n        });\n        connectModules({\n            [startingPort.portType]: startingPort,\n            [portType]: {\n                moduleId: moduleId,\n                portId\n            }\n        });\n    };\n\n    const portLabel = label || portId;\n    return <div className={cx('port', { disabled: startingPort && startingPort.portType === portType })}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}>\n        {labelPosition === LABEL_POSITIONS.ABOVE && portLabel}\n        <img id={`${moduleId}-${portId}`} height=\"30\" width=\"30\" ref={elem => _elem = elem}\n            onMouseDown={e => e.preventDefault()} src={require('./port.svg')} alt={`${moduleId}-${portId}`} />\n        {labelPosition === LABEL_POSITIONS.BELOW && portLabel}\n    </div>;\n};\n\nconst mapStateToProps = ({ modules, cables }, ownProps) => ({\n    startingPort: modules.startingPort,\n    connection: modules.connections[ownProps.moduleId][ownProps.portId],\n    cables: R.values(cables.cables)\n});\n\nexport default connect(mapStateToProps, { connectModules, disconnectModule, setStartingPort, unsetStartingPort, addCable, removeCable, modifyCable })(Port);","import React, { Component } from 'react';\nimport { compose, withState } from 'recompose';\n\nconst MAX_ANGLE = 150;\n\nclass Knob extends Component {\n    constructor(props) {\n        super(props);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.calculateValueAngle = this.calculateValueAngle.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mouseup', this.handleMouseUp);\n        document.addEventListener('mousemove', this.handleMouseMove);\n    }\n\n    handleMouseMove(e) {\n        const { isMoving, onChange, max, min, step } = this.props;\n        if (!isMoving) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.buttons !== 1) return;\n\n        const { x, y, width, height } = this._elem.getBoundingClientRect();\n        const middle = { x: x + width / 2, y: y + height / 2 };\n\n        const deltaX = e.clientX - middle.x;\n        const deltaY = e.clientY - middle.y;\n        let angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\n        if (angle < 0) angle += 360;\n        angle -= 120;\n        if (angle < 0) angle += 360;        \n        if (angle > 2.1 * MAX_ANGLE) angle = 0;    \n\n        const ratio = angle / (2 * MAX_ANGLE);\n            let newValue = ratio * (max - min) + min;\n            newValue = Math.floor(newValue / step) * step;\n            if (newValue > max) newValue = max;\n            onChange(newValue);\n    }\n\n    handleMouseDown(e) {\n        e.stopPropagation();\n        this.props.setIsMoving(true);\n    }\n\n    handleMouseUp() {\n        this.props.setIsMoving(false);\n    }\n\n    calculateValueAngle() {\n        const { min, max, value } = this.props;\n        const totalDistance = max - min;\n        const distanceFromMin = value - min;\n        const ratio = distanceFromMin / totalDistance;\n        return ratio * 2 * MAX_ANGLE;\n    }\n\n    render() {\n        const { label, height = 50, width = 50 } = this.props;\n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            { label }\n            <img ref={elem => { this._elem = elem; } }\n                 style={{ cursor: 'pointer', margin: 'auto', transform: `rotate(${this.calculateValueAngle()}deg)` }}\n                 onMouseDown={this.handleMouseDown}\n                 alt='knob' src={require('./knob.svg')} height={height} width={width}/>\n        </div>\n    }\n}\n\nexport default compose(\n    withState('isMoving', 'setIsMoving', false)\n)(Knob);","export default {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        justifyContent: 'space-evenly'\n    },\n    spaceAround: {\n        display: 'flex',\n        justifyContent: 'space-around'\n    }\n};","import React, { Component } from 'react';\nimport { compose, withState, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port, { LABEL_POSITIONS } from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport styles from './styles';\n\nconst createOscillator = (audioContext, type) => {\n    const oscillator = audioContext.createOscillator();\n    oscillator.type = type;\n    oscillator.frequency.value = 0;\n    return oscillator;\n};\n\nclass VCO extends Component {\n    constructor(props) {\n        super(props);\n        const{ audioContext } = props;\n        if (!audioContext) throw new Error('audioContext property must be provided');\n\n        const pulse = audioContext.createPulseOscillator();\n        pulse.frequency.value = 0;\n        pulse.width.value = 0;\n        this._oscillators = {\n            Sawtooth: createOscillator(audioContext, 'sawtooth'),\n            Pulse: pulse,\n            Triangle: createOscillator(audioContext, 'triangle'),\n            Sine: createOscillator(audioContext, 'sine'),\n        };\n        window.pulse = this._oscillators.Pulse;\n        window['sine' + props.id] = this._oscillators.Sine;\n\n\n        this._frequencyControl = audioContext.createVoltToHzConverter(440, 2);\n        this._detuneControl = audioContext.createConstantSource();\n        this._frequencyControl.volt.value = 0;\n        this._detuneControl.offset.value = 0;\n\n        this._fmGain = audioContext.createGain();\n        this._fmGain.gain.value = 0;\n        this._fmGain.connect(this._frequencyControl.volt);\n        R.forEachObjIndexed(o => this._frequencyControl.connect(o.frequency))(this._oscillators);\n        R.forEachObjIndexed(o => this._detuneControl.connect(o.detune))(this._oscillators);\n\n        this._pwCvGain = audioContext.createGain();\n        this._pwCvGain.gain.value = 0;\n        this._pwCvGain.connect(this._oscillators.Pulse.width);\n        window.pwm = this._pwCvGain;\n\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTuneChange = this.handleTuneChange.bind(this);\n        this.handlePwChange = this.handlePwChange.bind(this);\n        this.handlePwmCvChange = this.handlePwmCvChange.bind(this);\n        this.handleFmCvChange = this.handleFmCvChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this.startNodes();\n        registerInputs(id, {\n            'V/Oct': {\n                connect: audioNode => audioNode.connect(this._frequencyControl.volt),\n                disconnect: audioNode => audioNode.disconnect(this._frequencyControl.volt)\n            },\n            'PWM': {\n                connect: audioNode => audioNode.connect(this._pwCvGain),\n                disconnect: audioNode => audioNode.disconnect(this._pwCvGain)\n            },\n            'FM': {\n                connect: audioNode => audioNode.connect(this._fmGain),\n                disconnect: audioNode => audioNode.disconnect(this._fmGain)\n            }\n        });\n        registerOutputs(id, {\n            Sawtooth: this._oscillators.Sawtooth,\n            Pulse: this._oscillators.Pulse,\n            Triangle: this._oscillators.Triangle,\n            Sine: this._oscillators.Sine\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(value);\n        this._frequencyControl.offset.value = value;\n    }\n\n    handleTuneChange(value) {\n        this.props.setTune(value);\n        this._detuneControl.offset.value = value;\n    }\n\n    handlePwChange(value) {\n        this.props.setPw(value);\n        this._oscillators.Pulse.width.value = value;\n    }\n\n    handlePwmCvChange(value) {\n        this.props.setPwmCv(value);\n        this._pwCvGain.gain.value = value / 10;\n    }\n\n    handleFmCvChange(value) {\n        this.props.setFmCv(value);\n        this._fmGain.gain.value = value;\n    }\n\n    startNodes() {\n        R.forEachObjIndexed(o => o.start())(this._oscillators);\n        this._frequencyControl.start();\n        this._detuneControl.start();\n    }\n    \n    render() {\n        const { id, frequency, tune, pw, pwmCv, fmCv } = this.props;\n        return <div style={styles.container}>\n            <span>VCO</span>\n            <div style={{ ...styles.body, justifyContent: 'space-between' }}>\n                <div style={styles.spaceAround}>\n                    <div style={{ ...styles.spaceAround, flexDirection: 'column' }}>\n                        <Port portId='V/Oct' moduleId={id} portType='input'/>\n                        <Port portId='FM' moduleId={id} portType='input'/>\n                        <Port portId='PWM' moduleId={id} portType='input'/>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                        <Knob label='Range' min={-2} max={2} step={0.001} value={frequency} width={30} height={30} onChange={this.handleFrequencyChange}/>\n                        <Knob label='Tune' min={-600} max={600} step={1} value={tune} width={30} height={30} onChange={this.handleTuneChange}/>\n                        <Knob label='FM CV' min={0} max={1} step={0.005} value={fmCv} width={30} height={30} onChange={this.handleFmCvChange}/>\n                        <Knob label='PW' min={-1} max={1} step={0.001} value={pw} width={30} height={30} onChange={this.handlePwChange}/>\n                        <Knob label='PWM CV' min={0} max={1} step={0.005} value={pwmCv} width={30} height={30} onChange={this.handlePwmCvChange}/>\n                    </div>\n                </div>\n                <div style={styles.spaceAround}>\n                    {\n                        R.pipe(\n                            R.keys,\n                            R.map(osc =>\n                                <Port key={osc} label={<img width={25} src={require(`./${osc.toLowerCase()}.svg`)} alt={osc}/>}\n                                      labelPosition={LABEL_POSITIONS.BELOW} portId={osc} moduleId={id} portType='output'/>)\n                        )(this._oscillators)\n                    }\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof OscillatorNode !== 'undefined' && typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 8),\n    withState('frequency', 'setFrequency', 0),\n    withState('tune', 'setTune', 0),\n    withState('pw', 'setPw', 0),\n    withState('pwmCv', 'setPwmCv', 0),\n    withState('fmCv', 'setFmCv', 0),\n    withState('vOct', 'setVOct', 0),\n    connect(null, { connectModules, registerInputs, registerOutputs })\n)(VCO);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n\n        this._leftPanner = new StereoPannerNode(props.audioContext, { pan: -1 });\n        this._rightPanner = new StereoPannerNode(props.audioContext, { pan: 1 });\n        this._leftPanner.connect(props.audioContext.destination);\n        this._rightPanner.connect(props.audioContext.destination);\n    }\n\n    componentDidMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            Left: {\n                connect: audioNode => audioNode.connect(this._leftPanner),\n                disconnect: audioNode => audioNode.disconnect(this._leftPanner)\n            },\n            Right: {\n                connect: audioNode => audioNode.connect(this._rightPanner),\n                disconnect: audioNode => audioNode.disconnect(this._rightPanner)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>Stereo</span>\n            <div style={styles.body}>\n                <Port portId='Left' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Right' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof StereoPannerNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass StereoAudioInterface extends Component {\n    constructor(props){\n        super(props);\n        if (!props.audioContext) throw new Error('audioContext property must be provided');\n    }\n\n    componentDidMount() {\n        const { id, registerInputs } = this.props;\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this.props.audioContext.destination),\n                disconnect: audioNode => audioNode.disconnect(this.props.audioContext.destination)\n            }\n        })\n    }\n\n    render(){\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>Mono</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', true),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs })\n)(StereoAudioInterface);","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nconst KEY_CODES_NOTES = [90, 83, 88, 68, 67, 86, 71, 66, 72, 78, 74, 77, 188];\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C'];\nconst BLACK_KEYS_GRID_ROW = {\n  'C#': '1/4',\n  'D#': '3/6',\n  'F#': '6/9',\n  'G#': '8/11',\n  'A#': '10/13'\n};\n\n// The ground oscillation frequency is 440, so we want to send 0 volts when keyboard is in A4\nconst calculateNoteVolt = (noteIndex, octave) => octave - 5 + (noteIndex + 3) / 12;\n\n\nclass Keyboard extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._gate = props.audioContext.createConstantSource();\n        this._gate.offset.value = 0;\n        this._gate.start();\n        this._cv = props.audioContext.createConstantSource();\n        this._cv.offset.value = 0;\n        this._cv.start();\n\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleOctaveChange = this.handleOctaveChange.bind(this);\n        this.handleKeyboardDown = this.handleKeyboardDown.bind(this);\n        this.handleKeyboardUp = this.handleKeyboardUp.bind(this);\n        this._keyboardDown = false;\n    }\n\n    componentDidMount() {\n        const { id, registerOutputs } = this.props;        \n        registerOutputs(id, {\n            CV: this._cv,\n            Gate: this._gate\n        });\n\n        document.addEventListener('keydown', this.handleKeyboardDown);\n        document.addEventListener('keyup', this.handleKeyboardUp);\n    }\n\n    handleKeyboardDown(event) {\n        const keyCodeIndex = R.indexOf(event.keyCode, KEY_CODES_NOTES);\n        if (!this._keyboardDown && keyCodeIndex !== -1) {\n            this._keyboardDown = true;\n            this.handleKeyDown(calculateNoteVolt(keyCodeIndex, this.props.octave));\n        }\n    }\n\n    handleKeyboardUp() {\n        this._keyboardDown = false;\n        this.handleKeyUp();\n    }\n\n    handleKeyDown(cv) {\n        this.changeFrequency(cv);\n        this._gate.offset.value = 1;\n    }\n\n    handleKeyUp() {\n        this._gate.offset.value = 0;\n    }\n\n    handleOctaveChange({ target: { value }}) {\n        const { setOctave, octave } = this.props;\n        const newOctave = Number(value);\n        const cv = this._cv.offset.value;\n        this.changeFrequency(cv + newOctave - octave);\n        setOctave(newOctave);\n    }\n\n    changeFrequency(cv) {\n        this._cv.offset.value = cv;\n    }\n\n    render() {\n        const { id, connections, octave } = this.props;\n        return <div style={styles.container}>\n            <span>&#181;Keyboard</span>\n            <div style={styles.body}>\n                Octave\n                <select value={octave} onChange={this.handleOctaveChange}>\n                    <option value={2}>-2</option>\n                    <option value={3}>-1</option>\n                    <option value={4}>0</option>\n                    <option value={5}>+1</option>\n                    <option value={6}>+2</option>\n                </select>\n                <div style={{ display: 'grid', flex: 1 }}>\n                    {\n                        NOTES.map((note, i) => {\n                                const isBlackKey = note.endsWith('#');\n                                const gridRow = isBlackKey ? BLACK_KEYS_GRID_ROW[note] : i +1;\n                                return [\n                                    <div key={`TITLE_${note}${i}`} style={{ alignSelf: 'center', gridRow, gridColumn: isBlackKey ? 4 : 1 }}>{note}</div>,\n                                    <button key={`${note}${i}`}\n                                            onMouseDown={e => {\n                                                e.stopPropagation();\n                                                this.handleKeyDown(calculateNoteVolt(i, octave));\n                                            }}\n                                            onMouseUp={this.handleKeyUp}\n                                            style={{ height:20, width:20,\n                                                gridRow,\n                                                alignSelf: 'center',\n                                                gridColumn: isBlackKey ? 3 : 2,\n                                                backgroundColor: isBlackKey ? 'black' : 'white' }}/>\n                                ];\n                            }\n                        )\n                    }\n                </div>\n                <div style={styles.spaceAround}>\n                    <Port portId='CV' connections={connections} moduleId={id} portType='output'/>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('octave', 'setOctave', 4),\n    connect(mapStateToProps, { connectModules, registerOutputs })\n)(Keyboard);","// Pulse oscillator from Andy Harman\n// https://github.com/pendragon-andyh/WebAudio-PulseOscillator\nconst pulseCurve = new Float32Array(256);\nfor(let i = 0; i < 128; i++) {\n    pulseCurve[i] = -1;\n    pulseCurve[i + 128] = 1;\n}\nconst constantOneCurve = new Float32Array(2);\nconstantOneCurve[0] = 1;\nconstantOneCurve[1] = 1;\nexport default function createPulseOscillator() {\n    const node = this.createOscillator();\n    node.type = \"sawtooth\";\n\n    const pulseShaper = this.createWaveShaper();\n    pulseShaper.curve = pulseCurve;\n    node.connect(pulseShaper);\n    const widthGain = this.createGain();\n    widthGain.gain.value = 0;\n    node.width = widthGain.gain;\n    node.widthGain = widthGain;\n    widthGain.connect(pulseShaper);\n\n    const constantOneShaper = this.createWaveShaper();\n    constantOneShaper.curve = constantOneCurve;\n    node.connect(constantOneShaper);\n    constantOneShaper.connect(widthGain);\n\n    node.connect = function() {\n        pulseShaper.connect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    node.disconnect = function() {\n        pulseShaper.disconnect.apply(pulseShaper, arguments);\n        return node;\n    };\n\n    return node;\n}","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\nimport { listenToFirstAudioParam } from '../portHelpers';\nimport styles from './styles';\n\nconst convertKnobValueToTime = value => Math.pow(value, 4) * 15 + 0.001;\n\nclass ADSR extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._adsr = props.audioContext.createConstantSource();\n        this._adsr.offset.value = 0;\n        this.handleGateInChange = this.handleGateInChange.bind(this);        \n    }\n\n    componentDidMount() {\n        const { id, registerInputs, registerOutputs } = this.props;\n        this._adsr.start();\n        registerInputs(id, {\n            Gate: {\n                connect: audioNode => this._gateInterval = listenToFirstAudioParam(audioNode, this.handleGateInChange),\n                disconnect: () => {\n                    if (this._gateInterval) {\n                        clearInterval((this._gateInterval));\n                        this._gateInterval = null;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._adsr\n        });\n    }\n\n    handleGateInChange(value) {\n        const { sustain, audioContext } = this.props;\n        const attack = convertKnobValueToTime(this.props.attack);\n        const decay = convertKnobValueToTime(this.props.decay);\n        const release = convertKnobValueToTime(this.props.release);       \n        const now = audioContext.currentTime;\n        const offset = this._adsr.offset;\n\n        if (value === 1) {\n            offset.cancelScheduledValues(0);\n            offset.linearRampToValueAtTime(0, now + 0.01);\n            offset.linearRampToValueAtTime(1, now + attack);\n            offset.linearRampToValueAtTime(sustain, now + attack + decay);\n        } else if (value === 0) {\n            offset.cancelScheduledValues(0);\n            offset.setValueAtTime(offset.value, now);\n            offset.linearRampToValueAtTime(0, now + release);\n        }\n    }\n\n    render() {\n        const { id, connections, attack, setAttack, decay, setDecay,\n            sustain, setSustain, release, setRelease } = this.props;\n        return <div style={styles.container}>\n            <span>ADSR</span>\n            <div style={styles.body}>\n                Attack:\n                <Knob min={0} max={1} step={0.001} value={attack} onChange={value => setAttack(value)} width={30}\n                      height={30}/>\n                Decay:\n                <Knob min={0} max={1} step={0.001} value={decay} onChange={value => setDecay(value)} width={30}\n                      height={30}/>\n                Sustain:\n                <Knob min={0} max={1} step={0.01} value={sustain} onChange={value => setSustain(Number(value))}\n                      width={30} height={30}/>\n                Release:\n                <Knob min={0} max={1} step={0.001} value={release} onChange={value => setRelease(Number(value))}\n                      width={30} height={30}/>\n                <div style={styles.spaceAround}>\n                    <Port portId='Gate' connections={connections} moduleId={id} portType='input'/>\n                    <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof ConstantSourceNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('attack', 'setAttack', 0.5),\n    withState('decay', 'setDecay', 0.5),\n    withState('sustain', 'setSustain', 0.5),\n    withState('release', 'setRelease', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(ADSR);","export function listenToFirstAudioParam(audioNode, callback)\n{\n    let interval = null;\n    for (let p in audioNode) {\n        if (audioNode[p] instanceof AudioParam) {\n            let lastValue = audioNode[p].value;\n            callback(lastValue);\n            interval = setInterval(() => {\n                if (lastValue !== audioNode[p].value) {\n                    lastValue = audioNode[p].value;\n                    callback(lastValue);\n                }\n            }, 0);\n            break;\n        }\n    }\n    return interval;\n}","import React, { Component } from 'react';\nimport { compose, setStatic } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport styles from './styles';\n\nclass VCA extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n        this._gain = props.audioContext.createGain();\n    }\n\n    componentDidMount() {\n        const { id, registerInputs, registerOutputs, audioContext } = this.props;\n\n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._gain),\n                disconnect: audioNode => audioNode.disconnect(this._gain)\n            },\n            CV: {\n                connect: audioNode => {\n                    this._gain.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.01);\n                    audioNode.connect(this._gain.gain);\n                },\n                disconnect: audioNode => {\n                    this._gain.gain.linearRampToValueAtTime(1, audioContext.currentTime + 0.01);\n                    audioNode.disconnect(this._gain.gain);\n\n                    // Workaround:\n                    // If the connected audio node is being disconnected before finishing its changes (etc. linearRampToValueAtTime in release phase) it won't effect any more\n                    if (audioNode.offset)\n                    {\n                        audioNode.offset.value = 0;\n                    }\n                }\n            }\n        });\n        registerOutputs(id, {\n           Out: this._gain\n        });\n    }\n\n    render() {\n        const { id, connections } = this.props;\n        return <div style={styles.container}>\n            <span>VCA</span>\n            <div style={styles.body}>\n                <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='CV' connections={connections} moduleId={id} portType='input'/>\n                <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n            </div>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]    \n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof GainNode !== 'undefined'),\n    setStatic('panelWidth', 4),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n    )(VCA);","import React, { Component } from 'react';\nimport { compose, setStatic, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { connectModules, registerInputs, registerOutputs } from '../actions';\nimport Port from '../../Common/Port';\nimport Knob from '../../Common/Knob';\n\nconst QUAL_MUL = 30;\n\nclass VCF extends Component {\n    constructor(props) {\n        super(props);\n        if (!props.audioContext) throw new Error(\"audioContext property must be provided\");\n\n        this._vcf = props.audioContext.createBiquadFilter();  \n        this._vcf.type = \"lowpass\";\n        this._vcf.Q.value = 0.5;\n        this.handleFrequencyChange = this.handleFrequencyChange.bind(this);\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n        this.setPitch = this.setPitch.bind(this);\n        this.handleQChange = this.handleQChange.bind(this);\n        this.setQuality = this.setQuality.bind(this);       \n    }\n\n    componentDidMount() {\n        const { id, registerInputs, registerOutputs } = this.props;        \n        registerInputs(id, {\n            In: {\n                connect: audioNode => audioNode.connect(this._vcf),\n                disconnect: audioNode => audioNode.disconnect(this._vcf)\n            },\n        });\n        registerOutputs(id, {\n           Out: this._vcf\n        });\n    }\n\n    handleFrequencyChange(value) {\n        this.props.setFrequency(Number(value), this.setPitch);\n    }\n\n    setPitch()\n    {\n        const { frequency, audioContext } = this.props;\n        // Clamp the frequency between the minimum value (40 Hz) and half of the\n        // sampling rate.\n        const minValue = 40;\n        const maxValue = audioContext.sampleRate / 2;\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        const numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        const multiplier = Math.pow(2, numberOfOctaves * (frequency - 1.0));\n        // Get back to the frequency value between min and max.\n        this._vcf.frequency.setValueAtTime(maxValue * multiplier, audioContext.currentTime);\n    }\n\n    handleQChange(value) {\n        this.props.setQ(Number(value), this.setQuality);\n    }\n\n    handleTypeChange({ target: { value }}) {\n        this.props.setType(value);\n        this._vcf.type = value;\n    }\n\n    setQuality()\n    {\n        const { q } = this.props;\n        this._vcf.Q.value = q * QUAL_MUL;\n    }\n\n    render() {\n        const { id, connections, type, frequency, q } = this.props;        \n        return <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <span>VCF</span>\n            Shape:\n            <select value={type} onChange={this.handleTypeChange}>\n                <option value='lowpass'>Low Pass</option>\n                <option value='highpass'>High Pass</option>\n            </select>\n            Frequency:\n            <Knob min={0} max={1} step={0.01} value={frequency} onChange={value => this.handleFrequencyChange(value)}/>\n            Q:\n            <Knob min={0} max={1} step={0.01} value={q} onChange={value => this.handleQChange(value)}/>\n            <Port portId='In' connections={connections} moduleId={id} portType='input'/>\n            <Port portId='Out' connections={connections} moduleId={id} portType='output'/>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }, ownProps) => ({\n    connections: modules.connections[ownProps.id]\n});\n\nexport default compose(\n    setStatic('isBrowserSupported', typeof BiquadFilterNode !== 'undefined'),\n    setStatic('panelWidth', 6),\n    withState('type', 'setType', 'lowpass'),\n    withState('frequency', 'setFrequency', 0.1),\n    withState('q', 'setQ', 0.5),\n    connect(mapStateToProps, { connectModules, registerInputs, registerOutputs })\n)(VCF);","import * as R from 'ramda';\nimport VCO from './Components/VCO';\nimport StereoAudioInterface from './Components/StereoAudioInterface';\nimport MonoAudioInterface from './Components/MonoAudioInterface';\nimport Keyboard from './Components/Keyboard';\nimport ADSR from './Components/ADSR';\nimport VCA from './Components/VCA';\nimport VCF from './Components/VCF';\n\nexport const MODULE_TYPE = {\n    VCO: 'VCO',\n    STEREO_AUDIO_INTERFACE: 'STEREO_AUDIO_INTERFACE',\n    MONO_AUDIO_INTERFACE: 'MONO_AUDIO_INTERFACE',\n    KEYBOARD: 'KEYBOARD',\n    ADSR: 'ADSR',\n    VCA: 'VCA',\n    VCF: 'VCF'\n};\n\nconst moduleCounters = R.map(R.always(1))(MODULE_TYPE);\n\nconst ONE_HP_IN_PIXELS = 20;\n\nexport const createModule = ({ type, id = undefined }) => {\n    const module = { id: id || `${type}${moduleCounters[type]}` };\n    switch (type){\n        case MODULE_TYPE.VCO:\n            module.Module = VCO;\n            break;\n        case MODULE_TYPE.STEREO_AUDIO_INTERFACE:\n            module.Module = StereoAudioInterface;\n            break;\n        case MODULE_TYPE.MONO_AUDIO_INTERFACE:\n            module.Module = MonoAudioInterface;\n            break;\n        case MODULE_TYPE.KEYBOARD:\n            module.Module = Keyboard;\n            break;\n        case MODULE_TYPE.ADSR:\n            module.Module = ADSR;\n            break;\n        case MODULE_TYPE.VCF:\n            module.Module = VCF;\n            break;\n        case MODULE_TYPE.VCA:\n            module.Module = VCA;\n            break;\n        default:\n            throw new Error(`Cannot create module of type: ${type}`)\n    }\n    if (!module.Module.isBrowserSupported) return null;\n\n    module.width = module.Module.panelWidth * ONE_HP_IN_PIXELS;\n    moduleCounters[type]++;\n    return module;\n};\n","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport { createModule } from './moduleFactory';\nimport * as R from 'ramda';\n\nconst initialState = {\n    modules: {},\n    connections: {},\n    startingPort: null,\n    maxLeft: 20,\n    racks: [[], []]\n};\n\nconst removeLastConnection = R.curry(({ moduleId, portId }, connections) => R.when(\n    R.pathSatisfies(R.complement(R.isNil), [moduleId, portId]),\n    R.pipe(\n        R.path([moduleId, portId]),\n        input => R.dissocPath([input.moduleId, input.portId], connections)\n    ))(connections));\n\nexport default handleActions({\n    [ActionTypes.ADD_MODULE]: (state, { moduleType, id, rackId = 0 }) => {\n        const newModule = createModule({ type: moduleType, id });\n        if (!newModule) {\n            window.alert(`Your browser doesn't support this module: ${moduleType}`);\n            return state;\n        }\n\n        newModule.left = state.maxLeft;\n        return R.evolve({\n            modules: R.assoc(newModule.id, newModule),\n            connections: R.assoc(newModule.id, {}),\n            maxLeft: R.add(newModule.width),\n            racks: R.adjust(rackId, R.append(newModule.id))\n        })(state);\n    },\n\n    [ActionTypes.REGISTER_INPUTS]: (state, { id, inputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('inputs', inputs)\n        })\n    })(state),\n\n    [ActionTypes.REGISTER_OUTPUTS]: (state, { id, outputs }) => R.evolve({\n        modules: R.evolve({\n            [id]: R.assoc('outputs', outputs)\n        })\n    })(state),\n\n    [ActionTypes.CONNECT_MODULES]: (state, { input, output }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(output),\n            removeLastConnection(input),\n            R.evolve({\n                [input.moduleId]: R.assoc(input.portId, { moduleId: output.moduleId, portId: output.portId, counter: 0 }),\n                [output.moduleId]: R.assoc(output.portId, { moduleId: input.moduleId, portId: input.portId, counter: 0 })\n            }))\n    })(state),\n\n    [ActionTypes.DISCONNECT_MODULE]: (state, { port }) => R.evolve({\n        connections: R.pipe(\n            removeLastConnection(port),\n            R.evolve({\n                [port.moduleId]: R.dissoc(port.portId)\n            })\n        )\n    })(state),\n\n    [ActionTypes.SET_STARTING_PORT]: (state, { port }) => R.evolve({\n        startingPort: R.always(port)\n    })(state),\n\n    [ActionTypes.UNSET_STARTING_PORT]: (state) => R.evolve({\n        startingPort: R.always(null)\n    })(state),\n\n    [ActionTypes.MOVE_MODULE]: (state, { moduleId, x, rackId }) => {        \n        const prevLeft = state.modules[moduleId].left;\n        const moduleWidth = state.modules[moduleId].width;\n        const newLeft = prevLeft + Math.floor((x - prevLeft) / 20) * 20;\n        const newRight = newLeft + moduleWidth;    \n\n        if (newRight > window.innerWidth) return state;\n        \n        const isSpaceInUse = R.pipe(\n            R.values,\n            R.any(\n            ({ id, left, width }) => {\n                const right = left + width;\n                return id !== moduleId && R.contains(id, state.racks[rackId]) && (\n                    (left >= newLeft && left < newRight) ||\n                    (left < newLeft && right > newLeft) ||\n                    (left === newLeft && right === newRight)\n                );\n            }\n        ))(state.modules);\n        if (isSpaceInUse) return state;\n\n        return R.evolve({\n            modules: {\n                [moduleId]: {\n                    left: R.always(newLeft)\n                }\n            },\n            connections: {\n                [moduleId]: R.map(R.evolve({ counter: R.inc }))\n            },\n            racks: racks => {\n                const oldRackId = R.findIndex(R.contains(moduleId), racks);\n                if (oldRackId === rackId) return racks;\n                return R.pipe(\n                    R.adjust(oldRackId, R.without([moduleId])),\n                    R.adjust(rackId, R.append(moduleId))\n                )(racks);\n            },\n            maxLeft: R.max(newLeft + state.modules[moduleId].width)\n        })(state);\n    },\n\n    [ActionTypes.REMOVE_MODULE]: (state, { moduleId }) => {\n        const removedModule = state.modules[moduleId];\n\n        return R.evolve({\n            modules: R.dissoc(moduleId),\n            racks: racks => {\n                const rackId = R.findIndex(R.contains(moduleId), racks);\n                return R.adjust(rackId, R.without([moduleId]))(racks);\n            },\n            maxLeft: lastValue => removedModule.left + removedModule.width === lastValue ? removedModule.left : lastValue\n        })(state);\n    }\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\nimport * as R from 'ramda';\n\nconst initialState = {\n    cables: {}\n};\n\nexport default handleActions({\n\n    [ActionTypes.ADD_CABLE]: (state, { portId, fromPoint, color }) => R.evolve({\n        cables: R.assoc(portId, { portId, fromPoint, toPoint: fromPoint, color })\n    })(state),\n\n    [ActionTypes.MODIFY_CABLE]: (state, { portId, fromPoint, toPoint, toPortId }) => R.evolve({\n        cables: R.evolve({\n            [portId]: R.merge(R.__, R.reject(R.isNil, ({ fromPoint, toPoint, toPortId })))\n        })\n    })(state),\n\n    [ActionTypes.REMOVE_CABLE]: (state, { portId }) => R.evolve({\n        cables: R.dissoc(portId)\n    })(state)\n\n}, initialState);","import { handleActions } from 'redux-actions';\nimport * as ActionTypes from '../actionTypes';\n// import * as R from 'ramda';\n\nconst initialState = {\n    presetLoading: false,\n    isDirty: false\n};\n\nconst setDirty = isDirty => state => ({ ...state, isDirty });\n\nexport default handleActions({\n    [ActionTypes.LOAD_PRESET_START]: state => ({ ...state, presetLoading: true }),\n    [ActionTypes.LOAD_PRESET_FINISH]: state => ({ ...setDirty(false)(state), presetLoading: false  }),\n    [ActionTypes.REMOVE_MODULE]: setDirty(true),\n    [ActionTypes.ADD_MODULE]: setDirty(true),\n    [ActionTypes.REMOVE_CABLE]: setDirty(true),\n    [ActionTypes.ADD_CABLE]: setDirty(true)\n}, initialState);","import { combineReducers } from 'redux';\nimport modules from './Modules/reducer';\nimport cables from './Cables/reducer'\nimport rack from './Synth/reducer';\n\nexport default combineReducers({ modules, cables, rack });","import * as R from 'ramda';\nimport * as actionType from './actionTypes';\n\nconst middleware = ({ getState }) => next => action => {\n    switch  (action.type) {\n        case actionType.CONNECT_MODULES: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.input.moduleId, 'inputs', action.input.portId])(modules);\n            const output = R.path([action.output.moduleId, 'outputs', action.output.portId])(modules);\n\n            R.pipe(\n                R.path([action.output.moduleId, action.output.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    lastInput => lastInput.disconnect(output)\n                ))\n            )(connections);\n            R.pipe(\n                R.path([action.input.moduleId, action.input.portId]),\n                R.unless(R.isNil, R.pipe(\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    lastOutput => input.disconnect(lastOutput)\n                ))\n            )(connections);\n\n            if (input && output)\n            {\n                input.connect(output);\n            }\n            break;\n        }\n        case actionType.DISCONNECT_MODULE: {\n            const { modules, connections } = getState().modules;\n            const input = R.path([action.port.moduleId, 'inputs', action.port.portId])(modules);\n            if (input) {\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'outputs', portId])(modules),\n                    output => input.disconnect(output)\n                )(connections);\n            }\n            else {\n                const output = R.path([action.port.moduleId, 'outputs', action.port.portId])(modules);\n                R.pipe(\n                    R.path([action.port.moduleId, action.port.portId]),\n                    ({ moduleId, portId }) => R.path([moduleId, 'inputs', portId])(modules),\n                    input => input.disconnect(output)\n                )(connections);\n            }\n            break;\n        }\n        default:\n            break;        \n    }\n\n    return next(action);\n};\n\nexport default middleware;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst middlewareChain = [\n    thunk,\n    middleware\n];\n\nexport default createStore(reducer, applyMiddleware(...middlewareChain));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addModule } from '../actions';\nimport { MODULE_TYPE } from '../moduleFactory';\n\nconst ModulePicker = ({ addModule }) => <div>\n    <button onClick={() => addModule(MODULE_TYPE.KEYBOARD) }>Add Keyboard</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCO) }>Add VCO</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCA) }>Add VCA</button>\n    <button onClick={() => addModule(MODULE_TYPE.ADSR) }>Add ADSR</button>\n    <button onClick={() => addModule(MODULE_TYPE.VCF) }>Add VCF</button>   \n    <button onClick={() => addModule(MODULE_TYPE.STEREO_AUDIO_INTERFACE) }>Add Stereo Audio Interface</button>\n    <button onClick={() => addModule(MODULE_TYPE.MONO_AUDIO_INTERFACE) }>Add Mono Audio Interface</button>\n</div>;\n\nexport default connect(null, { addModule })(ModulePicker);\n","import React from 'react';\n\nconst calculateMidpoint = (fromPoint, toPoint) => {\n    const lowestPoint = fromPoint.y > toPoint.y ? fromPoint : toPoint;\n    const highestPoint = fromPoint.y < toPoint.y ? fromPoint : toPoint;\n    const midpointY = 0.1 * Math.abs(toPoint.x - fromPoint.x) + Math.abs(fromPoint.y - toPoint.y) / 0.4;\n    let distance = 0.5 + Math.log(1 + Math.abs((toPoint.y - fromPoint.y) / (toPoint.x - fromPoint.x))) / (3 * Math.log(2));\n    distance = lowestPoint.x < highestPoint.x ? 1 - distance : distance;\n    const direction = fromPoint.x < toPoint.x ? 1 : -1;\n    const midpointX = direction * distance * Math.abs(fromPoint.x - toPoint.x) || fromPoint.x;\n    return `${midpointX} ${midpointY}`;\n};\n\nconst Cable = ({ fromPoint, toPoint, color }) =>\n    <path\n        d={`M${fromPoint.x} ${fromPoint.y} q ${calculateMidpoint(fromPoint, toPoint)} ${toPoint.x - fromPoint.x} ${toPoint.y - fromPoint.y}`}\n        opacity={0.6} stroke={color} fill='transparent' strokeWidth={6}/>;\nexport default Cable;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as R from 'ramda';\nimport Cable from './Cable';\n\nconst CablesContainer = ({ cables, scrollLeft, scrollTop }) =>\n    <svg style={{ position: 'absolute', left: -scrollLeft, top: 0, width: `calc(100% + ${scrollLeft}px)`, height: `calc(100% + ${scrollTop}px)`, pointerEvents: 'none' }}>\n        {cables.map(({ portId, fromPoint, toPoint, color }) => <Cable key={portId} fromPoint={fromPoint} toPoint={toPoint} color={color}/>)}\n    </svg>;\n\nconst mapStateToProps = ({ cables }) => ({\n    cables: R.values(cables.cables)\n});\n\nexport default connect(mapStateToProps, {})(CablesContainer);","import { MODULE_TYPE } from '../Modules/moduleFactory';\n\nexport default {\n  Basic: {\n      modules: [\n          { type: MODULE_TYPE.KEYBOARD, id: 'KEYBOARD1' },\n          { type: MODULE_TYPE.VCO, id: 'VCO1' },\n          { type: MODULE_TYPE.VCF, id: 'VCF1' },\n          { type: MODULE_TYPE.ADSR, id: 'ADSR1' },\n          { type: MODULE_TYPE.VCA, id: 'VCA1' },\n          { type: MODULE_TYPE.MONO_AUDIO_INTERFACE, id: 'MONO_AUDIO_INTERFACE1' }\n      ],\n      connections: [\n          { input: { moduleId: 'VCO1', portId: 'V/Oct' }, output: { moduleId: 'KEYBOARD1', portId: 'CV' } },\n          { input: { moduleId: 'VCF1', portId: 'In' }, output: { moduleId: 'VCO1', portId: 'Sine' } },\n          { input: { moduleId: 'ADSR1', portId: 'Gate' }, output: { moduleId: 'KEYBOARD1', portId: 'Gate' } },\n          { input: { moduleId: 'VCA1', portId: 'In' }, output: { moduleId: 'VCF1', portId: 'Out' } },\n          { input: { moduleId: 'VCA1', portId: 'CV' }, output: { moduleId: 'ADSR1', portId: 'Out' } },\n          { input: { moduleId: 'MONO_AUDIO_INTERFACE1', portId: 'In' }, output: { moduleId: 'VCA1', portId: 'Out' } }\n      ]\n  }\n};","import * as R from 'ramda';\nimport { addModule, connectModules, removeAllModules } from '../Modules/actions';\nimport { addCable, modifyCable } from '../Cables/actions';\nimport randomColor from 'randomcolor';\nimport { LOAD_PRESET_START, LOAD_PRESET_FINISH } from \"../actionTypes\";\n\nconst connectModulesAndCables = R.curry((dispatch, connection) => {\n    const { input, output } = connection;\n    dispatch(connectModules(connection));\n\n    const fromPortId = `${input.moduleId}-${input.portId}`;\n    const fromElem = document.getElementById(fromPortId).getBoundingClientRect();\n    dispatch(addCable({\n        portId: fromPortId,\n        color: randomColor({ luminosity: 'dark' }),\n        fromPoint: {\n            x: fromElem.x + fromElem.width / 2,\n            y: fromElem.y + fromElem.height / 2\n        }\n    }));\n\n    const toElem = document.getElementById(`${output.moduleId}-${output.portId}`).getBoundingClientRect();\n    dispatch(modifyCable({\n        portId: fromPortId,\n        toPortId: `${output.moduleId}-${output.portId}`,\n        toPoint: {\n            x: toElem.x + toElem.width / 2,\n            y: toElem.y + toElem.height / 2\n        }\n    }));\n});\n\nexport const loadPreset = preset => (dispatch, getState) => {\n    dispatch({ type: LOAD_PRESET_START });\n    dispatch(removeAllModules());\n    setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n};\n\nconst checkIfAllModulesRemoves = (dispatch, getState, preset) => () => {\n    if (!R.isEmpty(getState().modules.modules)) {\n        setTimeout(checkIfAllModulesRemoves(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(module => dispatch(addModule(module.type, module.id)))(preset.modules);\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n};\n\nconst checkIfModulesCreated = (dispatch, getState, preset) => () => {\n    const stateModuleIds = R.map(R.prop('id'), getState().modules.modules);\n    const moduleIds = R.map(R.prop('id'), preset.modules);\n\n    if (!R.isEmpty(R.difference(stateModuleIds, moduleIds))) {\n        setTimeout(checkIfModulesCreated(dispatch, getState, preset), 10);\n    }\n    else {\n        R.forEach(connectModulesAndCables(dispatch))(preset.connections);\n        setTimeout(checkIfAllConnected(dispatch, getState, preset.connections), 50);\n    }\n};\n\nconst checkIfAllConnected = (dispatch, getState, connections) => () => {\n    const stateConnections = getState().modules.connections;\n    const allConnected  = R.all(connection => {\n        const stateConnection = stateConnections[connection.input.moduleId];\n        if (!stateConnection) return false;\n\n        const port = stateConnection[connection.input.portId];\n        return port && port.moduleId === connection.output.moduleId && port.portId === connection.output.portId;\n    }, connections);\n\n    if (!allConnected) {\n        setTimeout(checkIfAllConnected(dispatch, getState, connections), 10);\n    } else {\n        dispatch({ type: LOAD_PRESET_FINISH });\n    }\n};","import React, { Component } from 'react';\nimport * as R from 'ramda';\nimport { compose, withState } from 'recompose';\nimport defaultPresets from '../defaultPresets';\nimport { connect } from 'react-redux';\nimport { loadPreset } from '../actions';\n\nclass PresetManager extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.handlePresetChange = this.handlePresetChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        const { isDirty, setPreset, presetLoading } = this.props;\n        if (!presetLoading && isDirty && !prevProps.isDirty)\n        {\n            setPreset('');\n        }\n    }\n\n    handlePresetChange({ target: { value } })\n    {\n        const { loadPreset, setPreset } = this.props;\n        setPreset(value);\n        loadPreset(defaultPresets[value]);\n    }\n\n    render()\n    {\n        const { preset } = this.props;\n        return <div>\n            <select value={preset} onChange={this.handlePresetChange}>\n                {\n                    preset === '' && <option value=''>Select Preset</option>\n                }\n                { R.pipe(\n                    R.keys,\n                    R.map(p => <option key={p} value={p}>{p}</option>)\n                )(defaultPresets) }\n            </select>\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ rack }) => ({\n    isDirty: rack.isDirty,\n    presetLoading: rack.presetLoading\n});\n\nexport default compose(\n    withState('preset', 'setPreset', ''),\n    connect(mapStateToProps, { loadPreset })\n)(PresetManager);","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Panel.css';\nimport { connect } from 'react-redux';\nimport { removeModule } from '../Modules/actions';\n\nconst Screw = () => <img alt='screw' src={require('./screw_header.svg')} height={14} width={14} style={{ margin: 5 }} />;\n\nconst PanelEdge = ({ children }) => <div className='panel_edge'>\n    <Screw />\n    {children}\n    <Screw />\n</div>;\n\nconst Panel = ({ children, dragging, setDragging, width, left, removeModule, moduleId }) => <div className='module-panel'\n    style={{ width, left, cursor: dragging ? 'grabbing' : 'grab' }}\n    onMouseDown={() => setDragging(true)} onMouseUp={() => setDragging(false)}>\n    <PanelEdge>\n        <span onClick={() => removeModule(moduleId)} className=\"btn_delete_module\"><FontAwesomeIcon size='xs' icon='trash' /></span>\n    </PanelEdge>\n    <div className='panel_content'>\n        {children}\n    </div>\n    <PanelEdge />\n</div>;\n\nexport default connect(null, { removeModule })(Panel);","const createVoltToFreqExpCurve = baseFrequency => {\n    const BUFFER_LENGTH = 8192;\n    const curve = new Float32Array(BUFFER_LENGTH);\n    for (let i = 0; i < BUFFER_LENGTH; i++) {\n        const normalized = (i / (BUFFER_LENGTH - 1)) * 4 - 2;\n        curve[i] = baseFrequency * Math.pow(2, normalized);\n    }\n    return curve;\n};\n\nexport default function createVoltToHzConverter(baseFrequency, octaves) {\n    const node = this.createConstantSource();\n    node.volt = node.offset;\n    const voltToFreqWaveshaper = this.createWaveShaper();\n    const voltScale = this.createGain();\n    voltToFreqWaveshaper.curve = createVoltToFreqExpCurve(baseFrequency);\n    voltScale.gain.value = 1 / octaves;\n    node.connect(voltScale).connect(voltToFreqWaveshaper);\n\n    node.connect = function() {\n        voltToFreqWaveshaper.connect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n\n    node.disconnect = function() {\n        voltToFreqWaveshaper.disconnect.apply(voltToFreqWaveshaper, arguments);\n        return voltScale;\n    };\n    return node;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose, withState } from 'recompose';\nimport * as R from 'ramda';\nimport ModulePicker from '../../Modules/Components/ModulePicker';\nimport CablesContainer from '../../Cables/Components/CablesContainer';\nimport PresetManager from './PresetManager';\nimport { unsetStartingPort, moveModule } from '../../Modules/actions';\nimport { modifyCable, removeCable } from '../../Cables/actions';\nimport './Rack.css';\nimport Panel from \"../../Common/Panel\";\nimport createPulseOscillator from '../helpers/createPulseOscillator';\nimport createVoltToHzConverter from '../helpers/createVoltToHzConverter';\n\nclass Synth extends Component {\n    constructor(props) {\n        super(props);\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        this._audioContext = new AudioContext();\n        this._audioContext.createPulseOscillator = createPulseOscillator;\n        this._audioContext.createVoltToHzConverter = createVoltToHzConverter;\n\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleDragging = this.handleDragging.bind(this);\n        this.handleRackScroll = this.handleRackScroll.bind(this);\n\n        window.onscroll = e => console.log(props.setScrollTop(window.scrollY));\n\n        //temp\n        this._analyser = this._audioContext.createAnalyser();\n        window.analyser = this._analyser;\n        window.visuallize = this.visuallize = this.visuallize.bind(this);\n    }\n\n    visuallize() {\n        const canvas = this._canvas;\n        const canvasCtx = canvas.getContext(\"2d\");\n        const analyser = this._analyser;\n\n        analyser.fftSize = 1024;\n        const dataArray = new Float32Array(analyser.frequencyBinCount);\n        canvas.width = dataArray.length;\n        canvas.height = 200;\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n        function draw() {\n            setTimeout(() => window.v = requestAnimationFrame(draw), 300);\n\n            analyser.getFloatTimeDomainData(dataArray);\n\n            canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n            canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n\n            canvasCtx.lineWidth = 2;\n            canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n\n            canvasCtx.beginPath();\n\n            let x = 0;\n\n            for (let i = 0; i < dataArray.length; i++) {\n\n                x = i;\n                const y = (0.5 + dataArray[i] / 2) * HEIGHT;\n\n                if (i === 0) {\n                    canvasCtx.moveTo(x, y);\n                }\n                else {\n                    canvasCtx.lineTo(x, y);\n                }\n            }\n\n            canvasCtx.stroke();\n        }\n\n        draw();\n    }\n\n    handleMouseUp() {\n        const { unsetStartingPort, removeCable, startingPort } = this.props;\n        if (!startingPort) return;\n        removeCable(`${startingPort.moduleId}-${startingPort.portId}`);\n        unsetStartingPort();\n    }\n\n    handleMouseMove(e) {\n        this.moveCable(e);\n        this.dragModule(e);\n    }\n\n    moveCable(e) {\n        const { modifyCable, startingPort } = this.props;\n        if (!startingPort) return;\n        modifyCable({\n            portId: `${startingPort.moduleId}-${startingPort.portId}`,\n            toPoint: { x: e.clientX, y: e.clientY }\n        });\n    }\n\n    dragModule(e) {\n        const { draggingModuleId, moveModule, activeRackId } = this.props;\n        if (!draggingModuleId) return;\n        moveModule(draggingModuleId, e.clientX, activeRackId);\n    }\n\n    handleDragging(moduleId) {\n        return isDragging => {\n            this.props.setDraggingModuleId(isDragging ? moduleId : null);\n        }\n    }\n\n    handleRackScroll(e) {        \n        this.props.setScrollLeft(e.target.scrollLeft);\n    }\n\n    render() {\n        const { racks, modules, draggingModuleId, scrollLeft, scrollTop, setActiveRackId } = this.props;\n        return <div onMouseUp={this.handleMouseUp} onMouseMove={this.handleMouseMove} onScroll={this.handleRackScroll}>\n            <ModulePicker />\n            <PresetManager />\n            <div>\n                <div style={{ overflowX: 'scroll' }}>\n                    {\n                        racks.map((moduleIds, rackId) =>\n                            <div key={rackId} className='rack' style={{ width: `calc(100% + ${scrollLeft}px)` }} onMouseEnter={() => setActiveRackId(rackId)}>\n                                {\n                                    moduleIds.map(id => {\n                                        const { Module, width, left } = modules[id];\n                                        return <Panel key={id}\n                                            rackId={rackId}\n                                            moduleId={id}\n                                            setDragging={this.handleDragging(id)}\n                                            dragging={id === draggingModuleId}\n                                            width={width} left={left}>\n                                            <Module id={id} audioContext={this._audioContext} />\n                                        </Panel>;\n                                    })\n                                }\n                            </div>\n                        )\n                    }\n                </div>\n                <CablesContainer scrollLeft={scrollLeft} scrollTop={scrollTop}/>\n            </div>\n            <canvas ref={ref => this._canvas = ref} className=\"visualizer\" width=\"640\" height=\"100\" />\n        </div>;\n    }\n}\n\nconst mapStateToProps = ({ modules }) => ({\n    modules: modules.modules,\n    racks: modules.racks,\n    startingPort: modules.startingPort\n});\nexport default compose(\n    withState('draggingModuleId', 'setDraggingModuleId', null),\n    withState('scrollLeft', 'setScrollLeft', 0),\n    withState('scrollTop', 'setScrollTop', 0),\n    withState('activeRackId', 'setActiveRackId', 0),\n    connect(mapStateToProps, { modifyCable, removeCable, unsetStartingPort, moveModule })\n)(Synth);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Synth from './Synth/Components/Synth';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nlibrary.add(faTrash);\n\nclass App extends Component {\n    render()\n    {\n        return (\n            <Provider store={store}>\n                <div className=\"App\">\n                    <Synth/>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}